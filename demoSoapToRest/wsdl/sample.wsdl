<definitions xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:tns="urn:tsoIntegrator" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns="http://schemas.xmlsoap.org/wsdl/" targetNamespace="urn:tsoIntegrator">
<types>
<xsd:schema targetNamespace="urn:tsoIntegrator">
<xsd:import namespace="http://schemas.xmlsoap.org/soap/encoding/"/>
<xsd:import namespace="http://schemas.xmlsoap.org/wsdl/"/>
<xsd:complexType name="user">
<xsd:all>
<xsd:element name="api_key" type="xsd:string" parms="api_key" description="API key provided by astutepayroll.com"/>
<xsd:element name="api_username" type="xsd:string" parms="api_username" description="API username provided by astutepayroll.com"/>
<xsd:element name="api_password" type="xsd:string" parms="api_password" description="API password provided by astutepayroll.com"/>
<xsd:element name="api_transaction_id" type="xsd:string" parms="api_transaction_id" minOccurs="0" description="Transaction identifier (Optional)"/>
</xsd:all>
</xsd:complexType>
<xsd:complexType name="userGet">
<xsd:all>
<xsd:element name="api_key" type="xsd:string" parms="api_key" description="API key provided by astutepayroll.com"/>
<xsd:element name="api_username" type="xsd:string" parms="api_username" description="API username provided by astutepayroll.com"/>
<xsd:element name="api_password" type="xsd:string" parms="api_password" description="API password provided by astutepayroll.com"/>
<xsd:element name="api_transaction_id" type="xsd:string" parms="api_transaction_id" minOccurs="0" description="Transaction identifier (Optional)"/>
<xsd:element name="query" type="xsd:string" parms="query" minOccurs="0" maxLength="500" description=" "/>
</xsd:all>
</xsd:complexType>
<xsd:complexType name="results">
<xsd:all>
<xsd:element name="ResultCode" type="xsd:int" parms="ResultCode" description=" "/>
<xsd:element name="Results" type="xsd:string" parms="Results" description=" "/>
</xsd:all>
</xsd:complexType>
<xsd:complexType name="userSave">
<xsd:all>
<xsd:element name="api_key" type="xsd:string" parms="api_key" description="API key provided by astutepayroll.com"/>
<xsd:element name="api_username" type="xsd:string" parms="api_username" description="API username provided by astutepayroll.com"/>
<xsd:element name="api_password" type="xsd:string" parms="api_password" description="API password provided by astutepayroll.com"/>
<xsd:element name="api_transaction_id" type="xsd:string" parms="api_transaction_id" minOccurs="0" description="Transaction identifier (Optional)"/>
<xsd:element name="id" type="xsd:string" parms="id" minOccurs="0" maxLength="50" description="ID is the internal ID used to represent employees. Use UserQuery to find an ID"/>
<xsd:element name="remoteid" type="xsd:string" parms="remoteid" minOccurs="0" maxLength="100" description="A remote ID allows you to maintain consistency by storing your primary ID in our database."/>
<xsd:element name="update_remoteid" type="xsd:string" parms="update_remoteid" minOccurs="0" maxLength="100" description="Updates the remote id of a record when saving an existing record. Note that you cannot update the remote id using the â€˜remoteidâ€™ field as this is used to determine the record to be updated."/>
<xsd:element name="USERTYPE" type="xsd:string" parms="USERTYPE" maxLength="10" description="Valid values are EMPLOYEE, APPROVER, and RECRUITER"/>
<xsd:element name="job_code" type="xsd:string" parms="job_code" minOccurs="0" maxLength="50" description="A remote ID to identify the job to maintain consistency by storing your primary ID in our database."/>
<xsd:element name="update_job_code" type="xsd:string" parms="update_job_code" minOccurs="0" maxLength="100" description="Updates the job code of a record when saving an existing record. Note that you cannot update the job code using the â€˜job_codeâ€™ field as this is used to determine the record to be updated."/>
<xsd:element name="SendNewUserEmail" type="xsd:string" parms="SendNewUserEmail" minOccurs="0" maxLength="1" description="When provided, this will override the global preference to send new user emails. To use the system default, do NOT include this in your request."/>
<xsd:element name="name_first" type="xsd:string" parms="name_first" minOccurs="0" maxLength="50" description="First (given) name of the Employee"/>
<xsd:element name="name_middle" type="xsd:string" parms="name_middle" minOccurs="0" maxLength="50" description="Optional middle name(s) of the Employee"/>
<xsd:element name="name_last" type="xsd:string" parms="name_last" minOccurs="0" maxLength="50" description="Surname (family) name of the Employee"/>
<xsd:element name="known_as" type="xsd:string" parms="known_as" minOccurs="0" maxLength="200" description="The optional name by which this employee is commonly referred to"/>
<xsd:element name="gender" type="xsd:string" parms="gender" minOccurs="0" maxLength="1" description="Optional identified gender of the Employee (0 for Not stated or inadequately described, 1 or M for Male, 2 or F for Female, 3 for Intersex or Indeterminate)"/>
<xsd:element name="date_birth" type="xsd:date" parms="date_birth" minOccurs="0" description="The Employee's Date of Birth. Not mandatory"/>
<xsd:element name="email" type="xsd:string" parms="email" minOccurs="0" maxLength="100" description="The employee's email address for all system notifications except Payslips IF the employee has nominated an alternative email address for Payslips. IF the employee has NOT nominated another email address for payslips then they will be sent to this email address."/>
<xsd:element name="payslip_email" type="xsd:string" parms="payslip_email" minOccurs="0" maxLength="100" description="Option email address for Payslips. IF the employee has NOT nominated another email address for payslips then they will be sent to the primary email address, even if email_opt_out is set."/>
<xsd:element name="email_opt_out" type="xsd:string" parms="email_opt_out" minOccurs="0" maxLength="1" description="Will stop all emails EXCEPT payslips from being sent to this employee. Payslips override the opt out UNLESS there is an alternative email address entered into the payslip email address"/>
<xsd:element name="sms_opt_out" type="xsd:string" parms="sms_opt_out" minOccurs="0" maxLength="1" description="Will stop all SMS notifications from being sent to this employee. Please provide 1 (yes) or 0 (no). If blank value is provided the employee will receive SMS notifications."/>
<xsd:element name="phone_country_code" type="xsd:string" parms="phone_country_code" minOccurs="0" maxLength="4" description="The country code (eg +61) for the main phone number of the employee."/>
<xsd:element name="phone_mobile" type="xsd:string" parms="phone_mobile" minOccurs="0" maxLength="20" description="The main phone number of the employee including any in-country area code (but not the country code)"/>
<xsd:element name="mobile_country_code" type="xsd:string" parms="mobile_country_code" minOccurs="0" maxLength="4" description="The country code (eg +61) for the mobile phone number of the employee."/>
<xsd:element name="mobile_phone" type="xsd:string" parms="mobile_phone" minOccurs="0" maxLength="20" description="Mobile phone number of the employee including any in-country area code (but not the country code)"/>
<xsd:element name="address_street" type="xsd:string" parms="address_street" minOccurs="0" maxLength="255" description="The postal address of the contact, printed on the invoice."/>
<xsd:element name="address_locality" type="xsd:string" parms="address_locality" minOccurs="0" description="The suburb, city, town of the contact. Printed on the invoice."/>
<xsd:element name="address_region" type="xsd:string" parms="address_region" minOccurs="0" maxLength="10" description="The state, county, region of the contact. Printed on the invoice. Use ListRegions for a list of valid address regions."/>
<xsd:element name="address_postcode" type="xsd:string" parms="address_postcode" minOccurs="0" maxLength="10" description="The postal code of the contact. Printed on the invoice."/>
<xsd:element name="password" type="xsd:string" parms="password" minOccurs="0" maxLength="1000" description="the password for the employee - this should be left blank"/>
<xsd:element name="kin_name" type="xsd:string" parms="kin_name" minOccurs="0" maxLength="100" description="The name of the next of Kin"/>
<xsd:element name="kin_address_street" type="xsd:string" parms="kin_address_street" minOccurs="0" maxLength="255" description="The postal address of the Employee's next of Kin."/>
<xsd:element name="kin_address_locality" type="xsd:string" parms="kin_address_locality" minOccurs="0" maxLength="50" description="The suburb, city, town of the Employee's next of Kin."/>
<xsd:element name="kin_address_region" type="xsd:string" parms="kin_address_region" minOccurs="0" maxLength="10" description="The state, county, region of the Employee's next of Kin. Use ListRegions for a list of valid address regions."/>
<xsd:element name="kin_address_postcode" type="xsd:string" parms="kin_address_postcode" minOccurs="0" maxLength="10" description="The postal code of the Employee's next of Kin."/>
<xsd:element name="kin_phone" type="xsd:string" parms="kin_phone" minOccurs="0" maxLength="10" description="The phone number of the next of kin"/>
<xsd:element name="kin_email" type="xsd:string" parms="kin_email" minOccurs="0" maxLength="100" description="The next of kin's email address"/>
<xsd:element name="kin_relationship" type="xsd:string" parms="kin_relationship" minOccurs="0" maxLength="30" description="the relationship between the employee and the next of kin"/>
<xsd:element name="employer" type="xsd:string" parms="employer" minOccurs="0" maxLength="100" description="The Biller (Customer) where the employee will be working."/>
<xsd:element name="job_title" type="xsd:string" parms="job_title" minOccurs="0" maxLength="100" description="This is the job Title for the employee. It is not mandatory."/>
<xsd:element name="workplace_street" type="xsd:string" parms="workplace_street" minOccurs="0" maxLength="255" description="The postal address of the workplace - this will automatically flow down from the workplace set up in the customer or can be manually entered or overwritten here."/>
<xsd:element name="workplace_locality" type="xsd:string" parms="workplace_locality" minOccurs="0" maxLength="50" description="The suburb, city, town of the workplace - this will automatically flow down from the workplace set up in the customer or can be manually entered or overwritten here."/>
<xsd:element name="workplace_region" type="xsd:string" parms="workplace_region" minOccurs="0" maxLength="10" description="The state, county, region of the workplace - this will automatically flow down from the workplace set up in the customer or can be manually entered or overwritten here. Use ListRegions for a list of valid address regions."/>
<xsd:element name="workplace_postcode" type="xsd:string" parms="workplace_postcode" minOccurs="0" maxLength="10" description="The postal code of the workplace - this will automatically flow down from the workplace set up in the customer or can be manually entered or overwritten here."/>
<xsd:element name="logo" type="xsd:string" parms="logo" minOccurs="0" maxLength="50" description="This allows you to set a logo to be used on Timesheets for this Job. This is typically the Billers (Customers) logo where they require dual branding "/>
<xsd:element name="date_start" type="xsd:date" parms="date_start" minOccurs="0" description="The start date of the Employee's job. Mandatory."/>
<xsd:element name="date_finish" type="xsd:date" parms="date_finish" minOccurs="0" description="The finish date of the Employee's job. Can be set to a date or left blank if an end date is not known"/>
<xsd:element name="manager_user_id" type="xsd:string" parms="manager_user_id" minOccurs="0" maxLength="50" description="The Primary Approver - this person is responsible for approving timesheets and expenses."/>
<xsd:element name="manager2_user_id" type="xsd:string" parms="manager2_user_id" minOccurs="0" maxLength="50" description="The secondary approver - this person will be required to approve timesheets and expenses should the primary person fail to approve in time."/>
<xsd:element name="group_manager_user_id" type="xsd:string" parms="group_manager_user_id" minOccurs="0" maxLength="50" description="The UID of the Group Manager - this is a Recruiter or Portal Administrator login. This person will be able to see information about the Employee's job."/>
<xsd:element name="recruiter_user_id" type="xsd:string" parms="recruiter_user_id" minOccurs="0" maxLength="50" description="The id to set the primary consultant associated with this job"/>
<xsd:element name="recruiter2_user_id" type="xsd:string" parms="recruiter2_user_id" minOccurs="0" maxLength="50" description="The id to set the second consultant associated with this job. Requires recruiter margin split module and at least two recruiters to be enabled"/>
<xsd:element name="recruiter2_margin_split" type="xsd:decimal" parms="recruiter2_margin_split" minOccurs="0" description="This enables you to set the % split that will be assigned to the second consultant in reports. Provide a number without a percentage symbol - e.g. 5 for 5%. Requires recruiter margin split module to be enabled."/>
<xsd:element name="recruiter3_user_id" type="xsd:string" parms="recruiter3_user_id" minOccurs="0" maxLength="50" description="The id to set the third consultant associated with this job. Requires recruiter margin split module and at least three recruiters to be enabled"/>
<xsd:element name="recruiter3_margin_split" type="xsd:decimal" parms="recruiter3_margin_split" minOccurs="0" description="This enables you to set the % split that will be assigned to the third consultant in reports. Provide a number without a percentage symbol - e.g. 5 for 5%. Requires recruiter margin split module to be enabled."/>
<xsd:element name="recruiter4_user_id" type="xsd:string" parms="recruiter4_user_id" minOccurs="0" maxLength="50" description="The id to set the forth consultant associated with this job. Requires recruiter margin split module and at least four recruiters to be enabled"/>
<xsd:element name="recruiter4_margin_split" type="xsd:decimal" parms="recruiter4_margin_split" minOccurs="0" description="This enables you to set the % split that will be assigned to the forth consultant in reports. Provide a number without a percentage symbol - e.g. 5 for 5%. Requires recruiter margin split module to be enabled."/>
<xsd:element name="recruiter5_user_id" type="xsd:string" parms="recruiter5_user_id" minOccurs="0" maxLength="50" description="The id to set the fifth consultant associated with this job. Requires recruiter margin split module and at least five recruiters to be enabled"/>
<xsd:element name="recruiter5_margin_split" type="xsd:decimal" parms="recruiter5_margin_split" minOccurs="0" description="This enables you to set the % split that will be assigned to the fifth consultant in reports. Provide a number without a percentage symbol - e.g. 5 for 5%. Requires recruiter margin split module to be enabled."/>
<xsd:element name="employment_type" type="xsd:string" parms="employment_type" minOccurs="0" description="This enables you to set the employment type for the employee to either Contingent or Permanent. This is very important for managing permissions as only the Payroll Administrator and Payroll Officer will be able to see any information about Permanent employees."/>
<xsd:element name="permission_group" type="xsd:string" parms="permission_group" minOccurs="0" description="TODO: This enables you to set the permission group for the employee. This will determine whether the Payroll Administrator and/or Payroll Office will be able to see the employee"/>
<xsd:element name="residency" type="xsd:string" parms="residency" minOccurs="0" maxLength="50" description=" "/>
<xsd:element name="pay_rate" type="xsd:decimal" parms="pay_rate" minOccurs="0" description="This is the amount that the employee will be paid. It needs to be the base rate excluding super or GST."/>
<xsd:element name="pay_type" type="xsd:string" parms="pay_type" minOccurs="0" description="Allows you to set whether the employee is a PAYG employee who will be part of the payroll, or a Subcontractor with an ABN who will have an associated Supplier who will be paid via a Supplier Invoice."/>
<xsd:element name="SID" type="xsd:int" parms="SID" minOccurs="0" description="Supplier ID is the internal ID used to represent Suppliers. Use SupplierQuery to find a SID. This will associate a Supplier to the employee. This is required where the Pay Type is set to Sub Contractor with an ABN."/>
<xsd:element name="subcontractor_entity" type="xsd:string" parms="subcontractor_entity" minOccurs="0" description="This is the associated Supplier. See SID."/>
<xsd:element name="pay_oncosts_percent" type="xsd:decimal" parms="pay_oncosts_percent" minOccurs="0" description="Percentage of pay rate used for oncosts. This field allows you to enter an amount for additional costs such as superanuation and taxes. It is used in reports to determine the profit or margin being made (Margin = Charge Rate - Pay Rate - Oncosts ). 10 percent should be entered as 10 - not 0.1 or 10%."/>
<xsd:element name="pay_oncosts" type="xsd:decimal" parms="pay_oncosts" minOccurs="0" description="Deprecated - please use pay_oncosts_percent. Oncosts dollar value. If provided we will convert to a percentage of the pay rate. If the pay rate is $0, the oncosts percentage will be 0%."/>
<xsd:element name="pay_charge_rate" type="xsd:decimal" parms="pay_charge_rate" minOccurs="0" description="The charge rate for the Job. This is the rate that will be used for invoicing. It needs to be the base rate excluding any tax."/>
<xsd:element name="pay_rate_interval" type="xsd:string" parms="pay_rate_interval" minOccurs="0" description="This sets whether the timesheets used will be 'Hourly', 'Daily', or 'Piecework'. The field in the UI is called Timesheet Type [Users > Employees > Job > Job Details]"/>
<xsd:element name="pay_cycle" type="xsd:int" parms="pay_cycle" minOccurs="0" description="This sets the frequency of payments to employees and assists in associating the relevant tax tables. The field in the UI is called Pay Cycle [Users > Employees > Employment]. Values here are PCYID values from a PayCycleQuery."/>
<xsd:element name="pay_frequency" type="xsd:string" parms="pay_frequency" minOccurs="0" description="Deprecated. Use pay_cycle instead."/>
<xsd:element name="pay_notes" type="xsd:string" parms="pay_notes" minOccurs="0" maxLength="255" description="this allows you to record notes pertaining to the Employee's payroll. This will appear in the employee pays report and other areas of the payroll module."/>
<xsd:element name="account_name" type="xsd:string" parms="account_name" minOccurs="0" maxLength="50" description="The account name for the Employee's bank account. This is where wages paid."/>
<xsd:element name="account_bsb" type="xsd:string" parms="account_bsb" minOccurs="0" maxLength="6" description="The BSB number for the Employee's bank account. This is where wages paid."/>
<xsd:element name="account_number" type="xsd:string" parms="account_number" minOccurs="0" maxLength="9" description="The account number for the Employee's bank account. This is where wages paid."/>
<xsd:element name="secondary_account_name" type="xsd:string" parms="secondary_account_name" minOccurs="0" maxLength="50" description="The account name for the Employee's second bank account. This is where a portion of wages will be paid. Wages are paid the accounts in reverse order - so first payment is the % or the $ amount into the third account, then the % or the $ amount into the second, with the remaining paid into the first account."/>
<xsd:element name="secondary_account_bsb" type="xsd:string" parms="secondary_account_bsb" minOccurs="0" maxLength="6" description="The BSB number for the Employee's second bank account. This is where a portion of wages will be paid. Wages are paid the accounts in reverse order - so first payment is the % or the $ amount into the third account, then the % or the $ amount into the second, with the remaining paid into the first account."/>
<xsd:element name="secondary_account_number" type="xsd:string" parms="secondary_account_number" minOccurs="0" maxLength="9" description="The account number for the Employee's second bank account. This is where a portion of wages will be paid. Wages are paid the accounts in reverse order - so first payment is the % or the $ amount into the third account, then the % or the $ amount into the second, with the remaining paid into the first account."/>
<xsd:element name="deposit_amount" type="xsd:decimal" parms="deposit_amount" minOccurs="0" description="The dollar or percentage of the Employee's pay to be paid into the associated bank account"/>
<xsd:element name="deposit_type" type="xsd:int" parms="deposit_type" minOccurs="0" description="Sets whether the deposit amont is a dollar or a percentage"/>
<xsd:element name="tertiary_account_name" type="xsd:string" parms="tertiary_account_name" minOccurs="0" maxLength="50" description="The account name for the Employee's third bank account. This is where a portion of wages will be paid. Wages are paid the accounts in reverse order - so first payment is the % or the $ amount into the third account, then the % or the $ amount into the second, with the remaining paid into the first account."/>
<xsd:element name="tertiary_account_bsb" type="xsd:string" parms="tertiary_account_bsb" minOccurs="0" maxLength="6" description="The BSB number for the Employee's third bank account. This is where a portion of wages will be paid. Wages are paid the accounts in reverse order - so first payment is the % or the $ amount into the third account, then the % or the $ amount into the second, with the remaining paid into the first account."/>
<xsd:element name="tertiary_account_number" type="xsd:string" parms="tertiary_account_number" minOccurs="0" maxLength="9" description="The account number for the Employee's third bank account. This is where a portion of wages will be paid. Wages are paid the accounts in reverse order - so first payment is the % or the $ amount into the third account, then the % or the $ amount into the second, with the remaining paid into the first account."/>
<xsd:element name="tertiary_deposit_amount" type="xsd:decimal" parms="tertiary_deposit_amount" minOccurs="0" description="The dollar or percentage of the Employee's pay to be paid into the associated bank account"/>
<xsd:element name="tertiary_deposit_type" type="xsd:int" parms="tertiary_deposit_type" minOccurs="0" description="Sets whether the deposit amont is a dollar or a percentage"/>
<xsd:element name="super_provider" type="xsd:string" parms="super_provider" minOccurs="0" maxLength="50" description="Deprecated. This was the Employee's superannuation fund's name - please use super_name."/>
<xsd:element name="super_product" type="xsd:string" parms="super_product" minOccurs="0" maxLength="50" description="This is the name of the Employee's superannuation product"/>
<xsd:element name="super_product_name" type="xsd:string" parms="super_product_name" minOccurs="0" maxLength="50" description="Deprecated. This was the Employee's superannuation fund member number - please use super_member_reference."/>
<xsd:element name="super_usi" type="xsd:string" parms="super_usi" minOccurs="0" maxLength="14" description="This is the Unique Superannuation Identifier (USI) of the Employee's superannuation fund. Required for Australian Prudential Regulation Authority (APRA) regulated funds and Retirement Savings Account (RSA) - i.e. Non-SMSF."/>
<xsd:element name="super_esa" type="xsd:string" parms="super_esa" minOccurs="0" maxLength="50" description="This is the Electronic Service Address (ESA) of the Employee's superannuation fund. Required for Self-managed Superannuation Funds (SMSF)."/>
<xsd:element name="super_phone" type="xsd:string" parms="super_phone" minOccurs="0" maxLength="20" description="This is the phone number of the Employee's superannuation fund"/>
<xsd:element name="super_address1" type="xsd:string" parms="super_address1" minOccurs="0" maxLength="200" description="This is address line 1 of the Employee's superannuation fund"/>
<xsd:element name="super_address2" type="xsd:string" parms="super_address2" minOccurs="0" maxLength="200" description="This is address line 2 of the Employee's superannuation fund"/>
<xsd:element name="super_address3" type="xsd:string" parms="super_address3" minOccurs="0" maxLength="200" description="This is address line 3 of the Employee's superannuation fund"/>
<xsd:element name="super_state" type="xsd:string" parms="super_state" minOccurs="0" maxLength="7" description="The state of the Employee's superannuation fund"/>
<xsd:element name="super_postcode" type="xsd:string" parms="super_postcode" minOccurs="0" maxLength="4" description="The postal code of the Employee's superannuation fund"/>
<xsd:element name="super_abn" type="xsd:string" parms="super_abn" minOccurs="0" maxLength="11" description="This is the ABN of the Employee's superannuation fund"/>
<xsd:element name="super_name" type="xsd:string" parms="super_name" minOccurs="0" maxLength="100" description="This is the name of the Employee's superannuation fund"/>
<xsd:element name="super_member_reference" type="xsd:string" parms="super_member_reference" minOccurs="0" maxLength="50" description="This is the member reference of the Employee's superannuation fund, for a non-SMSF"/>
<xsd:element name="super_account_name" type="xsd:string" parms="super_account_name" minOccurs="0" maxLength="150" description="This is the name on the Employee's superannuation fund account, for a non-SMSF"/>
<xsd:element name="super_spin" type="xsd:string" parms="super_spin" minOccurs="0" maxLength="9" description="Deprecated. This was the SPIN of the Employee's superannuation fund"/>
<xsd:element name="super_smsf" type="xsd:int" parms="super_smsf" minOccurs="0" description="Boolean. This is to indicate if a self-managed superfund is being paid: 1 (SMSF), 0 (Non-SMSF). Default 0"/>
<xsd:element name="super_payment_bsb" type="xsd:string" parms="super_payment_bsb" minOccurs="0" maxLength="6" description="This is the BSB for payments to the superfund for this employee, visible to the employee for a SMSF"/>
<xsd:element name="super_payment_account" type="xsd:string" parms="super_payment_account" minOccurs="0" maxLength="9" description="This is the account number for payments to the superfund for this employee, visible to the employee for a SMSF"/>
<xsd:element name="super_payment_reference" type="xsd:string" parms="super_payment_reference" minOccurs="0" maxLength="18" description="This is the payment reference for payments to the superfund for this employee, visible to the employee for a SMSF"/>
<xsd:element name="tfn" type="xsd:string" parms="tfn" minOccurs="0" maxLength="11" description="This is the Employee's Tax File Number which is required by the Australian Taxation Office to identify payments for this employee"/>
<xsd:element name="BID" type="xsd:int" parms="BID" minOccurs="0" description="Set the associated billers - use BillerQuery to search for BID"/>
<xsd:element name="BCID" type="xsd:int" parms="BID" minOccurs="0" description="Set the associated billers - use BillerContactsQuery to search for BCID"/>
<xsd:element name="billing_entity" type="xsd:string" parms="billing_entity" minOccurs="0" maxLength="50" description="This is the Billing Entity that the job will be invoiced from. The Billing Entity is the Portal Owner\s Company. There may be multiple Billing Entities. This is a mandatory field."/>
<xsd:element name="billing_abn" type="xsd:string" parms="billing_abn" minOccurs="0" maxLength="11" description="The Australian Business Number of the Biller (Customer)"/>
<xsd:element name="billing_contact" type="xsd:string" parms="billing_contact" minOccurs="0" maxLength="100" description="The name by which the Default Billing Contact is addressed. Eg. 'John Smith' or 'Mrs Jane Doe'. The Default Billing Contact is typically ignored when information is pushed through the Web Service."/>
<xsd:element name="billing_email" type="xsd:string" parms="billing_email" minOccurs="0" maxLength="100" description="The email address of this contact - used for sending invoices via email."/>
<xsd:element name="tax_payroll_exempt" type="xsd:string" parms="tax_payroll_exempt" minOccurs="0" maxLength="1" description="This enables you to set an employee as Payroll Tax Exempt. This will flow through to the astute payroll module."/>
<xsd:element name="accept_terms" type="xsd:dateTime" parms="accept_terms" minOccurs="0" description="This is a record that indicates that the user has submitted all required employment forms. It is unlikely that this will be activated through the API."/>
<xsd:element name="ready" type="xsd:string" parms="ready" minOccurs="0" maxLength="1" description="This enables you to set the employee as Payroll Ready. The system will send Not Payroll Ready emails to the employee until this is checked. It is unlikely that this will be set through the Web Service."/>
<xsd:element name="tax_table" type="xsd:string" parms="tax_table" minOccurs="0" maxLength="50" description="This enables you to select the Tax Table for the employee"/>
<xsd:element name="tax_variation_value" type="xsd:decimal" parms="tax_variation_value" minOccurs="0" description="The tax variation percentage to use, when using the Withholding Variation tax table."/>
<xsd:element name="account_code" type="xsd:string" parms="account_code" minOccurs="0" maxLength="50" description="This is the General Ledger Expense Account Code - it is often required for exporting purchase invoices into GL accounting systems such as MYOB."/>
<xsd:element name="subcontractor_nogst" type="xsd:string" parms="subcontractor_nogst" minOccurs="0" maxLength="1" description=" "/>
<xsd:element name="WID" type="xsd:int" parms="WID" minOccurs="0" description="Set the Asscoaited billers workplace - use BillerWorkplaceQuery to search for WID"/>
<xsd:element name="AID" type="xsd:int" parms="AID" minOccurs="0" description="Used to set the assigned Award - use RuleGroupQuery to get a RGID to provide for the AID argument"/>
<xsd:element name="billers_ponum" type="xsd:string" parms="billers_ponum" minOccurs="0" maxLength="32" description="Customer Purchase Order"/>
<xsd:element name="CM_CID" type="xsd:int" parms="CM_CID" minOccurs="0" description="The assigned entity for billing and reporting - use CompanyEntityQuery to find CM_CID"/>
<xsd:element name="payroll_CM_CID" type="xsd:int" parms="payroll_CM_CID" minOccurs="0" description="The assigned entity for payroll purposes - use CompanyEntityQuery to find CM_CID"/>
<xsd:element name="branding_CM_CID" type="xsd:int" parms="branding_CM_CID" minOccurs="0" description="The assigned entity for branding of employee interactions - use CompanyEntityQuery to find CM_CID. Send 0 to default to the payroll entity."/>
<xsd:element name="OL_OID" type="xsd:int" parms="OL_OID" minOccurs="0" description="The assigned occupation- use OccupationQuery to search for OL_OID"/>
<xsd:element name="consolidation_code" type="xsd:string" parms="consolidation_code" minOccurs="0" description="Primary consolidation code for job - used above any other consolidation setting"/>
<xsd:element name="subentityOne_id" type="xsd:int" parms="subentityOne_id" minOccurs="0" description="First level of corporate organisation"/>
<xsd:element name="subentityTwo_id" type="xsd:int" parms="subentityTwo_id" minOccurs="0" description="Second level of corporate organisation"/>
<xsd:element name="job_income_account_code" type="xsd:string" parms="job_income_account_code" minOccurs="0" maxLength="50" description="GL income account code associated with the job"/>
<xsd:element name="job_expense_account_code" type="xsd:string" parms="job_expense_account_code" minOccurs="0" maxLength="50" description="GL expense account code associated with the job"/>
<xsd:element name="engagement" type="xsd:string" parms="engagement" minOccurs="0" maxLength="9" description="The Employee's engagement option: Casual, Part Time, Full Time or Labour Hire"/>
<xsd:element name="fixedpayitem_enabled" type="xsd:string" parms="fixedpayitem_enabled" minOccurs="0" maxLength="1"/>
<xsd:element name="leaverequest_enabled" type="xsd:string" parms="leaverequest_enabled" minOccurs="0" maxLength="1" description="Whether the job is used to accrue leave. (0 if it should not be used, 1 if it should)"/>
<xsd:element name="timesheet_enabled" type="xsd:string" parms="timesheet_enabled" minOccurs="0" maxLength="1"/>
<xsd:element name="timesheet_payroll" type="xsd:string" parms="timesheet_payroll" minOccurs="0" maxLength="1"/>
<xsd:element name="timesheet_invoicing" type="xsd:string" parms="timesheet_invoicing" minOccurs="0" maxLength="1"/>
<xsd:element name="timesheet_start_date" type="xsd:date" parms="date_start" minOccurs="0" description="The first date the job will accept time or interpreted data records. Optional, otherwise the greater of the Job start date or Billing Entity timesheet start date will be used. Send a blank value to remove date."/>
<xsd:element name="split_shifts" type="xsd:string" parms="split_shifts" minOccurs="0" maxLength="1"/>
<xsd:element name="cost_centre" type="xsd:string" parms="cost_centre" minOccurs="0" maxLength="50" description="Cost Centre, primarily used for TechOne integration"/>
<xsd:element name="debtor_code" type="xsd:string" parms="debtor_code" minOccurs="0" maxLength="50" description="Debtor Code, primarily used for TechOne integration"/>
<xsd:element name="bulk_upload_list_id" type="xsd:int" parms="bulk_upload_list_id" minOccurs="0" description="The bulk upload list ID to assign this user to. Send as blank to remove from the list. Not providing it will leave it unchanged."/>
<xsd:element name="timesheet_offset" type="xsd:int" parms="timesheet_offset" minOccurs="0" description="Timesheet start day. For weekly timesheets, 0 = Monday ... 6 = Sunday. For fortnightly, 0 = first Monday .. 13 = second Sunday. For monthly use day of month (1 = 1st, 31 = 31st (or last valid day when less than 31)). Use -1 to get the value from the customer based on the provided BID."/>
<xsd:element name="timesheet_length" type="xsd:string" parms="timesheet_length" minOccurs="0" description="Timesheet length can be 'week', 'fornight' or 'month'."/>
<xsd:element name="PCGID" type="xsd:int" parms="PCGID" minOccurs="0" description="The rate card to assign to the job. Use RateCardQuery to discover appropriate PCGID values"/>
<xsd:element name="expenses_enabled" type="xsd:string" parms="expenses_enabled" minOccurs="0" maxLength="1" description="Allow this employee to submit expense claim reports against this job"/>
<xsd:element name="timesheet_expenses_enabled" type="xsd:string" parms="expenses_enabled" minOccurs="0" maxLength="1" description="Allow this employee to submit expenses on timesheets for this job. Automatically enables expenses_enabled."/>
<xsd:element name="employment_start_date" type="xsd:date" parms="employment_start_date" minOccurs="0" description="The starting date of the Employee's employment."/>
<xsd:element name="termination_date" type="xsd:date" parms="termination_date" minOccurs="0" description="Date of employment termination"/>
<xsd:element name="termination_reason" type="xsd:string" parms="termination_reason" minOccurs="0" maxLength="255" description="Reason for employment terminationthe Employee's employment."/>
<xsd:element name="tax_TID" type="xsd:int" parms="tax_TID" minOccurs="0" maxLength="2" description="The tax applicable on invoices. Setting this to 0 will set to No Tax Applicable."/>
<xsd:element name="holiday_group_id" type="xsd:int" parms="holiday_group_id" minOccurs="0" description="The holiday group to assign to the job. Use HolidayGroupQuery to discover appropriate holiday_group_id values"/>
<xsd:element name="user_custom_field_1" type="xsd:string" parms="user_custom_field_1" minOccurs="0" maxLength="512" description="Custom user field 1"/>
<xsd:element name="user_custom_field_2" type="xsd:string" parms="user_custom_field_2" minOccurs="0" maxLength="512" description="Custom user field 2"/>
<xsd:element name="user_custom_field_3" type="xsd:string" parms="user_custom_field_3" minOccurs="0" maxLength="512" description="Custom user field 3"/>
<xsd:element name="user_custom_field_4" type="xsd:string" parms="user_custom_field_4" minOccurs="0" maxLength="512" description="Custom user field 4"/>
<xsd:element name="user_custom_field_5" type="xsd:string" parms="user_custom_field_5" minOccurs="0" maxLength="512" description="Custom user field 5"/>
<xsd:element name="job_custom_field_1" type="xsd:string" parms="job_custom_field_1" minOccurs="0" maxLength="512" description="Custom job field 1"/>
<xsd:element name="job_custom_field_2" type="xsd:string" parms="job_custom_field_2" minOccurs="0" maxLength="512" description="Custom job field 2"/>
<xsd:element name="job_custom_field_3" type="xsd:string" parms="job_custom_field_3" minOccurs="0" maxLength="512" description="Custom job field 3"/>
<xsd:element name="job_custom_field_4" type="xsd:string" parms="job_custom_field_4" minOccurs="0" maxLength="512" description="Custom job field 4"/>
<xsd:element name="job_custom_field_5" type="xsd:string" parms="job_custom_field_5" minOccurs="0" maxLength="512" description="Custom job field 5"/>
<xsd:element name="gl_group_id" type="xsd:int" parms="gl_group_id" minOccurs="0" description="The gl_group_id for the GL Group to use for employee related data. If this is set to blank or zero, the GL Group will be sourced from the gl_group_fallback field. Use GLGroupQuery to find a gl_group_id."/>
<xsd:element name="gl_group_fallback" type="xsd:string" parms="gl_group_fallback" minOccurs="0" maxLength="45" description="When the gl_group_id is not set, this is where we should get the GL Group for the employee. Valid values are 'payroll_entity', and 'portal'"/>
<xsd:element name="job_gl_group_id" type="xsd:int" parms="job_gl_group_id" minOccurs="0" description="The gl_group_id for the GL Group to use for job related data. If this is set to blank or zero, the GL Group will be sourced from the job_gl_group_fallback field. Use GLGroupQuery to find a job_gl_group_id"/>
<xsd:element name="job_gl_group_fallback" type="xsd:string" parms="job_gl_group_id" minOccurs="0" maxLength="45" description="When the job_gl_group_id is not set, this is where we should get the GL Group for the job. Valid values are 'employee', 'billing_entity', 'payroll_entity', and 'portal'"/>
<xsd:element name="pam_id" type="xsd:string" parms="pam_id" minOccurs="0" description="Set the employee PAM ID"/>
<xsd:element name="job_pam_id" type="xsd:string" parms="job_pam_id" minOccurs="0" description="Set the job PAM ID"/>
<xsd:element name="approve_interpreted_data" type="xsd:string" parms="approve_interpreted_data" minOccurs="0" maxLength="1" description="Set this to Y if approver can approve interpreted data, or N if not. Only applies if the timesheet.approve_interpreted_data.enabled functionality is enabled."/>
<xsd:element name="charge_currency" type="xsd:string" parms="charge_currency" minOccurs="0" minLength="3" maxLength="3" description="The Job charge currency"/>
<xsd:element name="employee_external_timesheet_inbound_id" type="xsd:string" parms="employee_external_timesheet_inbound_id" minOccurs="0" description="ID of this employee in a third party timesheeting system that Astute is receiving data from."/>
<xsd:element name="employee_external_timesheet_outbound_id" type="xsd:string" parms="employee_external_timesheet_outbound_id" minOccurs="0" description="ID of this employee in a third party timesheeting system that Astute is pushing data to."/>
<xsd:element name="employee_external_invoice_inbound_id" type="xsd:string" parms="employee_external_invoice_inbound_id" minOccurs="0" description="ID of this employee in a third party invoicing system that Astute is receiving data from."/>
<xsd:element name="employee_external_invoice_outbound_id" type="xsd:string" parms="employee_external_invoice_outbound_id" minOccurs="0" description="ID of this employee in a third party invoicing system that Astute is pushing data to."/>
<xsd:element name="employee_external_payroll_inbound_id" type="xsd:string" parms="employee_external_payroll_inbound_id" minOccurs="0" description="ID of this employee in a third party payroll system that Astute is receiving data from."/>
<xsd:element name="employee_external_payroll_outbound_id" type="xsd:string" parms="employee_external_payroll_outbound_id" minOccurs="0" description="ID of this employee in a third party payroll system that Astute is pushing data to."/>
<xsd:element name="job_external_timesheet_inbound_id" type="xsd:string" parms="job_external_timesheet_inbound_id" minOccurs="0" description="ID of this job in a third party timesheeting system that Astute is receiving data from."/>
<xsd:element name="job_external_timesheet_outbound_id" type="xsd:string" parms="job_external_timesheet_outbound_id" minOccurs="0" description="ID of this job in a third party timesheeting system that Astute is pushing data to."/>
<xsd:element name="job_external_invoice_inbound_id" type="xsd:string" parms="job_external_invoice_inbound_id" minOccurs="0" description="ID of this job in a third party invoicing system that Astute is receiving data from."/>
<xsd:element name="job_external_invoice_outbound_id" type="xsd:string" parms="job_external_invoice_outbound_id" minOccurs="0" description="ID of this job in a third party invoicing system that Astute is pushing data to."/>
<xsd:element name="job_external_payroll_inbound_id" type="xsd:string" parms="job_external_payroll_inbound_id" minOccurs="0" description="ID of this job in a third party payroll system that Astute is receiving data from."/>
<xsd:element name="job_external_payroll_outbound_id" type="xsd:string" parms="job_external_payroll_outbound_id" minOccurs="0" description="ID of this job in a third party payroll system that Astute is pushing data to."/>
<xsd:element name="employee_full_time_week_MTS_id" type="xsd:int" parms="employee_full_time_week_MTS_id" minOccurs="0" description="The assigned Full Time Week timesheet for the employee - this would be an MTS_id or 0 (zero) if none."/>
<xsd:element name="job_full_time_week_MTS_id" type="xsd:int" parms="job_full_time_week_MTS_id" minOccurs="0" description="The assigned Full Time Week timesheet for the job - this would be an MTS_id or 0 (zero) if none."/>
<xsd:element name="insurance_id" type="xsd:string" parms="insurance_id" minOccurs="0" description="Set the assigned workplace insurance id, use InsuranceQuery to find an insurance id. Cannot be an archived insurance. Passing explicit 0 will clear insurance_id."/>
<xsd:element name="insurance_reference" type="xsd:string" parms="insurance_reference" minOccurs="0" maxLength="30" description="This field allows you to set the reference code for Workplace Insurance."/>
<xsd:element name="insurance_rate" type="xsd:decimal" parms="insurance_rate" minOccurs="0" description="Workplace Insurance rate."/>
</xsd:all>
</xsd:complexType>
<xsd:complexType name="employeeTerminate">
<xsd:all>
<xsd:element name="api_key" type="xsd:string" parms="api_key" description="API key provided by astutepayroll.com"/>
<xsd:element name="api_username" type="xsd:string" parms="api_username" description="API username provided by astutepayroll.com"/>
<xsd:element name="api_password" type="xsd:string" parms="api_password" description="API password provided by astutepayroll.com"/>
<xsd:element name="UID" type="xsd:int" parms="UID" minOccurs="0" description="The internal ID for the employee. Use UserQuery to find the UID"/>
<xsd:element name="remoteid" type="xsd:string" parms="remoteid" minOccurs="0" maxLength="100" description="The external ID for the employee."/>
<xsd:element name="termination_date" type="xsd:date" parms="termination_date" description="Date of employment termination"/>
<xsd:element name="termination_reason" type="xsd:string" parms="termination_reason" maxLength="255" description="Reason for employment termination"/>
</xsd:all>
</xsd:complexType>
<xsd:complexType name="ArchiveEmployee">
<xsd:all>
<xsd:element name="api_key" type="xsd:string" parms="api_key" description="API key provided by astutepayroll.com"/>
<xsd:element name="api_username" type="xsd:string" parms="api_username" description="API username provided by astutepayroll.com"/>
<xsd:element name="api_password" type="xsd:string" parms="api_password" description="API password provided by astutepayroll.com"/>
<xsd:element name="UID" type="xsd:int" parms="UID" minOccurs="0" description="The internal ID for the employee. Use UserQuery to find the UID"/>
<xsd:element name="remoteid" type="xsd:string" parms="remoteid" minOccurs="0" maxLength="100" description="The external ID for the employee."/>
</xsd:all>
</xsd:complexType>
<xsd:complexType name="UnarchiveEmployee">
<xsd:all>
<xsd:element name="api_key" type="xsd:string" parms="api_key" description="API key provided by astutepayroll.com"/>
<xsd:element name="api_username" type="xsd:string" parms="api_username" description="API username provided by astutepayroll.com"/>
<xsd:element name="api_password" type="xsd:string" parms="api_password" description="API password provided by astutepayroll.com"/>
<xsd:element name="UID" type="xsd:int" parms="UID" minOccurs="0" description="The internal ID for the employee. Use UserQuery to find the UID"/>
<xsd:element name="remoteid" type="xsd:string" parms="remoteid" minOccurs="0" maxLength="100" description="The external ID for the employee."/>
</xsd:all>
</xsd:complexType>
<xsd:complexType name="billerSave">
<xsd:all>
<xsd:element name="api_key" type="xsd:string" parms="api_key" description="API key provided by astutepayroll.com"/>
<xsd:element name="api_username" type="xsd:string" parms="api_username" description="API username provided by astutepayroll.com"/>
<xsd:element name="api_password" type="xsd:string" parms="api_password" description="API password provided by astutepayroll.com"/>
<xsd:element name="api_transaction_id" type="xsd:string" parms="api_transaction_id" minOccurs="0" description="Transaction identifier (Optional)"/>
<xsd:element name="remoteid" type="xsd:string" parms="remoteid" minOccurs="0" maxLength="100" description="A remote ID allows you to maintain consistency by storing your primary ID in our database."/>
<xsd:element name="update_remoteid" type="xsd:string" parms="update_remoteid" minOccurs="0" maxLength="100" description="Updates the remote id of a record when saving an existing record. Note that you cannot update the remote id using the â€˜remoteidâ€™ field as this is used to determine the record to be updated."/>
<xsd:element name="outbound_remoteid" type="xsd:string" parms="outbound_remoteid" minOccurs="0" maxLength="255" description="An outbound remote ID refers to the object ID of the third party system that Astute is pushing data to."/>
<xsd:element name="BID" type="xsd:int" parms="BID" minOccurs="0" description="Biller ID is the internal ID used to represent Billers (customers). Use BillerQuery to find a BID"/>
<xsd:element name="parent_BID" type="xsd:int" parms="parent_BID" minOccurs="0" description="Biller ID of the parent entity."/>
<xsd:element name="name" type="xsd:string" parms="name" minOccurs="0" maxLength="50" description="The name of biller company (customer)."/>
<xsd:element name="trading_name" type="xsd:string" parms="trading_name" minOccurs="0" maxLength="50" description="The trading name for biller company (customer)."/>
<xsd:element name="abn" type="xsd:string" parms="abn" minOccurs="0" maxLength="11" description="The Australian Business Number of the Biller (Customer)"/>
<xsd:element name="contact" type="xsd:string" parms="contact" minOccurs="0" maxLength="100" description="The name by which the Default Billing Contact is addressed. Eg. 'John Smith' or 'Mrs Jane Doe'. The Default Billing Contact is typically ignored when information is pushed through the Web Service."/>
<xsd:element name="contact_invoice_name" type="xsd:string" parms="contact_invoice_name" minOccurs="0" maxLength="255" description="The name by which the Default Billing Contact is addressed in invoicing. The Default Billing Contact is typically ignored when information is pushed through the Web Service."/>
<xsd:element name="email" type="xsd:string" parms="email" minOccurs="0" maxLength="100" description="The email address for the Default Billing Contact. The Default Billing Contact is typically ignored when information is pushed through the Web Service."/>
<xsd:element name="tax_payroll_exempt" type="xsd:int" parms="tax_payroll_exempt" minOccurs="0" description="This indicates that this Customer is exempt from Payroll Tax. This is used in the payroll module."/>
<xsd:element name="account_code" type="xsd:string" parms="account_code" minOccurs="0" maxLength="50" description="This is the General Ledger Expense Account Code - it is often required for exporting purchase invoices into GL accounting systems such as MYOB."/>
<xsd:element name="expense_account_code" type="xsd:string" parms="expense_account_code" minOccurs="0" maxLength="50" description="This is the General Ledger Expense Account Code - it is often required for exporting purchase invoices into GL accounting systems such as MYOB."/>
<xsd:element name="billing_street" type="xsd:string" parms="billing_street" minOccurs="0" maxLength="255" description="The first line for street address of the contact, printed on the invoice."/>
<xsd:element name="billing_street_2" type="xsd:string" parms="billing_street_2" minOccurs="0" maxLength="255" description="The second line for street address of the contact, printed on the invoice."/>
<xsd:element name="billing_street_3" type="xsd:string" parms="billing_street_3" minOccurs="0" maxLength="255" description="The third line for street address of the contact, printed on the invoice."/>
<xsd:element name="billing_locality" type="xsd:string" parms="billing_locality" minOccurs="0" maxLength="50" description="The suburb, city, town of the contact. Printed on the invoice."/>
<xsd:element name="billing_region" type="xsd:string" parms="billing_region" minOccurs="0" maxLength="50" description="The state, county, region of the contact. Printed on the invoice. Use ListRegions for a list of valid address regions."/>
<xsd:element name="billing_postcode" type="xsd:string" parms="billing_postcode" minOccurs="0" maxLength="10" description="The postal code of the contact. Printed on the invoice."/>
<xsd:element name="phone" type="xsd:string" parms="phone" minOccurs="0" maxLength="30" description="The phone number of the Customer"/>
<xsd:element name="tax_free" type="xsd:int" parms="tax_free" minOccurs="0" description="This enables you to set the Customer as Tax Free for astutepayroll.com's invoicing system. It is also used on invoices exported out to Xero Accounting but not to other GL systems."/>
<xsd:element name="tax_code" type="xsd:string" parms="tax_code" minOccurs="0" maxLength="20" description="This is the tax code used for the MYOB Integration. Default is GST. At the moment, this ONLY applies to MYOB Accounting Exports."/>
<xsd:element name="invoice_currency" type="xsd:string" parms="invoice_currency" minOccurs="0" maxLength="3" description="This is the currency the customer is invoiced in"/>
<xsd:element name="invoice_term_length" type="xsd:int" parms="invoice_term_length" minOccurs="0" description="The invoice term length for the Customer. This is used on all invoices for this Customer, and overrides the invoice term set up in the config. Leave it blank to use the Central config - only write to this if a specific Customer has a specific requirement."/>
<xsd:element name="invoice_cc_email" type="xsd:string" parms="invoice_cc_email" minOccurs="0" maxLength="100" description="The email address for additional contacts associated with the Default Billing Contact who need to receive a copy of invoices sent to the Default Billing Contact.The Default Billing Contact is typically ignored when information is pushed through the Web Service."/>
<xsd:element name="ponum" type="xsd:string" parms="ponum" minOccurs="0" maxLength="20" description="General Purchase Order - used on invoices and is an option re how to consolidate invoices. This is overwritten by any PO on an Employee's Job."/>
<xsd:element name="debtor_id" type="xsd:string" parms="debtor_id" minOccurs="0" maxLength="15" description="The Debtor Financing ID, as used in the 'Open Ledger Export' report, if not set the internal ID will be used."/>
<xsd:element name="custom_field_1" type="xsd:string" parms="custom_field_1" minOccurs="0" maxLength="512" description="Custom field for integrators"/>
<xsd:element name="custom_field_2" type="xsd:string" parms="custom_field_2" minOccurs="0" maxLength="512" description="Custom field for integrators"/>
<xsd:element name="custom_field_3" type="xsd:string" parms="custom_field_3" minOccurs="0" maxLength="512" description="Custom field for integrators"/>
<xsd:element name="custom_field_4" type="xsd:string" parms="custom_field_4" minOccurs="0" maxLength="512" description="Custom field for integrators"/>
<xsd:element name="custom_field_5" type="xsd:string" parms="custom_field_5" minOccurs="0" maxLength="512" description="Custom field for integrators"/>
<xsd:element name="invoice_template_id" type="xsd:int" parms="invoice_template_id" minOccurs="0" description="When using invoice templates, this field sets the default template for this customer."/>
<xsd:element name="invoice_term_length_condition" type="xsd:int" parms="invoice_term_length_condition" minOccurs="0" description="0 = Default, 1 = Number of days after the invoice sent, 2 = Days after end of the month, 3 = Days before end of the month"/>
<xsd:element name="send_type" type="xsd:int" parms="send_type" minOccurs="0" description="Default method for sending invoices to this customer. 0 = Send link via email, 1 = Send attachment via email, 2 = Send via Post, -1 = Set to portal default. Blank values (or not including a send_type attribute) will leave an existing customer unchanged and will set a new customer to the default."/>
<xsd:element name="tag" type="xsd:string" parms="tag" minOccurs="0" description="A comma seperated list of tags. This field will replace the existing tags if any. To add a tag to a Biller use the BilledTagAdd function"/>
<xsd:element name="CM_CID" type="xsd:int" parms="CM_CID" minOccurs="0" description="The assigned entity for billing and reporting - use CompanyEntityQuery to find CM_CID"/>
<xsd:element name="external_timesheet_inbound_id" type="xsd:string" parms="external_timesheet_inbound_id" minOccurs="0" description="ID of this record in a third party timesheeting system that Astute is receiving data from."/>
<xsd:element name="external_timesheet_outbound_id" type="xsd:string" parms="external_timesheet_outbound_id" minOccurs="0" description="ID of this record in a third party timesheeting system that Astute is pushing data to."/>
<xsd:element name="external_invoice_inbound_id" type="xsd:string" parms="external_invoice_inbound_id" minOccurs="0" description="ID of this record in a third party invoicing system that Astute is receiving data from."/>
<xsd:element name="external_invoice_outbound_id" type="xsd:string" parms="external_invoice_outbound_id" minOccurs="0" description="ID of this record in a third party invoicing system that Astute is pushing data to."/>
<xsd:element name="external_payroll_inbound_id" type="xsd:string" parms="external_payroll_inbound_id" minOccurs="0" description="ID of this record in a third party payroll system that Astute is receiving data from."/>
<xsd:element name="external_payroll_outbound_id" type="xsd:string" parms="external_payroll_outbound_id" minOccurs="0" description="ID of this record in a third party payroll system that Astute is pushing data to."/>
<xsd:element name="invoice_consolidation" type="xsd:string" parms="invoice_consolidation" minOccurs="0" maxLength="20" description="The invoice consolidation method"/>
<xsd:element name="charge_cycle_id" type="xsd:int" parms="charge_cycle_id" minOccurs="0" description="The ID of the Charge Cycle configured to select the one applicable for the customer"/>
<xsd:element name="insurance_id" type="xsd:string" parms="insurance_id" minOccurs="0" description="Set the assigned workplace insurance id, use InsuranceQuery to find an insurance id. Cannot be an archived insurance. Passing explicit 0 will clear insurance_id."/>
</xsd:all>
</xsd:complexType>
<xsd:complexType name="BillerContactsSave">
<xsd:all>
<xsd:element name="api_key" type="xsd:string" parms="api_key" description="API key provided by astutepayroll.com"/>
<xsd:element name="api_username" type="xsd:string" parms="api_username" description="API username provided by astutepayroll.com"/>
<xsd:element name="api_password" type="xsd:string" parms="api_password" description="API password provided by astutepayroll.com"/>
<xsd:element name="api_transaction_id" type="xsd:string" parms="api_transaction_id" minOccurs="0" description="Transaction identifier (Optional)"/>
<xsd:element name="remoteid" type="xsd:string" parms="remoteid" minOccurs="0" maxLength="100" description="A remote ID allows you to maintain consistency by storing your primary ID in our database."/>
<xsd:element name="update_remoteid" type="xsd:string" parms="update_remoteid" minOccurs="0" maxLength="100" description="Updates the remote id of a record when saving an existing record. Note that you cannot update the remote id using the â€˜remoteidâ€™ field as this is used to determine the record to be updated."/>
<xsd:element name="outbound_remoteid" type="xsd:string" parms="outbound_remoteid" minOccurs="0" maxLength="255" description="An outbound remote ID refers to the object ID of the third party system that Astute is pushing data to."/>
<xsd:element name="BCID" type="xsd:int" parms="BCID" minOccurs="0" description="Set the associated billers - use BillerContactsQuery to search for BCID"/>
<xsd:element name="BID" type="xsd:int" parms="BID" minOccurs="0" description="Set the associated billers - use BillerQuery to search for BID"/>
<xsd:element name="name" type="xsd:string" parms="name" minOccurs="0" maxLength="50" description="The name by which this contact is addressed. Eg. 'John Smith' or 'Mrs Jane Doe\"/>
<xsd:element name="invoice_name" type="xsd:string" parms="contact_invoice_name" minOccurs="0" maxLength="255" description="The name by which the Default Billing Contact is addressed in invoicing."/>
<xsd:element name="email" type="xsd:string" parms="email" minOccurs="0" maxLength="100" description="The email address of this contact - used for sending invoices via email."/>
<xsd:element name="phone" type="xsd:string" parms="phone" minOccurs="0" maxLength="30" description="The phone number of this contact - for record keeping only."/>
<xsd:element name="invoice_currency" type="xsd:string" parms="invoice_currency" minOccurs="0" maxLength="3" description="This is the currency the customer is invoiced in"/>
<xsd:element name="invoice_cc_email" type="xsd:string" parms="invoice_cc_email" minOccurs="0" maxLength="100" description="A secondary email address you'd like to receive a copy of all invoices sent to this contact. Useful for sending copies to general AP accounts or archive services."/>
<xsd:element name="trading_name" type="xsd:string" parms="trading_name" minOccurs="0" maxLength="255" description="The trading name for billing group. If set will override the customer's trading name when this contact is used in invoicing."/>
<xsd:element name="address_street" type="xsd:string" parms="address_street" minOccurs="0" maxLength="255" description="The first line for street address of the contact, printed on the invoice."/>
<xsd:element name="address_street_2" type="xsd:string" parms="address_street_2" minOccurs="0" maxLength="255" description="The second line for street address of the contact, printed on the invoice."/>
<xsd:element name="address_street_3" type="xsd:string" parms="address_street_3" minOccurs="0" maxLength="255" description="The third line for street address of the contact, printed on the invoice."/>
<xsd:element name="address_locality" type="xsd:string" parms="address_locality" minOccurs="0" maxLength="50" description="The suburb, city, town of the contact. Printed on the invoice."/>
<xsd:element name="address_region" type="xsd:string" parms="address_region" minOccurs="0" maxLength="10" description="The state, county, region of the contact. Printed on the invoice. Use ListRegions for a list of valid address regions."/>
<xsd:element name="address_postcode" type="xsd:string" parms="address_postcode" minOccurs="0" maxLength="10" description="The postal code of the contact. Printed on the invoice."/>
<xsd:element name="invoice_template_id" type="xsd:int" parms="invoice_template_id" minOccurs="0" description="When using invoice templates, this field sets the default template for this Billing Group."/>
<xsd:element name="custom_field_1" type="xsd:string" parms="custom_field_1" minOccurs="0" maxLength="255" description="Custom field for integrators"/>
<xsd:element name="custom_field_2" type="xsd:string" parms="custom_field_2" minOccurs="0" maxLength="255" description="Custom field for integrators"/>
<xsd:element name="custom_field_3" type="xsd:string" parms="custom_field_3" minOccurs="0" maxLength="255" description="Custom field for integrators"/>
<xsd:element name="custom_field_4" type="xsd:string" parms="custom_field_4" minOccurs="0" maxLength="255" description="Custom field for integrators"/>
<xsd:element name="custom_field_5" type="xsd:string" parms="custom_field_5" minOccurs="0" maxLength="255" description="Custom field for integrators"/>
<xsd:element name="invoice_consolidation" type="xsd:string" parms="invoice_consolidation" minOccurs="0" maxLength="20" description="The invoice consolidation method"/>
</xsd:all>
</xsd:complexType>
<xsd:complexType name="BillerWorkplaceSave">
<xsd:all>
<xsd:element name="api_key" type="xsd:string" parms="api_key" description="API key provided by astutepayroll.com"/>
<xsd:element name="api_username" type="xsd:string" parms="api_username" description="API username provided by astutepayroll.com"/>
<xsd:element name="api_password" type="xsd:string" parms="api_password" description="API password provided by astutepayroll.com"/>
<xsd:element name="api_transaction_id" type="xsd:string" parms="api_transaction_id" minOccurs="0" description="Transaction identifier (Optional)"/>
<xsd:element name="remoteid" type="xsd:string" parms="remoteid" minOccurs="0" maxLength="100" description="A remote ID allows you to maintain consistency by storing your primary ID in our database."/>
<xsd:element name="update_remoteid" type="xsd:string" parms="update_remoteid" minOccurs="0" maxLength="100" description="Updates the remote id of a record when saving an existing record. Note that you cannot update the remote id using the â€˜remoteidâ€™ field as this is used to determine the record to be updated."/>
<xsd:element name="WID" type="xsd:int" parms="WID" minOccurs="0" description="A remote ID allows you to maintain consistency by storing your primary ID in our database. If you ever need to update this record, you can provide the remoteid and we'll update the associated record."/>
<xsd:element name="BID" type="xsd:int" parms="BID" minOccurs="0" description="Biller ID is the internal ID used to represent Billers (customers). Use BillerQuery to find a BID"/>
<xsd:element name="name" type="xsd:string" parms="name" minOccurs="0" maxLength="50" description="The name by which this contact is addressed. Eg. 'John Smith' or 'Mrs Jane Doe'"/>
<xsd:element name="street" type="xsd:string" parms="street" minOccurs="0" maxLength="255" description="The postal address of the contact, printed on the invoice."/>
<xsd:element name="locality" type="xsd:string" parms="locality" minOccurs="0" maxLength="50" description="The suburb, city, town of the contact. Printed on the invoice."/>
<xsd:element name="region" type="xsd:string" parms="region" minOccurs="0" maxLength="50" description="The state, county, region of the contact. Printed on the invoice. Use ListRegions for a list of valid address regions."/>
<xsd:element name="postcode" type="xsd:string" parms="postcode" minOccurs="0" maxLength="10" description="The postal code of the contact. Printed on the invoice."/>
<xsd:element name="insurance_id" type="xsd:string" parms="insurance_id" minOccurs="0" description="Set the assigned workplace insurance id, use InsuranceQuery to find an insurance id. Cannot be an archived insurance. Passing explicit 0 will clear insurance_id."/>
</xsd:all>
</xsd:complexType>
<xsd:complexType name="SupplierSave">
<xsd:all>
<xsd:element name="api_key" type="xsd:string" parms="api_key" description="API key provided by astutepayroll.com"/>
<xsd:element name="api_username" type="xsd:string" parms="api_username" description="API username provided by astutepayroll.com"/>
<xsd:element name="api_password" type="xsd:string" parms="api_password" description="API password provided by astutepayroll.com"/>
<xsd:element name="api_transaction_id" type="xsd:string" parms="api_transaction_id" minOccurs="0" description="Transaction identifier (Optional)"/>
<xsd:element name="remoteid" type="xsd:string" parms="remoteid" minOccurs="0" maxLength="100" description="A remote ID allows you to maintain consistency by storing your primary ID in our database."/>
<xsd:element name="update_remoteid" type="xsd:string" parms="update_remoteid" minOccurs="0" maxLength="100" description="Updates the remote id of a record when saving an existing record. Note that you cannot update the remote id using the â€˜remoteidâ€™ field as this is used to determine the record to be updated."/>
<xsd:element name="SID" type="xsd:int" parms="BID" minOccurs="0" description="Supplier ID is the internal ID used to represent Suppliers. Use SupplierQuery to find a SID"/>
<xsd:element name="name" type="xsd:string" parms="name" minOccurs="0" maxLength="50" description="The name by which this contact is addressed. Eg. 'John Smith' or 'Mrs Jane Doe'"/>
<xsd:element name="abn" type="xsd:string" parms="abn" minOccurs="0" maxLength="11" description="The Australian Business Number of the Supplier"/>
<xsd:element name="is_sole_trader" type="xsd:string" parms="is_sole_trader" minOccurs="0" maxLength="1" description="Indicates whether a supplier is a sole trader"/>
<xsd:element name="contact" type="xsd:string" parms="contact" minOccurs="0" maxLength="100" description="The name by which this contact is addressed. Eg. 'John Smith' or 'Mrs Jane Doe'"/>
<xsd:element name="email" type="xsd:string" parms="email" minOccurs="0" maxLength="100" description="The email address of this contact - used for sending invoices via email."/>
<xsd:element name="account_code" type="xsd:string" parms="account_code" minOccurs="0" maxLength="50" description="This is the General Ledger Expense Account Code - it is often required for exporting purchase invoices into GL accounting systems such as MYOB."/>
<xsd:element name="expense_account_code" type="xsd:string" parms="expense_account_code" minOccurs="0" maxLength="50" description="This is the General Ledger Expense Account Code - it is often required for exporting purchase invoices into GL accounting systems such as MYOB."/>
<xsd:element name="billing_street" type="xsd:string" parms="billing_street" minOccurs="0" maxLength="255" description="The postal address of the contact, printed on the invoice."/>
<xsd:element name="billing_locality" type="xsd:string" parms="billing_locality" minOccurs="0" maxLength="50" description="The suburb, city, town of the contact. Printed on the Supplier invoice."/>
<xsd:element name="billing_region" type="xsd:string" parms="billing_region" minOccurs="0" maxLength="50" description="The state, county, region of the contact. Printed on the invoice. Use ListRegions for a list of valid address regions."/>
<xsd:element name="billing_postcode" type="xsd:string" parms="billing_postcode" minOccurs="0" maxLength="10" description="The postal code of the contact. Printed on the invoice."/>
<xsd:element name="account_name" type="xsd:string" parms="account_name" minOccurs="0" maxLength="50" description="The Account Name for the Supplier's bank account. This is where payments for supplier invoices (Purchases) will be made."/>
<xsd:element name="account_bsb" type="xsd:string" parms="account_bsb" minOccurs="0" maxLength="6" description="The BSB number for the Supplier's bank account. This is where payments for supplier invoices (Purchases) will be made."/>
<xsd:element name="account_number" type="xsd:string" parms="account_number" minOccurs="0" maxLength="9" description="The account number for the Supplier's bank account. This is where payments for supplier invoices (Purchases) will be made."/>
<xsd:element name="pay_notes" type="xsd:string" parms="pay_notes" minOccurs="0" maxLength="255" description="This allows you to record notes detailing any requirements for this supplier"/>
<xsd:element name="nogst" type="xsd:string" parms="tax_payroll_exempt" minOccurs="0" maxLength="1" description="This allows you to set the Supplier as being exempt from GST - this applies to Supplier Invoices."/>
<xsd:element name="tax_code" type="xsd:string" parms="tax_code" minOccurs="0" maxLength="20" description="This is the tax code used for the MYOB Integration. Default is GST. At the moment, this ONLY applies to MYOB Accounting Exports."/>
<xsd:element name="region_code" type="xsd:string" parms="region_code" minOccurs="0" maxLength="2" description="This is the 2 letter region code that stipulates the regulatory region for the supplier."/>
</xsd:all>
</xsd:complexType>
<xsd:complexType name="userDelete">
<xsd:all>
<xsd:element name="api_key" type="xsd:string" parms="api_key" description="API key provided by astutepayroll.com"/>
<xsd:element name="api_username" type="xsd:string" parms="api_username" description="API username provided by astutepayroll.com"/>
<xsd:element name="api_password" type="xsd:string" parms="api_password" description="API password provided by astutepayroll.com"/>
<xsd:element name="api_transaction_id" type="xsd:string" parms="api_transaction_id" minOccurs="0" description="Transaction identifier (Optional)"/>
<xsd:element name="id" type="xsd:string" parms="id" minOccurs="0" description="ID is the internal ID used to represent employees. Use UserQuery to find an ID"/>
<xsd:element name="remoteid" type="xsd:string" parms="remoteid" minOccurs="0" description="A remote ID allows you to maintain consistency by storing your primary ID in our database. If you ever need to update this record, you can provide the remoteid and we'll update the associated record."/>
<xsd:element name="job_code" type="xsd:string" parms="job_code" minOccurs="0" maxLength="50" description=" "/>
</xsd:all>
</xsd:complexType>
<xsd:complexType name="OccupationSave">
<xsd:all>
<xsd:element name="api_key" type="xsd:string" parms="api_key" description="API key provided by astutepayroll.com"/>
<xsd:element name="api_username" type="xsd:string" parms="api_username" description="API username provided by astutepayroll.com"/>
<xsd:element name="api_password" type="xsd:string" parms="api_password" description="API password provided by astutepayroll.com"/>
<xsd:element name="api_transaction_id" type="xsd:string" parms="api_transaction_id" minOccurs="0" description="Transaction identifier (Optional)"/>
<xsd:element name="OL_OID" type="xsd:string" parms="OL_OID" minOccurs="0" description="The assigned occupation- use OccupationQuery to search for OL_OID"/>
<xsd:element name="remoteid" type="xsd:string" parms="remoteid" minOccurs="0" description="A remote ID allows you to maintain consistency by storing your primary ID in our database."/>
<xsd:element name="update_remoteid" type="xsd:string" parms="update_remoteid" minOccurs="0" maxLength="100" description="Updates the remote id of a record when saving an existing record. Note that you cannot update the remote id using the â€˜remoteidâ€™ field as this is used to determine the record to be updated."/>
<xsd:element name="group" type="xsd:string" parms="group" minOccurs="0" description="The Occupation Group"/>
<xsd:element name="name" type="xsd:string" parms="name" description="The Occupation Name"/>
<xsd:element name="region_code" type="xsd:string" parms="name" minOccurs="0" description="The Region Code (mandatory if multi-region is enabled)"/>
<xsd:element name="RGID" type="xsd:int" parms="RGID" minOccurs="0" description="Rule Group ID is the internal ID used to represent Rule Groups. Use RuleGroupQuery to find a RGID"/>
<xsd:element name="PCGID" type="xsd:int" parms="PCGID" minOccurs="0" description="Rate Card Group ID is the internal ID used to represent a Rate Card name. Use RateCardQuery to find a PCGID"/>
<xsd:element name="job_title" type="xsd:string" parms="job_title" minOccurs="0" description="The Job Title of the occupation"/>
<xsd:element name="pay_rate" type="xsd:float" parms="pay_rate" minOccurs="0" description="The Base Pay Rate"/>
<xsd:element name="pay_oncosts_percent" type="xsd:float" parms="pay_oncosts_percent" minOccurs="0" description="Percentage of pay rate used for oncosts. 10 percent should be entered as 10 - not 0.1 or 10%."/>
<xsd:element name="oncosts" type="xsd:float" parms="oncosts" minOccurs="0" description="Deprecated - please use pay_oncosts_percent. Oncosts dollar value. If provided we will convert to a percentage of the pay rate. If the pay rate is $0, the oncosts percentage will be 0%."/>
<xsd:element name="charge_rate" type="xsd:float" parms="charge_rate" minOccurs="0" description="The Base Charge Rate"/>
<xsd:element name="enabled" type="xsd:int" parms="enabled" minOccurs="0" description="Enables or Disables the Occupation."/>
<xsd:element name="insurance_id" type="xsd:string" parms="insurance_id" minOccurs="0" description="Set the assigned workplace insurance id, use InsuranceQuery to find an insurance id. Cannot be an archived insurance. Passing explicit 0 will clear insurance_id."/>
<xsd:element name="insurance_reference" type="xsd:string" parms="insurance_reference" minOccurs="0" description="The Insurance Reference"/>
<xsd:element name="insurance_rate" type="xsd:string" parms="insurance_rate" minOccurs="0" description="The Insurance Rate percentage"/>
</xsd:all>
</xsd:complexType>
<xsd:complexType name="OccupationDelete">
<xsd:all>
<xsd:element name="api_key" type="xsd:string" parms="api_key" description="API key provided by astutepayroll.com"/>
<xsd:element name="api_username" type="xsd:string" parms="api_username" description="API username provided by astutepayroll.com"/>
<xsd:element name="api_password" type="xsd:string" parms="api_password" description="API password provided by astutepayroll.com"/>
<xsd:element name="api_transaction_id" type="xsd:string" parms="api_transaction_id" minOccurs="0" description="Transaction identifier (Optional)"/>
<xsd:element name="OL_OID" type="xsd:string" parms="OL_OID" description="The assigned occupation- use OccupationQuery to search for OL_OID"/>
</xsd:all>
</xsd:complexType>
<xsd:complexType name="OccupationAddRateChange">
<xsd:all>
<xsd:element name="api_key" type="xsd:string" parms="api_key" description="API key provided by astutepayroll.com"/>
<xsd:element name="api_username" type="xsd:string" parms="api_username" description="API username provided by astutepayroll.com"/>
<xsd:element name="api_password" type="xsd:string" parms="api_password" description="API password provided by astutepayroll.com"/>
<xsd:element name="api_transaction_id" type="xsd:string" parms="api_transaction_id" minOccurs="0" description="Transaction identifier (Optional)"/>
<xsd:element name="OL_OID" type="xsd:string" parms="OL_OID" description="The assigned occupation- use OccupationQuery to search for OL_OID"/>
<xsd:element name="pay_rate" type="xsd:float" parms="pay_rate" minOccurs="1" description="The Base Pay Rate"/>
<xsd:element name="pay_oncosts_percent" type="xsd:float" parms="pay_oncosts_percent" minOccurs="0" description="Mandatory. Percentage of pay rate used for oncosts. 10 percent should be entered as 10 - not 0.1 or 10%."/>
<xsd:element name="oncosts" type="xsd:float" parms="oncosts" minOccurs="0" description="Deprecated - please use pay_oncosts_percent. Oncosts dollar value. If provided we will convert to a percentage of the pay rate. If the pay rate is $0, the oncosts percentage will be 0%."/>
<xsd:element name="charge_rate" type="xsd:float" parms="charge_rate" minOccurs="1" description="The Base Charge Rate"/>
<xsd:element name="start_date" type="xsd:date" parms="start_date" minOccurs="1" description="The start date of the Rate."/>
<xsd:element name="finish_date" type="xsd:date" parms="finish_date" minOccurs="0" description="The finish date of the Rate."/>
</xsd:all>
</xsd:complexType>
<xsd:complexType name="tags">
<xsd:sequence>
<xsd:element name="tag" type="xsd:string" minOccurs="0" maxLength="50" maxOccurs="unbounded" description="Tag Name"/>
</xsd:sequence>
<xsd:attribute name="search_type" type="tns:SearchConditionOptions" minOccurs="0"/>
</xsd:complexType>
<xsd:complexType name="searchElement">
<xsd:all>
<xsd:element name="api_key" type="xsd:string" parms="api_key" description="API key provided by astutepayroll.com"/>
<xsd:element name="api_username" type="xsd:string" parms="api_username" description="API username provided by astutepayroll.com"/>
<xsd:element name="api_password" type="xsd:string" parms="api_password" description="API password provided by astutepayroll.com"/>
<xsd:element name="api_transaction_id" type="xsd:string" parms="api_transaction_id" minOccurs="0" description="Transaction identifier (Optional)"/>
<xsd:element name="query" type="xsd:string" parms="query" minOccurs="0" maxLength="500" description=" "/>
<xsd:element name="tags" type="tns:tags" parms="tags" minOccurs="0" description="Tags to search query by"/>
</xsd:all>
</xsd:complexType>
<xsd:complexType name="RateCardAttachmentsQuery">
<xsd:all>
<xsd:element name="api_key" type="xsd:string" parms="api_key" description="API key provided by astutepayroll.com"/>
<xsd:element name="api_username" type="xsd:string" parms="api_username" description="API username provided by astutepayroll.com"/>
<xsd:element name="api_password" type="xsd:string" parms="api_password" description="API password provided by astutepayroll.com"/>
<xsd:element name="api_transaction_id" type="xsd:string" parms="api_transaction_id" minOccurs="0" description="Transaction identifier (Optional)"/>
<xsd:element name="PCGID" type="xsd:int" parms="PCGID" minOccurs="0" description="Rate Card Group ID is the internal ID used to identify a Rate Card. Use RateCardQuery to find a PCGID"/>
</xsd:all>
</xsd:complexType>
<xsd:complexType name="RateCardSave">
<xsd:all>
<xsd:element name="api_key" type="xsd:string" parms="api_key" description="API key provided by astutepayroll.com"/>
<xsd:element name="api_username" type="xsd:string" parms="api_username" description="API username provided by astutepayroll.com"/>
<xsd:element name="api_password" type="xsd:string" parms="api_password" description="API password provided by astutepayroll.com"/>
<xsd:element name="api_transaction_id" type="xsd:string" parms="api_transaction_id" minOccurs="0" description="Transaction identifier (Optional)"/>
<xsd:element name="PCGID" type="xsd:int" parms="PCGID" minOccurs="0" description="Rate Card Group ID is the internal ID used to represent a Rate Card name. Use RateCardQuery to find a PCGID"/>
<xsd:element name="remoteid" type="xsd:string" parms="remoteid" minOccurs="0" description="A remote ID allows you to maintain consistency by storing your primary ID in our database."/>
<xsd:element name="update_remoteid" type="xsd:string" parms="update_remoteid" minOccurs="0" maxLength="100" description="Updates the remote id of a record when saving an existing record. Note that you cannot update the remote id using the â€˜remoteidâ€™ field as this is used to determine the record to be updated."/>
<xsd:element name="name" type="xsd:string" parms="name" minOccurs="0" description="The Rate Card Name"/>
<xsd:element name="region_code" type="xsd:string" parms="region_code" minOccurs="0" description="Region code for the rate card, can only be set during creation of a new rate card and only if multiple regions are active."/>
<xsd:element name="custom_field_1" type="xsd:string" parms="custom_field_1" minOccurs="0" description="Custom Field 1"/>
<xsd:element name="custom_field_2" type="xsd:string" parms="custom_field_2" minOccurs="0" description="Custom Field 2"/>
<xsd:element name="custom_field_3" type="xsd:string" parms="custom_field_3" minOccurs="0" description="Custom Field 3"/>
<xsd:element name="custom_field_4" type="xsd:string" parms="custom_field_4" minOccurs="0" description="Custom Field 4"/>
<xsd:element name="custom_field_5" type="xsd:string" parms="custom_field_5" minOccurs="0" description="Custom Field 5"/>
</xsd:all>
</xsd:complexType>
<xsd:complexType name="RateCardDelete">
<xsd:all>
<xsd:element name="api_key" type="xsd:string" parms="api_key" description="API key provided by astutepayroll.com"/>
<xsd:element name="api_username" type="xsd:string" parms="api_username" description="API username provided by astutepayroll.com"/>
<xsd:element name="api_password" type="xsd:string" parms="api_password" description="API password provided by astutepayroll.com"/>
<xsd:element name="api_transaction_id" type="xsd:string" parms="api_transaction_id" minOccurs="0" description="Transaction identifier (Optional)"/>
<xsd:element name="PCGID" type="xsd:int" parms="PCGID" minOccurs="1" description="Rate Card Group ID is the internal ID used to represent a Rate Card name. Use RateCardQuery to find a PCGID"/>
<xsd:element name="remoteid" type="xsd:string" parms="remoteid" minOccurs="0" description="A remote ID allows you to maintain consistency by storing your primary ID in our database. If you ever need to update this record, you can provide the remoteid and we'll update the associated record."/>
</xsd:all>
</xsd:complexType>
<xsd:complexType name="RateCardAddRate">
<xsd:all>
<xsd:element name="api_key" type="xsd:string" parms="api_key" description="API key provided by astutepayroll.com"/>
<xsd:element name="api_username" type="xsd:string" parms="api_username" description="API username provided by astutepayroll.com"/>
<xsd:element name="api_password" type="xsd:string" parms="api_password" description="API password provided by astutepayroll.com"/>
<xsd:element name="api_transaction_id" type="xsd:string" parms="api_transaction_id" minOccurs="0" description="Transaction identifier (Optional)"/>
<xsd:element name="PCGID" type="xsd:int" parms="PCGID" minOccurs="0" description="Rate Card ID is the internal ID used to represent a Rate Card. Use RateCardQuery to find a PCGID."/>
<xsd:element name="ratecard_remoteid" type="xsd:string" parms="ratecard_remoteid" minOccurs="0" description="The remoteid provided in a RateCardSave to identify the Rate Card."/>
<xsd:element name="PCNID" type="xsd:int" parms="PCNID" minOccurs="0" description="Rate Card Name ID is the internal ID used to represent a Rate name."/>
<xsd:element name="name" type="xsd:string" parms="name" minOccurs="0" description="The Rate name. This cannot be adjusted on an existing Rate."/>
<xsd:element name="pay_rate" type="xsd:float" parms="pay_rate" minOccurs="1" description="Mandatory. The pay rate."/>
<xsd:element name="pay_oncosts" type="xsd:float" parms="pay_oncosts" minOccurs="0" description="Deprecated - please use pay_oncosts_percent. Oncosts dollar value. If provided we will convert to a percentage of the pay rate. If the pay rate is $0, the oncosts percentage will be 0%."/>
<xsd:element name="pay_oncosts_percent" type="xsd:float" parms="pay_oncosts_percent" minOccurs="0" description="Mandatory. Percentage of pay rate used for oncosts. 10 percent should be entered as 10 - not 0.1 or 10%."/>
<xsd:element name="charge_rate" type="xsd:float" parms="pay_charge_rate" minOccurs="1" description="Mandatory. The charge rate."/>
<xsd:element name="start_date" type="xsd:date" parms="start_date" minOccurs="0" description="The start date of the Rate."/>
<xsd:element name="finish_date" type="xsd:date" parms="finish_date" minOccurs="0" description="The finish date of the Rate."/>
</xsd:all>
</xsd:complexType>
<xsd:complexType name="RateCardAddRateChange">
<xsd:all>
<xsd:element name="api_key" type="xsd:string" parms="api_key" description="API key provided by astutepayroll.com"/>
<xsd:element name="api_username" type="xsd:string" parms="api_username" description="API username provided by astutepayroll.com"/>
<xsd:element name="api_password" type="xsd:string" parms="api_password" description="API password provided by astutepayroll.com"/>
<xsd:element name="api_transaction_id" type="xsd:string" parms="api_transaction_id" minOccurs="0" description="Transaction identifier (Optional)"/>
<xsd:element name="PCID" type="xsd:int" parms="PCID" minOccurs="0" description="Rate ID is the internal ID used to represent a Rate. Use RateQuery to find a PCID."/>
<xsd:element name="PCGID" type="xsd:int" parms="PCGID" minOccurs="0" description="Rate Card ID is the internal ID used to represent a Rate Card. Use RateCardQuery to find a PCGID."/>
<xsd:element name="ratecard_remoteid" type="xsd:string" parms="ratecard_remoteid" minOccurs="0" description="The remoteid provided in a RateCardSave to identify the Rate Card."/>
<xsd:element name="PCNID" type="xsd:int" parms="PCNID" minOccurs="0" description="Rate Card Name ID is the internal ID used to represent a Rate name."/>
<xsd:element name="name" type="xsd:string" parms="name" minOccurs="0" description="The Rate name. This cannot be adjusted on an existing Rate."/>
<xsd:element name="pay_rate" type="xsd:float" parms="pay_rate" minOccurs="1" description="Mandatory. The pay rate."/>
<xsd:element name="pay_oncosts" type="xsd:float" parms="pay_oncosts" minOccurs="0" description="Deprecated - please use pay_oncosts_percent. Oncosts dollar value. If provided we will convert to a percentage of the pay rate. If the pay rate is $0, the oncosts percentage will be 0%."/>
<xsd:element name="pay_oncosts_percent" type="xsd:float" parms="pay_oncosts_percent" minOccurs="0" description="Mandatory. Percentage of pay rate used for oncosts. 10 percent should be entered as 10 - not 0.1 or 10%."/>
<xsd:element name="pay_charge_rate" type="xsd:float" parms="pay_charge_rate" minOccurs="0" description="Deprecated. Please use charge_rate."/>
<xsd:element name="charge_rate" type="xsd:float" parms="pay_charge_rate" minOccurs="1" description="Mandatory. The charge rate."/>
<xsd:element name="start_date" type="xsd:date" parms="start_date" minOccurs="1" description="Mandatory. The start date of the Rate."/>
<xsd:element name="finish_date" type="xsd:date" parms="finish_date" minOccurs="0" description="The finish date of the Rate."/>
</xsd:all>
</xsd:complexType>
<xsd:complexType name="UserAddRateChange">
<xsd:all>
<xsd:element name="api_key" type="xsd:string" parms="api_key" description="API key provided by astutepayroll.com"/>
<xsd:element name="api_username" type="xsd:string" parms="api_username" description="API username provided by astutepayroll.com"/>
<xsd:element name="api_password" type="xsd:string" parms="api_password" description="API password provided by astutepayroll.com"/>
<xsd:element name="api_transaction_id" type="xsd:string" parms="api_transaction_id" minOccurs="0" description="Transaction identifier (Optional)"/>
<xsd:element name="UID" type="xsd:int" parms="UID" minOccurs="0" description=""/>
<xsd:element name="user_id" type="xsd:string" parms="user_id" minOccurs="0" description=""/>
<xsd:element name="user_remoteid" type="xsd:string" parms="user_remoteid" minOccurs="0" description="The remoteid provided in a UserSave to identify the user we are assigning the Rate to"/>
<xsd:element name="pay_rate" type="xsd:float" parms="pay_rate" minOccurs="1" description="The Pay Rate"/>
<xsd:element name="pay_oncosts_percent" type="xsd:float" parms="pay_oncosts_percent" minOccurs="0" description="Percentage of pay rate used for oncosts. 10 percent should be entered as 10 - not 0.1 or 10%."/>
<xsd:element name="pay_oncosts" type="xsd:float" parms="pay_oncosts" minOccurs="0" description="Deprecated - please use pay_oncosts_percent. Oncosts dollar value. If provided we will convert to a percentage of the pay rate. If the pay rate is $0, the oncosts percentage will be 0%."/>
<xsd:element name="pay_charge_rate" type="xsd:float" parms="pay_charge_rate" minOccurs="1" description="The Charge Rate"/>
<xsd:element name="start_date" type="xsd:date" parms="start_date" description="The calendar date in ISO8601 format (YYYY-MM-DD) for the first date this rate should be paid on"/>
<xsd:element name="finish_date" type="xsd:date" parms="finish_date" minOccurs="0" description="The calendar date in ISO8601 format (YYYY-MM-DD) for the last date this rate should be paid on"/>
</xsd:all>
</xsd:complexType>
<xsd:complexType name="UserRemoveRateChange">
<xsd:all>
<xsd:element name="api_key" type="xsd:string" parms="api_key" description="API key provided by astutepayroll.com"/>
<xsd:element name="api_username" type="xsd:string" parms="api_username" description="API username provided by astutepayroll.com"/>
<xsd:element name="api_password" type="xsd:string" parms="api_password" description="API password provided by astutepayroll.com"/>
<xsd:element name="api_transaction_id" type="xsd:string" parms="api_transaction_id" minOccurs="0" description="Transaction identifier (Optional)"/>
<xsd:element name="UID" type="xsd:int" parms="UID" minOccurs="0" description=""/>
<xsd:element name="user_id" type="xsd:string" parms="user_id" minOccurs="0" description=""/>
<xsd:element name="user_remoteid" type="xsd:string" parms="user_remoteid" minOccurs="0" description="The remoteid provided in a UserSave to identify the user we are assigning the Rate to"/>
<xsd:element name="PRID" type="xsd:int" parms="PRID" description="The PayRaye ID (PRID) provided in a UserRateQuery"/>
</xsd:all>
</xsd:complexType>
<xsd:complexType name="RuleGroupAttachmentsQuery">
<xsd:all>
<xsd:element name="api_key" type="xsd:string" parms="api_key" description="API key provided by astutepayroll.com"/>
<xsd:element name="api_username" type="xsd:string" parms="api_username" description="API username provided by astutepayroll.com"/>
<xsd:element name="api_password" type="xsd:string" parms="api_password" description="API password provided by astutepayroll.com"/>
<xsd:element name="api_transaction_id" type="xsd:string" parms="api_transaction_id" minOccurs="0" description="Transaction identifier (Optional)"/>
<xsd:element name="RGID" type="xsd:int" parms="RGID" minOccurs="0" description="Rule Group ID is the internal ID used to identify a Rule Group. Use RuleGroupQuery to find a RGID"/>
</xsd:all>
</xsd:complexType>
<xsd:complexType name="InvoiceItemSave">
<xsd:all>
<xsd:element name="api_key" type="xsd:string" parms="api_key" description="API key provided by astutepayroll.com"/>
<xsd:element name="api_username" type="xsd:string" parms="api_username" description="API username provided by astutepayroll.com"/>
<xsd:element name="api_password" type="xsd:string" parms="api_password" description="API password provided by astutepayroll.com"/>
<xsd:element name="api_transaction_id" type="xsd:string" parms="api_transaction_id" minOccurs="0" description="Transaction identifier (Optional)"/>
<xsd:element name="IIID" type="xsd:int" parms="IIID" minOccurs="0" description="Invoice Item ID is the internal ID used to represent Invoice Items."/>
<xsd:element name="remoteid" type="xsd:string" parms="remoteid" minOccurs="0" description="A remote ID allows you to maintain consistency by storing your primary ID in our database." maxLength="100"/>
<xsd:element name="update_remoteid" type="xsd:string" parms="update_remoteid" minOccurs="0" description="Updates the remote id of a record when saving an existing record. Note that you cannot update the remote id using the â€˜remoteidâ€™ field as this is used to determine the record to be updated." maxLength="100"/>
<xsd:element name="invoice_on_date" type="xsd:date" parms="invoice_on_date" minOccurs="0" description="The date the invoice item will become available for invoicing, if not provided the order will become available immediately."/>
<xsd:element name="order_transaction_date" type="xsd:date" parms="order_transaction_date" minOccurs="0" description="Controls the order of transactions in certain circumstances, such as the NetSuite integration exports."/>
<xsd:element name="customer_BID" type="xsd:int" parms="customer_BID" minOccurs="0" description="Set the associated billers - use BillerQuery to search for customer_BID (Optional. If not included, billing_contact_BCID and/or UID must be set)."/>
<xsd:element name="billing_contact_BCID" type="xsd:int" parms="billing_contact_BCID" minOccurs="0" description="Set the associated billers - use BillerContactsQuery to search for billing_contact_BCID (Optional. If not included, customer_BID and/or user_id must be set)."/>
<xsd:element name="amount" type="xsd:decimal" parms="amount" minOccurs="1" description="The unit cost of this item. The total for this line item is the quantity multiplied by the amount, plus the tax, rounded to two decimal places."/>
<xsd:element name="quantity" type="xsd:decimal" parms="quantity" minOccurs="0" description="How many of this item to invoice."/>
<xsd:element name="description" type="xsd:string" parms="description" minOccurs="1" description="This description will appear verbatim on the invoice"/>
<xsd:element name="account_code" type="xsd:string" parms="account_code" minOccurs="0" description="This is the General Ledger Expense Account Code - it is often required for exporting purchase invoices into GL accounting systems such as MYOB. If you specify a CCID, we can get the default account code from there." maxLength="50"/>
<xsd:element name="po_number" type="xsd:string" parms="po_number" minOccurs="0" description="Your customer's purchase order number (optional)"/>
<xsd:element name="consolidation_code" type="xsd:string" parms="consolidation_code" minOccurs="0" description="The invoice item consolidation code, all invoice items with this code will be grouped on the same invoice."/>
<xsd:element name="recruiter_user_id" type="xsd:string" parms="recruiter_user_id" minOccurs="0" description="This enables you to set the primary consultant id associated with this invoice item" maxLength="50"/>
<xsd:element name="recruiter2_user_id" type="xsd:string" parms="recruiter2_user_id" minOccurs="0" description="This enables you to set the secondary consultant id associated with this invoice item" maxLength="50"/>
<xsd:element name="recruiter2_margin_split" type="xsd:decimal" parms="recruiter2_margin_split" minOccurs="0" description="This enables you to set the % split that will be assigned to the second consultant"/>
<xsd:element name="recruiter3_user_id" type="xsd:string" parms="recruiter3_user_id" minOccurs="0" description="This enables you to set the third consultant id associated with this invoice item" maxLength="50"/>
<xsd:element name="recruiter4_margin_split" type="xsd:decimal" parms="recruiter4_margin_split" minOccurs="0" description="This enables you to set the % split that will be assigned to the third consultant"/>
<xsd:element name="recruiter4_user_id" type="xsd:string" parms="recruiter4_user_id" minOccurs="0" description="This enables you to set the fourth consultant id associated with this invoice item" maxLength="50"/>
<xsd:element name="recruiter3_margin_split" type="xsd:decimal" parms="recruiter3_margin_split" minOccurs="0" description="This enables you to set the % split that will be assigned to the fourth consultant"/>
<xsd:element name="recruiter5_user_id" type="xsd:string" parms="recruiter5_user_id" minOccurs="0" description="This enables you to set the fifth consultant id associated with this invoice item" maxLength="50"/>
<xsd:element name="recruiter5_margin_split" type="xsd:decimal" parms="recruiter5_margin_split" minOccurs="0" description="This enables you to set the % split that will be assigned to the fifth consultant"/>
<xsd:element name="UID" type="xsd:int" parms="UID" minOccurs="0" description="The person to whom this invoice item relates (Optional. If not included, customer_BID and/or billing_contact_BCID must be set). You can retrieve UIDs using UserQuery."/>
<xsd:element name="PCID" type="xsd:int" parms="PCID" minOccurs="0" description="The PayItem ID to record against this transaction (used for reporting and to set the account_code if none was provided)"/>
<xsd:element name="CCID" type="xsd:int" parms="CCID" minOccurs="0" description="The ChargeItem ID to record against this transaction (used for reporting and to set the account_code if none was provided)"/>
<xsd:element name="CM_CID" type="xsd:int" parms="CM_CID" minOccurs="0" description="The assigned entity for billing and reporting - use CompanyEntityQuery to find CM_CID. Required when UID is not set."/>
<xsd:element name="subentityOne_id" type="xsd:int" parms="subentityOne_id" minOccurs="0" description="First level of corporate organisation"/>
<xsd:element name="subentityTwo_id" type="xsd:int" parms="subentityTwo_id" minOccurs="0" description="Second level of corporate organisation"/>
<xsd:element name="custom_field_1" type="xsd:string" parms="custom_field_1" minOccurs="0" maxLength="255" description="Custom field for integrators"/>
<xsd:element name="custom_field_2" type="xsd:string" parms="custom_field_2" minOccurs="0" maxLength="255" description="Custom field for integrators"/>
<xsd:element name="custom_field_3" type="xsd:string" parms="custom_field_3" minOccurs="0" maxLength="255" description="Custom field for integrators"/>
<xsd:element name="custom_field_4" type="xsd:string" parms="custom_field_4" minOccurs="0" maxLength="255" description="Custom field for integrators"/>
<xsd:element name="custom_field_5" type="xsd:string" parms="custom_field_5" minOccurs="0" maxLength="255" description="Custom field for integrators"/>
<xsd:element name="cost_of_goods_amount" type="xsd:decimal" parms="cost_of_goods_amount" minOccurs="0" description="When enabled, this is the Cost of Goods for this invoice item. If not supplied, the amount is calculated based on the charge item (CCID) or pay item (PCID)."/>
<xsd:element name="cost_centre" type="xsd:string" parms="cost_centre" minOccurs="0" maxLength="255" description="The cost centre the invoice item is for"/>
<xsd:element name="BCID" type="xsd:int" parms="BCID" minOccurs="0" description="Deprecated, please use billing_contact_BCID."/>
<xsd:element name="BID" type="xsd:int" parms="BID" minOccurs="0" description="Deprecated, please use customer_BID."/>
</xsd:all>
</xsd:complexType>
<xsd:complexType name="InvoiceItemRevenueSplitSave">
<xsd:all>
<xsd:element name="api_key" type="xsd:string" parms="api_key" description="API key provided by astutepayroll.com"/>
<xsd:element name="api_username" type="xsd:string" parms="api_username" description="API username provided by astutepayroll.com"/>
<xsd:element name="api_password" type="xsd:string" parms="api_password" description="API password provided by astutepayroll.com"/>
<xsd:element name="api_transaction_id" type="xsd:string" parms="api_transaction_id" minOccurs="0" description="Transaction identifier (Optional)"/>
<xsd:element name="IIID" type="xsd:int" parms="IIID" minOccurs="0" description="Invoice Item ID is the internal ID used to represent Invoice Items."/>
<xsd:element name="invoiceitem_remoteid" type="xsd:string" parms="invoiceitem_remoteid" minOccurs="0" description="Invoice Item remoteid is your primary ID for Invoice Item stored in our database for consistency."/>
<xsd:element name="CM_CID" type="xsd:int" parms="CM_CID" minOccurs="0" description="The assigned entity for revenue split - use CompanyEntityQuery to find CM_CID"/>
<xsd:element name="split_percent" type="xsd:decimal" parms="split_percent" minOccurs="0" description="The revenue split percent assigned to the specified entity. should be between 0 and 100"/>
</xsd:all>
</xsd:complexType>
<xsd:complexType name="timesheetSave">
<xsd:all>
<xsd:element name="api_key" type="xsd:string" parms="api_key" description="API key provided by astutepayroll.com"/>
<xsd:element name="api_username" type="xsd:string" parms="api_username" description="API username provided by astutepayroll.com"/>
<xsd:element name="api_password" type="xsd:string" parms="api_password" description="API password provided by astutepayroll.com"/>
<xsd:element name="api_transaction_id" type="xsd:string" parms="api_transaction_id" minOccurs="0" description="Transaction identifier (Optional)"/>
<xsd:element name="UID" type="xsd:int" parms="UID" minOccurs="0" description=""/>
<xsd:element name="user_id" type="xsd:string" parms="user_id" minOccurs="0" description=""/>
<xsd:element name="user_remoteid" type="xsd:string" parms="user_remoteid" minOccurs="0" description="The remoteid provided in a UserSave to identify the user whose timesheet is being saved"/>
<xsd:element name="job_code" type="xsd:string" parms="job_code" minOccurs="0" maxLength="50" description="The job_code provided in a UserSave to identify the job for the above user"/>
<xsd:element name="date" type="xsd:date" parms="date" minOccurs="0" description="The calendar date in ISO8601 format (YYYY-MM-DD) for the start of the timesheet"/>
<xsd:element name="TSID" type="xsd:string" parms="TSID" minOccurs="0" description="The existing Timesheet ID (TSID) to be updated"/>
<xsd:element name="mon_start" type="xsd:string" parms="mon_start" minOccurs="0" maxLength="4" description="The start time in four digits (HHMM). 9am is 0900, 5:30 pm is 1730"/>
<xsd:element name="mon_finish" type="xsd:string" parms="mon_finish" minOccurs="0" maxLength="4" description="The end time in four digits (as per the *_start). If you provide a start, you must provide a finish."/>
<xsd:element name="mon_break" type="xsd:string" parms="mon_break" minOccurs="0" maxLength="4" description="The length of any breaks in four digits as above (1 hours is 0100, 10 minutes is 0010). If you donâ€™t provide a start, you cannot provide a â€˜breakâ€™. If you donâ€™t provide a break, weâ€™ll assume no break."/>
<xsd:element name="mon_notes" type="xsd:string" parms="mon_notes" minOccurs="0" description="Arbitrary notes against the day. Optional. You can provide notes without a *_start and *_finish."/>
<xsd:element name="mon_work" type="xsd:float" parms="mon_work" minOccurs="0" description=""/>
<xsd:element name="mon_PM_PCID" type="xsd:string" parms="mon_PM_PCID" minOccurs="0" description=""/>
<xsd:element name="tue_start" type="xsd:string" parms="tue_start" minOccurs="0" maxLength="4" description=""/>
<xsd:element name="tue_finish" type="xsd:string" parms="tue_finish" minOccurs="0" maxLength="4" description=""/>
<xsd:element name="tue_break" type="xsd:string" parms="tue_break" minOccurs="0" maxLength="4" description=""/>
<xsd:element name="tue_notes" type="xsd:string" parms="tue_notes" minOccurs="0" description=""/>
<xsd:element name="tue_work" type="xsd:float" parms="tue_work" minOccurs="0" description=""/>
<xsd:element name="tue_PM_PCID" type="xsd:string" parms="tue_PM_PCID" minOccurs="0" description=""/>
<xsd:element name="wed_start" type="xsd:string" parms="wed_start" minOccurs="0" maxLength="4" description=""/>
<xsd:element name="wed_finish" type="xsd:string" parms="wed_finish" minOccurs="0" maxLength="4" description=""/>
<xsd:element name="wed_break" type="xsd:string" parms="wed_break" minOccurs="0" maxLength="4" description=""/>
<xsd:element name="wed_notes" type="xsd:string" parms="wed_notes" minOccurs="0" description=""/>
<xsd:element name="wed_work" type="xsd:float" parms="wed_work" minOccurs="0" description=""/>
<xsd:element name="wed_PM_PCID" type="xsd:string" parms="wed_PM_PCID" minOccurs="0" description=""/>
<xsd:element name="thu_start" type="xsd:string" parms="thu_start" minOccurs="0" maxLength="4" description=""/>
<xsd:element name="thu_finish" type="xsd:string" parms="thu_finish" minOccurs="0" maxLength="4" description=""/>
<xsd:element name="thu_break" type="xsd:string" parms="thu_break" minOccurs="0" maxLength="4" description=""/>
<xsd:element name="thu_notes" type="xsd:string" parms="thu_notes" minOccurs="0" description=""/>
<xsd:element name="thu_work" type="xsd:float" parms="thu_work" minOccurs="0" description=""/>
<xsd:element name="thu_PM_PCID" type="xsd:string" parms="thu_PM_PCID" minOccurs="0" description=""/>
<xsd:element name="fri_start" type="xsd:string" parms="fri_start" minOccurs="0" maxLength="4" description=""/>
<xsd:element name="fri_finish" type="xsd:string" parms="fri_finish" minOccurs="0" maxLength="4" description=""/>
<xsd:element name="fri_break" type="xsd:string" parms="fri_break" minOccurs="0" maxLength="4" description=""/>
<xsd:element name="fri_notes" type="xsd:string" parms="fri_notes" minOccurs="0" description=""/>
<xsd:element name="fri_work" type="xsd:float" parms="fri_work" minOccurs="0" description=""/>
<xsd:element name="fri_PM_PCID" type="xsd:string" parms="fri_PM_PCID" minOccurs="0" description=""/>
<xsd:element name="sat_start" type="xsd:string" parms="sat_start" minOccurs="0" maxLength="4" description=""/>
<xsd:element name="sat_finish" type="xsd:string" parms="sat_finish" minOccurs="0" maxLength="4" description=""/>
<xsd:element name="sat_break" type="xsd:string" parms="sat_break" minOccurs="0" maxLength="4" description=""/>
<xsd:element name="sat_notes" type="xsd:string" parms="sat_notes" minOccurs="0" description=""/>
<xsd:element name="sat_work" type="xsd:float" parms="sat_work" minOccurs="0" description=""/>
<xsd:element name="sat_PM_PCID" type="xsd:string" parms="sat_PM_PCID" minOccurs="0" description=""/>
<xsd:element name="sun_start" type="xsd:string" parms="sun_start" minOccurs="0" maxLength="4" description=""/>
<xsd:element name="sun_finish" type="xsd:string" parms="sun_finish" minOccurs="0" maxLength="4" description=""/>
<xsd:element name="sun_break" type="xsd:string" parms="sun_break" minOccurs="0" maxLength="4" description=""/>
<xsd:element name="sun_notes" type="xsd:string" parms="sun_notes" minOccurs="0" description=""/>
<xsd:element name="sun_work" type="xsd:float" parms="sun_work" minOccurs="0" description=""/>
<xsd:element name="sun_PM_PCID" type="xsd:string" parms="sun_PM_PCID" minOccurs="0" description=""/>
<xsd:element name="notes" type="xsd:string" parms="notes" minOccurs="0" description="Arbitrary notes against the whole timesheet. Optional"/>
<xsd:element name="injury" type="xsd:int" parms="injury" minOccurs="0" description="Boolean (specified as 1 or 0) to indicate a workplace injury occurred. Default 0"/>
<xsd:element name="did_not_work" type="xsd:int" parms="did_not_work" minOccurs="0" description="Boolean (specified as 1 or 0) to indicate the employee did not work at this job in the time period of the timesheet. Default 0"/>
<xsd:element name="complete" type="xsd:date" parms="complete" minOccurs="0" description="ISO-8601 date/time stamp in UTC indicating when the timesheet was completed. If not specified, we will use the date/time of the API call"/>
<xsd:element name="approved_by_user_id" type="xsd:string" parms="approved_by_user_id" minOccurs="0" description="If the timesheet has already been approved, specify the id of the user that approved it. This is the â€˜idâ€™ field from a UserQuery â€“ eg â€˜john.smithâ€™. Optional unless an approved timestamp is provided."/>
<xsd:element name="approved" type="xsd:date" parms="approved" minOccurs="0" description="ISO-8601 date/time stamp in UTC indicating when the timesheet was approved. If an approver is specified, but this field is not provided we will use the date/time of the API call"/>
</xsd:all>
</xsd:complexType>
<xsd:complexType name="TimesheetApprove">
<xsd:all>
<xsd:element name="api_key" type="xsd:string" parms="api_key" description="API key provided by astutepayroll.com"/>
<xsd:element name="api_username" type="xsd:string" parms="api_username" description="API username provided by astutepayroll.com"/>
<xsd:element name="api_password" type="xsd:string" parms="api_password" description="API password provided by astutepayroll.com"/>
<xsd:element name="api_transaction_id" type="xsd:string" parms="api_transaction_id" minOccurs="0" description="Transaction identifier (Optional)"/>
<xsd:element name="TSID" type="xsd:string" parms="TSID" minOccurs="0" description="The Timesheet ID (TSID) this applies to provided in a timesheetSave call"/>
<xsd:element name="UID" type="xsd:int" parms="UID" minOccurs="0" description=""/>
<xsd:element name="user_id" type="xsd:string" parms="user_id" minOccurs="0" description=""/>
<xsd:element name="user_remoteid" type="xsd:string" parms="user_remoteid" minOccurs="0" description="The remoteid provided in a UserSave to identify the user whose timesheet is being saved"/>
<xsd:element name="job_code" type="xsd:string" parms="job_code" minOccurs="0" maxLength="50" description="The job_code provided in a UserSave to identify the job for the above user"/>
<xsd:element name="date" type="xsd:date" parms="date" minOccurs="0" description="The calendar date in ISO8601 format (YYYY-MM-DD) for the start of the timesheet"/>
<xsd:element name="notes" type="xsd:string" parms="notes" minOccurs="0" description="Arbitrary notes against the whole timesheet. Optional"/>
<xsd:element name="complete" type="xsd:date" parms="complete" minOccurs="0" description="ISO-8601 date/time stamp in UTC indicating when the timesheet was completed. If not specified, we will use the date/time of the API call"/>
<xsd:element name="approved_by_user_id" type="xsd:string" parms="approved_by_user_id" description="Specify the id of the user that approved it. This is the â€˜idâ€™ field from a UserQuery â€“ eg â€˜john.smithâ€™."/>
<xsd:element name="approved" type="xsd:date" parms="approved" minOccurs="0" description="ISO-8601 date/time stamp in UTC indicating when the timesheet was approved. If not specified, we will use the date/time of the API call"/>
</xsd:all>
</xsd:complexType>
<xsd:complexType name="TimesheetCreateAdjustment">
<xsd:all>
<xsd:element name="api_key" type="xsd:string" parms="api_key" description="API key provided by astutepayroll.com"/>
<xsd:element name="api_username" type="xsd:string" parms="api_username" description="API username provided by astutepayroll.com"/>
<xsd:element name="api_password" type="xsd:string" parms="api_password" description="API password provided by astutepayroll.com"/>
<xsd:element name="api_transaction_id" type="xsd:string" parms="api_transaction_id" minOccurs="0" description="Transaction identifier (Optional)"/>
<xsd:element name="TSID" type="xsd:string" parms="TSID" minOccurs="0" description="The Timesheet ID (TSID) this applies to provided in a timesheetSave call"/>
<xsd:element name="UID" type="xsd:int" parms="UID" minOccurs="0" description="UID is the internal numeric ID used to represent employees. Use UserQuery to find a UID"/>
<xsd:element name="user_id" type="xsd:string" parms="user_id" minOccurs="0" maxLength="50" description="user_id is the internal ID used to represent employees. Use UserQuery to find a user_id"/>
<xsd:element name="user_remoteid" type="xsd:string" parms="user_remoteid" minOccurs="0" maxLength="100" description="The remoteid provided in a UserSave to identify the user whose timesheet is being saved"/>
<xsd:element name="job_code" type="xsd:string" parms="job_code" minOccurs="0" maxLength="50" description="A remote ID to identify the job to maintain consistency by storing your primary ID in our database. If you ever need to update this record, you can provide the remoteid and we\'ll update the associated record."/>
<xsd:element name="date" type="xsd:date" parms="date" minOccurs="0" description="The calendar date in ISO8601 format (YYYY-MM-DD) for the start of the timesheet"/>
</xsd:all>
</xsd:complexType>
<xsd:complexType name="UserLeaveBalanceList">
<xsd:all>
<xsd:element name="api_key" type="xsd:string" parms="api_key" description="API key provided by astutepayroll.com"/>
<xsd:element name="api_username" type="xsd:string" parms="api_username" description="API username provided by astutepayroll.com"/>
<xsd:element name="api_password" type="xsd:string" parms="api_password" description="API password provided by astutepayroll.com"/>
<xsd:element name="api_transaction_id" type="xsd:string" parms="api_transaction_id" minOccurs="0" description="Transaction identifier (Optional)"/>
<xsd:element name="UID" type="xsd:int" parms="UID" minOccurs="0" description="UID is the internal numeric ID used to represent employees. Use UserQuery to find a UID"/>
<xsd:element name="user_id" type="xsd:string" parms="user_id" minOccurs="0" maxLength="50" description="user_id is the internal ID used to represent employees. Use UserQuery to find a user_id"/>
<xsd:element name="user_remoteid" type="xsd:string" parms="user_remoteid" minOccurs="0" maxLength="100" description="The remoteid provided in a UserSave to identify the user whose leave balance information is being requested"/>
</xsd:all>
</xsd:complexType>
<xsd:complexType name="UserLeaveBalanceSave">
<xsd:all>
<xsd:element name="api_key" type="xsd:string" parms="api_key" description="API key provided by astutepayroll.com"/>
<xsd:element name="api_username" type="xsd:string" parms="api_username" description="API username provided by astutepayroll.com"/>
<xsd:element name="api_password" type="xsd:string" parms="api_password" description="API password provided by astutepayroll.com"/>
<xsd:element name="api_transaction_id" type="xsd:string" parms="api_transaction_id" minOccurs="0" description="Transaction identifier (Optional)"/>
<xsd:element name="UID" type="xsd:int" parms="UID" minOccurs="0" description="UID is the internal numeric ID used to represent employees. Use UserQuery to find a UID"/>
<xsd:element name="user_id" type="xsd:string" parms="user_id" minOccurs="0" maxLength="50" description="user_id is the internal ID used to represent employees. Use UserQuery to find a user_id"/>
<xsd:element name="user_remoteid" type="xsd:string" parms="user_remoteid" minOccurs="0" maxLength="100" description="The remoteid provided in a UserSave to identify the user whose leave is being modified"/>
<xsd:element name="LM_type_id" type="xsd:int" parms="LM_type_id" description="The LM_type_id of the leave type whose balance you wish to modify."/>
<xsd:element name="balance" type="xsd:float" parms="balance" description="The new balance for the requested leave type for the requested employee. New balance must be provided as a decimal (float) number representing the total number of hours for the new balance (e.g. 0.5 for 30 minutes, 12.4 for 12 hours 24 minutes)"/>
</xsd:all>
</xsd:complexType>
<xsd:complexType name="UserLeaveTypeAssign">
<xsd:all>
<xsd:element name="api_key" type="xsd:string" parms="api_key" description="API key provided by astutepayroll.com"/>
<xsd:element name="api_username" type="xsd:string" parms="api_username" description="API username provided by astutepayroll.com"/>
<xsd:element name="api_password" type="xsd:string" parms="api_password" description="API password provided by astutepayroll.com"/>
<xsd:element name="api_transaction_id" type="xsd:string" parms="api_transaction_id" minOccurs="0" description="Transaction identifier (Optional)"/>
<xsd:element name="UID" type="xsd:int" parms="UID" minOccurs="0" description="UID is the internal numeric ID used to represent employees. Use UserQuery to find a UID"/>
<xsd:element name="user_id" type="xsd:string" parms="user_id" minOccurs="0" maxLength="50" description="user_id is the internal ID used to represent employees. Use UserQuery to find a user_id"/>
<xsd:element name="user_remoteid" type="xsd:string" parms="user_remoteid" minOccurs="0" maxLength="100" description="The remoteid provided in a UserSave to identify the user whose leave is being modified"/>
<xsd:element name="LM_type_id" type="xsd:int" parms="LM_type_id" description="The LM_type_id of the leave type you wish to assign"/>
</xsd:all>
</xsd:complexType>
<xsd:complexType name="UserLeaveTypeUnAssign">
<xsd:all>
<xsd:element name="api_key" type="xsd:string" parms="api_key" description="API key provided by astutepayroll.com"/>
<xsd:element name="api_username" type="xsd:string" parms="api_username" description="API username provided by astutepayroll.com"/>
<xsd:element name="api_password" type="xsd:string" parms="api_password" description="API password provided by astutepayroll.com"/>
<xsd:element name="api_transaction_id" type="xsd:string" parms="api_transaction_id" minOccurs="0" description="Transaction identifier (Optional)"/>
<xsd:element name="UID" type="xsd:int" parms="UID" minOccurs="0" description="UID is the internal numeric ID used to represent employees. Use UserQuery to find a UID"/>
<xsd:element name="user_id" type="xsd:string" parms="user_id" minOccurs="0" maxLength="50" description="user_id is the internal ID used to represent employees. Use UserQuery to find a user_id"/>
<xsd:element name="user_remoteid" type="xsd:string" parms="user_remoteid" minOccurs="0" maxLength="100" description="The remoteid provided in a UserSave to identify the user whose leave balance information is being requested"/>
<xsd:element name="LM_type_id" type="xsd:int" parms="LM_type_id" description="The LM_type_id of the leave type you wish to un-assign"/>
</xsd:all>
</xsd:complexType>
<xsd:complexType name="userAddSuperItem">
<xsd:all>
<xsd:element name="api_key" type="xsd:string" parms="api_key" description="API key provided by astutepayroll.com"/>
<xsd:element name="api_username" type="xsd:string" parms="api_username" description="API username provided by astutepayroll.com"/>
<xsd:element name="api_password" type="xsd:string" parms="api_password" description="API password provided by astutepayroll.com"/>
<xsd:element name="api_transaction_id" type="xsd:string" parms="api_transaction_id" minOccurs="0" description="Transaction identifier (Optional)"/>
<xsd:element name="UID" type="xsd:int" parms="UID" minOccurs="0" description=""/>
<xsd:element name="user_id" type="xsd:string" parms="user_id" minOccurs="0" description=""/>
<xsd:element name="user_remoteid" type="xsd:string" parms="user_remoteid" minOccurs="0" description="The remoteid provided in a UserSave to identify the user we are assigning the SuperItem to"/>
<xsd:element name="PSID" type="xsd:int" parms="PSID" description="The super item ID (PSID) provided in a SuperItemQuery"/>
<xsd:element name="value_override" type="xsd:float" parms="value_override" minOccurs="0" description="The percent or dollar value override to use for the SuperItem. If blank, then the default percent or dollar value assigned to the SuperItem will be used."/>
</xsd:all>
</xsd:complexType>
<xsd:complexType name="UserRemoveSuperItem">
<xsd:all>
<xsd:element name="api_key" type="xsd:string" parms="api_key" description="API key provided by astutepayroll.com"/>
<xsd:element name="api_username" type="xsd:string" parms="api_username" description="API username provided by astutepayroll.com"/>
<xsd:element name="api_password" type="xsd:string" parms="api_password" description="API password provided by astutepayroll.com"/>
<xsd:element name="api_transaction_id" type="xsd:string" parms="api_transaction_id" minOccurs="0" description="Transaction identifier (Optional)"/>
<xsd:element name="UID" type="xsd:int" parms="UID" description=""/>
<xsd:element name="EPSIID" type="xsd:int" parms="EPSIID" description="The User Super Item ID for that User"/>
</xsd:all>
</xsd:complexType>
<xsd:complexType name="TimesheetAddInterp">
<xsd:all>
<xsd:element name="api_key" type="xsd:string" parms="api_key" description="API key provided by astutepayroll.com"/>
<xsd:element name="api_username" type="xsd:string" parms="api_username" description="API username provided by astutepayroll.com"/>
<xsd:element name="api_password" type="xsd:string" parms="api_password" description="API password provided by astutepayroll.com"/>
<xsd:element name="api_transaction_id" type="xsd:string" parms="api_transaction_id" minOccurs="0" description="Transaction identifier (Optional)"/>
<xsd:element name="TSID" type="xsd:string" parms="TSID" minOccurs="0" description="The Timesheet ID (TSID) this applies to provided in a timesheetSave call"/>
<xsd:element name="UID" type="xsd:int" parms="UID" minOccurs="0" description="UID is the internal numeric ID used to represent employees. Use UserQuery to find a UID"/>
<xsd:element name="user_id" type="xsd:string" parms="user_id" minOccurs="0" maxLength="50" description="user_id is the internal ID used to represent employees. Use UserQuery to find a user_id"/>
<xsd:element name="user_remoteid" type="xsd:string" parms="user_remoteid" minOccurs="0" maxLength="100" description="The remoteid provided in a UserSave to identify the user whose timesheet is being saved"/>
<xsd:element name="job_code" type="xsd:string" parms="job_code" minOccurs="0" maxLength="50" description="A remote ID to identify the job to maintain consistency by storing your primary ID in our database. If you ever need to update this record, you can provide the remoteid and we\'ll update the associated record."/>
<xsd:element name="date" type="xsd:date" parms="date" minOccurs="0" description="The calendar date in ISO8601 format (YYYY-MM-DD) for the day the units apply to"/>
<xsd:element name="PCID" type="xsd:int" parms="PCID" minOccurs="0" description="The pay item ID (PCID) provided in a PayItemQuery, if blank then the Base Hourly pay item is assumed"/>
<xsd:element name="PCNID" type="xsd:int" parms="PCNID" minOccurs="0" description="The rate ID provided in a RateQuery, if blank then the Base rate is assumed"/>
<xsd:element name="CCID" type="xsd:int" parms="CCID" minOccurs="0" description="The Charge rate ID, if blank then the base charge is assumed."/>
<xsd:element name="LM_type_id" type="xsd:int" parms="LM_type_id" minOccurs="0" description="The Leave Item ID provided in via ListLeaveTypes. This leave type must be assigned to the employee. Providing a leave item without also providing a PCID or CCID will use the pay item and charge item configured on the leave item."/>
<xsd:element name="units" type="xsd:float" parms="units" minOccurs="0" description="The number of units to pay, this should be either expressed in hours or days depending on the pay type of the employee."/>
</xsd:all>
</xsd:complexType>
<xsd:complexType name="TimesheetDeleteInterp">
<xsd:all>
<xsd:element name="api_key" type="xsd:string" parms="api_key" description="API key provided by astutepayroll.com"/>
<xsd:element name="api_username" type="xsd:string" parms="api_username" description="API username provided by astutepayroll.com"/>
<xsd:element name="api_password" type="xsd:string" parms="api_password" description="API password provided by astutepayroll.com"/>
<xsd:element name="api_transaction_id" type="xsd:string" parms="api_transaction_id" minOccurs="0" description="Transaction identifier (Optional)"/>
<xsd:element name="timesheet_paycat_id" type="xsd:int" parms="timesheet_paycat_id" description="The Timesheet PayItem ID (timesheet_paycat_id) this applies to"/>
<xsd:element name="TSID" type="xsd:string" parms="TSID" description="The Timesheet ID (TSID) this applies to"/>
</xsd:all>
</xsd:complexType>
<xsd:complexType name="TimesheetAttachment">
<xsd:all>
<xsd:element name="api_key" type="xsd:string" parms="api_key" description="API key provided by astutepayroll.com"/>
<xsd:element name="api_username" type="xsd:string" parms="api_username" description="API username provided by astutepayroll.com"/>
<xsd:element name="api_password" type="xsd:string" parms="api_password" description="API password provided by astutepayroll.com"/>
<xsd:element name="api_transaction_id" type="xsd:string" parms="api_transaction_id" minOccurs="0" description="Transaction identifier (Optional)"/>
<xsd:element name="TSID" type="xsd:string" parms="TSID" description="The Timesheet ID (TSID) this applies to provided in a timesheetSave call"/>
<xsd:element name="UID" type="xsd:int" parms="UID" minOccurs="0" description="UID is the internal numeric ID used to represent employees. Use UserQuery to find a UID"/>
<xsd:element name="user_id" type="xsd:string" parms="user_id" minOccurs="0" maxLength="50" description="user_id is the internal ID used to represent employees. Use UserQuery to find a user_id"/>
<xsd:element name="user_remoteid" type="xsd:string" parms="user_remoteid" minOccurs="0" maxLength="100" description="The remoteid provided in a UserSave to identify the user whose timesheet is being saved"/>
<xsd:element name="job_code" type="xsd:string" parms="job_code" minOccurs="0" maxLength="50" description="A remote ID to identify the job to maintain consistency by storing your primary ID in our database. If you ever need to update this record, you can provide the remoteid and we\'ll update the associated record."/>
<xsd:element name="storage_id" type="xsd:string" parms="storage_id" description="The storage_id returned from the file storage interface."/>
</xsd:all>
</xsd:complexType>
<xsd:complexType name="TimesheetAddShift">
<xsd:all>
<xsd:element name="api_key" type="xsd:string" parms="api_key" description="API key provided by astutepayroll.com"/>
<xsd:element name="api_username" type="xsd:string" parms="api_username" description="API username provided by astutepayroll.com"/>
<xsd:element name="api_password" type="xsd:string" parms="api_password" description="API password provided by astutepayroll.com"/>
<xsd:element name="api_transaction_id" type="xsd:string" parms="api_transaction_id" minOccurs="0" description="Transaction identifier (Optional)"/>
<xsd:element name="TSID" type="xsd:string" parms="TSID" description="The Timesheet ID (TSID) this applies to provided in a timesheetSave call"/>
<xsd:element name="UID" type="xsd:int" parms="UID" minOccurs="0" description="UID is the internal numeric ID used to represent employees. Use UserQuery to find a UID"/>
<xsd:element name="user_id" type="xsd:string" parms="user_id" minOccurs="0" maxLength="50" description="user_id is the internal ID used to represent employees. Use UserQuery to find a user_id"/>
<xsd:element name="user_remoteid" type="xsd:string" parms="user_remoteid" minOccurs="0" maxLength="100" description="The remoteid provided in a UserSave to identify the user whose timesheet is being saved"/>
<xsd:element name="job_code" type="xsd:string" parms="job_code" minOccurs="0" maxLength="50" description="A remote ID to identify the job to maintain consistency by storing your primary ID in our database. If you ever need to update this record, you can provide the remoteid and we\'ll update the associated record."/>
<xsd:element name="date" type="xsd:date" parms="date" description="The calendar date in ISO8601 format (YYYY-MM-DD) for the day of the shift"/>
<xsd:element name="PCID" type="xsd:int" parms="PCID" minOccurs="0" description="The manually assigned pay item ID (PCID) provided in a PayItemQuery, if blank then the Base Hourly pay item is assumed, associated pay-rules will need to exists for this to be honoured."/>
<xsd:element name="start" type="xsd:string" parms="start" minOccurs="0" maxLength="4" description="The start time in four digits (HHMM). 9am is 0900, 5:30 pm is 1730"/>
<xsd:element name="finish" type="xsd:string" parms="finish" minOccurs="0" maxLength="4" description="The end time in four digits (as per the *_start). If you provide a start, you must provide a finish."/>
<xsd:element name="break" type="xsd:string" parms="break" minOccurs="0" maxLength="4" description="The length of any breaks in four digits (1 hours is 0100, 10 minutes is 0010). If you donâ€™t provide a start, you cannot provide a â€˜breakâ€™. If you donâ€™t provide a break, weâ€™ll assume no break."/>
<xsd:element name="notes" type="xsd:string" parms="notes" minOccurs="0" description="Arbitrary notes against the day. Optional."/>
<xsd:element name="work" type="xsd:float" parms="work" minOccurs="0" description="For daily work, (0.5 would be half a day)"/>
<xsd:element name="PM_PCID" type="xsd:string" parms="PM_PCID" minOccurs="0" description=""/>
<xsd:element name="project_remote_timesheet_id" type="xsd:string" parms="project_remote_timesheet_id" minOccurs="0" description="The Project ID in the External Timesheet System. If a value for this field is supplied then a value should also be supplied for activity_remote_timesheet_id field"/>
<xsd:element name="activity_remote_timesheet_id" type="xsd:string" parms="activity_remote_timesheet_id" minOccurs="0" description="The Activity ID in the External Timesheet System. If a value for this field is supplied then a value should also be supplied for project_remote_timesheet_id field"/>
<xsd:element name="project_id" type="xsd:int" parms="project_id" minOccurs="0" description="The Project ID in the System. If a value for this field is supplied then a value should also be supplied for activity_id field"/>
<xsd:element name="activity_id" type="xsd:int" parms="activity_id" minOccurs="0" description="The Activity ID in the System. If a value for this field is supplied then a value should also be supplied for project_id field"/>
</xsd:all>
</xsd:complexType>
<xsd:complexType name="TimesheetDeleteShift">
<xsd:all>
<xsd:element name="api_key" type="xsd:string" parms="api_key" description="API key provided by astutepayroll.com"/>
<xsd:element name="api_username" type="xsd:string" parms="api_username" description="API username provided by astutepayroll.com"/>
<xsd:element name="api_password" type="xsd:string" parms="api_password" description="API password provided by astutepayroll.com"/>
<xsd:element name="api_transaction_id" type="xsd:string" parms="api_transaction_id" minOccurs="0" description="Transaction identifier (Optional)"/>
<xsd:element name="TS_SID" type="xsd:int" parms="TS_SID" description="The Timesheet Shift ID (TS_SID) this applies to"/>
<xsd:element name="TSID" type="xsd:string" parms="TSID" description="The Timesheet ID (TSID) this applies to"/>
</xsd:all>
</xsd:complexType>
<xsd:complexType name="UserAddDeduction">
<xsd:all>
<xsd:element name="api_key" type="xsd:string" parms="api_key" description="API key provided by astutepayroll.com"/>
<xsd:element name="api_username" type="xsd:string" parms="api_username" description="API username provided by astutepayroll.com"/>
<xsd:element name="api_password" type="xsd:string" parms="api_password" description="API password provided by astutepayroll.com"/>
<xsd:element name="api_transaction_id" type="xsd:string" parms="api_transaction_id" minOccurs="0" description="Transaction identifier (Optional)"/>
<xsd:element name="UID" type="xsd:int" parms="UID" minOccurs="0" description=""/>
<xsd:element name="user_id" type="xsd:string" parms="user_id" minOccurs="0" description=""/>
<xsd:element name="user_remoteid" type="xsd:string" parms="user_remoteid" minOccurs="0" description="The remoteid provided in a UserSave to identify the user we are assigning the Deduction to"/>
<xsd:element name="PDID" type="xsd:int" parms="PDID" description="The deduction item ID (PDID) provided in a UserDeductionQuery"/>
</xsd:all>
</xsd:complexType>
<xsd:complexType name="UserRemoveDeduction">
<xsd:all>
<xsd:element name="api_key" type="xsd:string" parms="api_key" description="API key provided by astutepayroll.com"/>
<xsd:element name="api_username" type="xsd:string" parms="api_username" description="API username provided by astutepayroll.com"/>
<xsd:element name="api_password" type="xsd:string" parms="api_password" description="API password provided by astutepayroll.com"/>
<xsd:element name="api_transaction_id" type="xsd:string" parms="api_transaction_id" minOccurs="0" description="Transaction identifier (Optional)"/>
<xsd:element name="UID" type="xsd:int" parms="UID" description=""/>
<xsd:element name="EPDIID" type="xsd:int" parms="EPDIID" description="The User Deduction Item ID for that User"/>
</xsd:all>
</xsd:complexType>
<xsd:complexType name="UserAddFixedPayItem">
<xsd:all>
<xsd:element name="api_key" type="xsd:string" parms="api_key" minOccurs="1" description="API key provided by astutepayroll.com"/>
<xsd:element name="api_username" type="xsd:string" parms="api_username" minOccurs="1" description="API username provided by astutepayroll.com"/>
<xsd:element name="api_password" type="xsd:string" parms="api_password" minOccurs="1" description="API password provided by astutepayroll.com"/>
<xsd:element name="api_transaction_id" type="xsd:string" parms="api_transaction_id" minOccurs="0" description="Transaction identifier (Optional)"/>
<xsd:element name="UID" type="xsd:int" parms="UID" minOccurs="0" description=""/>
<xsd:element name="user_id" type="xsd:string" parms="user_id" minOccurs="0" description=""/>
<xsd:element name="user_remoteid" type="xsd:string" parms="user_remoteid" minOccurs="0" description="The remoteid provided in a UserSave to identify the user we are assigning the PayItem to"/>
<xsd:element name="PCID" type="xsd:int" parms="PCID" minOccurs="1" description="The PayItem ID (PCID) provided in a FixedPayItemQuery"/>
<xsd:element name="units" type="xsd:int" parms="units" minOccurs="1" description="The units per day"/>
<xsd:element name="rate" type="xsd:int" parms="rate" minOccurs="0" description="The rate paid per unit"/>
</xsd:all>
</xsd:complexType>
<xsd:complexType name="UserRemoveFixedPayItem">
<xsd:all>
<xsd:element name="api_key" type="xsd:string" parms="api_key" minOccurs="1" description="API key provided by astutepayroll.com"/>
<xsd:element name="api_username" type="xsd:string" parms="api_username" minOccurs="1" description="API username provided by astutepayroll.com"/>
<xsd:element name="api_password" type="xsd:string" parms="api_password" minOccurs="1" description="API password provided by astutepayroll.com"/>
<xsd:element name="api_transaction_id" type="xsd:string" parms="api_transaction_id" minOccurs="0" description="Transaction identifier (Optional)"/>
<xsd:element name="UID" type="xsd:int" parms="UID" minOccurs="1" description=""/>
<xsd:element name="EPPCIID" type="xsd:int" parms="EPPCIID" minOccurs="1" description="Link ID for FixedPayItems and User"/>
</xsd:all>
</xsd:complexType>
<xsd:complexType name="InvoiceBalanceRetrieve">
<xsd:all>
<xsd:element name="api_key" type="xsd:string" parms="api_key" description="API key provided by astutepayroll.com"/>
<xsd:element name="api_username" type="xsd:string" parms="api_username" description="API username provided by astutepayroll.com"/>
<xsd:element name="api_password" type="xsd:string" parms="api_password" description="API password provided by astutepayroll.com"/>
<xsd:element name="api_transaction_id" type="xsd:string" parms="api_transaction_id" minOccurs="0" description="Transaction identifier (Optional)"/>
<xsd:element name="IID" type="xsd:int" parms="IID" description="Invoice ID"/>
</xsd:all>
</xsd:complexType>
<xsd:complexType name="InvoiceBalanceAdjust">
<xsd:all>
<xsd:element name="api_key" type="xsd:string" parms="api_key" description="API key provided by astutepayroll.com"/>
<xsd:element name="api_username" type="xsd:string" parms="api_username" description="API username provided by astutepayroll.com"/>
<xsd:element name="api_password" type="xsd:string" parms="api_password" description="API password provided by astutepayroll.com"/>
<xsd:element name="api_transaction_id" type="xsd:string" parms="api_transaction_id" minOccurs="0" description="Transaction identifier (Optional)"/>
<xsd:element name="IID" type="xsd:int" parms="IID" description="Invoice ID"/>
<xsd:element name="balance" type="xsd:float" parms="balance" description="Balance Amount"/>
</xsd:all>
</xsd:complexType>
<xsd:complexType name="UserAddDocument">
<xsd:all>
<xsd:element name="api_key" type="xsd:string" parms="api_key" minOccurs="1" description="API key provided by astutepayroll.com"/>
<xsd:element name="api_username" type="xsd:string" parms="api_username" minOccurs="1" description="API username provided by astutepayroll.com"/>
<xsd:element name="api_password" type="xsd:string" parms="api_password" minOccurs="1" description="API password provided by astutepayroll.com"/>
<xsd:element name="api_transaction_id" type="xsd:string" parms="api_transaction_id" minOccurs="0" description="Transaction identifier (Optional)"/>
<xsd:element name="UID" type="xsd:int" parms="UID" minOccurs="0" description=""/>
<xsd:element name="user_id" type="xsd:string" parms="user_id" minOccurs="0" description=""/>
<xsd:element name="user_remoteid" type="xsd:string" parms="user_remoteid" minOccurs="0" description="The remoteid provided in a UserSave to identify the user we are assigning the document to."/>
<xsd:element name="job_code" type="xsd:string" parms="job_code" minOccurs="1" description="A remote ID to identify the job to maintain consistency by storing your primary ID in our database."/>
<xsd:element name="storage_id" type="xsd:string" parms="storage_id" minOccurs="1" description="The storage_id returned from the file storage interface."/>
<xsd:element name="signoff" type="xsd:string" parms="signoff" minOccurs="1" description="Signoff method for this document (currently only checkbox is supported)"/>
<xsd:element name="MID" type="xsd:int" parms="MID" minOccurs="0" description="Employee ID"/>
<xsd:element name="DocType" type="xsd:string" parms="DocType" minOccurs="0" description="Document type. Accepted value: payslip"/>
</xsd:all>
</xsd:complexType>
<xsd:complexType name="UserRemoveDocument">
<xsd:all>
<xsd:element name="api_key" type="xsd:string" parms="api_key" minOccurs="1" description="API key provided by astutepayroll.com"/>
<xsd:element name="api_username" type="xsd:string" parms="api_username" minOccurs="1" description="API username provided by astutepayroll.com"/>
<xsd:element name="api_password" type="xsd:string" parms="api_password" minOccurs="1" description="API password provided by astutepayroll.com"/>
<xsd:element name="api_transaction_id" type="xsd:string" parms="api_transaction_id" minOccurs="0" description="Transaction identifier (Optional)"/>
<xsd:element name="UID" type="xsd:int" parms="UID" minOccurs="0" description=""/>
<xsd:element name="user_id" type="xsd:string" parms="user_id" minOccurs="0" description=""/>
<xsd:element name="user_remoteid" type="xsd:string" parms="user_remoteid" minOccurs="0" description="The remoteid provided in a UserSave to identify the user we are assigning the document to."/>
<xsd:element name="job_code" type="xsd:string" parms="job_code" minOccurs="1" description="A remote ID to identify the job to maintain consistency by storing your primary ID in our database."/>
<xsd:element name="storage_id" type="xsd:string" parms="storage_id" minOccurs="1" description="The storage_id returned from the file storage interface."/>
</xsd:all>
</xsd:complexType>
<xsd:complexType name="BillerTagAdd">
<xsd:all>
<xsd:element name="api_key" type="xsd:string" parms="api_key" minOccurs="1" description="API key provided by astutepayroll.com"/>
<xsd:element name="api_username" type="xsd:string" parms="api_username" minOccurs="1" description="API username provided by astutepayroll.com"/>
<xsd:element name="api_password" type="xsd:string" parms="api_password" minOccurs="1" description="API password provided by astutepayroll.com"/>
<xsd:element name="api_transaction_id" type="xsd:string" parms="api_transaction_id" minOccurs="0" description="Transaction identifier (Optional)"/>
<xsd:element name="BID" type="xsd:int" parms="BID" minOccurs="0" description="Set the associated billers - use BillerQuery to search for BID (Optional. If not included, BCID and/or user_id must be set)."/>
<xsd:element name="remoteid" type="xsd:string" parms="remoteid" minOccurs="0" maxLength="100" description="A remote ID allows you to maintain consistency by storing your primary ID in our database. If you ever need to update this record, you can provide the remoteid and we'll update the associated record."/>
<xsd:element name="tag" type="xsd:string" parms="tag" minOccurs="1" description="A comma seperated list of tags that will be added to the Biller"/>
</xsd:all>
</xsd:complexType>
<xsd:complexType name="BillerTagRemove">
<xsd:all>
<xsd:element name="api_key" type="xsd:string" parms="api_key" minOccurs="1" description="API key provided by astutepayroll.com"/>
<xsd:element name="api_username" type="xsd:string" parms="api_username" minOccurs="1" description="API username provided by astutepayroll.com"/>
<xsd:element name="api_password" type="xsd:string" parms="api_password" minOccurs="1" description="API password provided by astutepayroll.com"/>
<xsd:element name="api_transaction_id" type="xsd:string" parms="api_transaction_id" minOccurs="0" description="Transaction identifier (Optional)"/>
<xsd:element name="BID" type="xsd:int" parms="BID" minOccurs="0" description="Set the associated billers - use BillerQuery to search for BID (Optional. If not included, BCID and/or user_id must be set)."/>
<xsd:element name="remoteid" type="xsd:string" parms="remoteid" minOccurs="0" maxLength="100" description="A remote ID allows you to maintain consistency by storing your primary ID in our database. If you ever need to update this record, you can provide the remoteid and we'll update the associated record."/>
<xsd:element name="tag" type="xsd:string" parms="tag" minOccurs="1" description="A comma seperated list of tags that will be removed from the Biller"/>
</xsd:all>
</xsd:complexType>
<xsd:complexType name="ReportRunType">
<xsd:all>
<xsd:element name="api_key" type="xsd:string" parms="api_key" minOccurs="1" description="API key provided by astutepayroll.com"/>
<xsd:element name="api_username" type="xsd:string" parms="api_username" minOccurs="1" description="API username provided by astutepayroll.com"/>
<xsd:element name="api_password" type="xsd:string" parms="api_password" minOccurs="1" description="API password provided by astutepayroll.com"/>
<xsd:element name="api_transaction_id" type="xsd:string" parms="api_transaction_id" minOccurs="0" description="Transaction identifier (Optional)"/>
<xsd:element name="name" type="xsd:string" parms="name" minOccurs="1" description="The name of the report to run"/>
<xsd:element name="filter" type="xsd:string" parms="filter" minOccurs="0" description="The filters for the report in XML or JSON format"/>
<xsd:element name="filterformat" type="xsd:string" parms="filterformat" minOccurs="0" description="The format for the above parameter"/>
<xsd:element name="limit" type="xsd:int" parms="limit" minOccurs="0" description="The maximum number of rows to return (default to all of them)"/>
<xsd:element name="offset" type="xsd:int" parms="offset" minOccurs="0" description="The first record to return (default zero)"/>
</xsd:all>
</xsd:complexType>
<xsd:complexType name="EmployeeAvailabilityType">
<xsd:all>
<xsd:element name="api_key" type="xsd:string" parms="api_key" description="API key provided by astutepayroll.com"/>
<xsd:element name="api_username" type="xsd:string" parms="api_username" description="API username provided by astutepayroll.com"/>
<xsd:element name="api_password" type="xsd:string" parms="api_password" description="API password provided by astutepayroll.com"/>
<xsd:element name="UID" type="xsd:int" parms="UID" minOccurs="0" description="The internal ID for the employee. Use UserQuery to find the UID"/>
<xsd:element name="remoteid" type="xsd:string" parms="remoteid" minOccurs="0" maxLength="100" description="A remote ID allows you to maintain consistency by storing your primary ID in our database. If you ever need to update this record, you can provide the remoteid and we'll update the associated record."/>
<xsd:element name="employee_availability" type="xsd:string" parms="employee_availability" minOccurs="1" description="Standard Availability for Employee"/>
<xsd:element name="skip_update" type="xsd:int" parms="skip_update" minOccurs="0" maxLength="1" description="Defines if availability will be skipped if data already exists for employee"/>
</xsd:all>
</xsd:complexType>
<xsd:complexType name="GetScheduledExtractInfo">
<xsd:all>
<xsd:element name="api_key" type="xsd:string" parms="api_key" description="API key provided by astutepayroll.com"/>
<xsd:element name="api_username" type="xsd:string" parms="api_username" description="API username provided by astutepayroll.com"/>
<xsd:element name="api_password" type="xsd:string" parms="api_password" description="API password provided by astutepayroll.com"/>
<xsd:element name="api_transaction_id" type="xsd:string" parms="api_transaction_id" minOccurs="0" description="Transaction identifier (Optional)"/>
</xsd:all>
</xsd:complexType>
<xsd:complexType name="GetStoredFile">
<xsd:all>
<xsd:element name="api_key" type="xsd:string" parms="api_key" description="API key provided by astutepayroll.com"/>
<xsd:element name="api_username" type="xsd:string" parms="api_username" description="API username provided by astutepayroll.com"/>
<xsd:element name="api_password" type="xsd:string" parms="api_password" description="API password provided by astutepayroll.com"/>
<xsd:element name="api_transaction_id" type="xsd:string" parms="api_transaction_id" minOccurs="0" description="Transaction identifier (Optional)"/>
<xsd:element name="storage_id" type="xsd:string" parms="storage_id" minOccurs="0" description="storage id of file"/>
</xsd:all>
</xsd:complexType>
<xsd:complexType name="GetStoredFileInfo">
<xsd:all>
<xsd:element name="api_key" type="xsd:string" parms="api_key" description="API key provided by astutepayroll.com"/>
<xsd:element name="api_username" type="xsd:string" parms="api_username" description="API username provided by astutepayroll.com"/>
<xsd:element name="api_password" type="xsd:string" parms="api_password" description="API password provided by astutepayroll.com"/>
<xsd:element name="api_transaction_id" type="xsd:string" parms="api_transaction_id" minOccurs="0" description="Transaction identifier (Optional)"/>
<xsd:element name="storage_id" type="xsd:string" parms="storage_id" minOccurs="0" description="storage id of file"/>
</xsd:all>
</xsd:complexType>
<xsd:simpleType name="SearchConditionOptions">
<xsd:restriction base="xsd:string">
<xsd:enumeration value="AND"/>
<xsd:enumeration value="OR"/>
</xsd:restriction>
</xsd:simpleType>
</xsd:schema>
</types>
<message name="employeeTerminateRequest">
<part name="parms_in" type="tns:employeeTerminate"/>
</message>
<message name="employeeTerminateResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="ArchiveEmployeeRequest">
<part name="parms_in" type="tns:ArchiveEmployee"/>
</message>
<message name="ArchiveEmployeeResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="UnarchiveEmployeeRequest">
<part name="parms_in" type="tns:UnarchiveEmployee"/>
</message>
<message name="UnarchiveEmployeeResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="ListTaxTablesRequest">
<part name="parms_in" type="tns:user"/>
</message>
<message name="ListTaxTablesResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="ListInvoiceTemplatesRequest">
<part name="parms_in" type="tns:user"/>
</message>
<message name="ListInvoiceTemplatesResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="UserQueryRequest">
<part name="parms_in" type="tns:userGet"/>
</message>
<message name="UserQueryResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="HolidayGroupQueryRequest">
<part name="parms_in" type="tns:userGet"/>
</message>
<message name="HolidayGroupQueryResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="OccupationQueryRequest">
<part name="parms_in" type="tns:userGet"/>
</message>
<message name="OccupationQueryResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="OccupationSaveRequest">
<part name="parms_in" type="tns:OccupationSave"/>
</message>
<message name="OccupationSaveResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="OccupationDeleteRequest">
<part name="parms_in" type="tns:OccupationDelete"/>
</message>
<message name="OccupationDeleteResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="OccupationAddRateChangeRequest">
<part name="parms_in" type="tns:OccupationAddRateChange"/>
</message>
<message name="OccupationAddRateChangeResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="RateQueryRequest">
<part name="parms_in" type="tns:userGet"/>
</message>
<message name="RateQueryResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="RateNameQueryRequest">
<part name="parms_in" type="tns:userGet"/>
</message>
<message name="RateNameQueryResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="RateCardQueryRequest">
<part name="parms_in" type="tns:searchElement"/>
</message>
<message name="RateCardQueryResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="RateCardAttachmentsQueryRequest">
<part name="parms_in" type="tns:RateCardAttachmentsQuery"/>
</message>
<message name="RateCardAttachmentsQueryResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="RateCardSaveRequest">
<part name="parms_in" type="tns:RateCardSave"/>
</message>
<message name="RateCardSaveResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="RateCardDeleteRequest">
<part name="parms_in" type="tns:RateCardDelete"/>
</message>
<message name="RateCardDeleteResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="RateCardAddRateRequest">
<part name="parms_in" type="tns:RateCardAddRate"/>
</message>
<message name="RateCardAddRateResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="RateCardAddRateChangeRequest">
<part name="parms_in" type="tns:RateCardAddRateChange"/>
</message>
<message name="RateCardAddRateChangeResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="UserRateQueryRequest">
<part name="parms_in" type="tns:userGet"/>
</message>
<message name="UserRateQueryResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="UserAddRateChangeRequest">
<part name="parms_in" type="tns:UserAddRateChange"/>
</message>
<message name="UserAddRateChangeResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="UserRemoveRateChangeRequest">
<part name="parms_in" type="tns:UserRemoveRateChange"/>
</message>
<message name="UserRemoveRateChangeResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="UserRateHistoryQueryRequest">
<part name="parms_in" type="tns:userGet"/>
</message>
<message name="UserRateHistoryQueryResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="BillerQueryRequest">
<part name="parms_in" type="tns:userGet"/>
</message>
<message name="BillerQueryResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="SupplierQueryRequest">
<part name="parms_in" type="tns:userGet"/>
</message>
<message name="SupplierQueryResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="BillerContactsQueryRequest">
<part name="parms_in" type="tns:userGet"/>
</message>
<message name="BillerContactsQueryResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="BillerWorkplaceQueryRequest">
<part name="parms_in" type="tns:userGet"/>
</message>
<message name="BillerWorkplaceQueryResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="ListRegionsRequest">
<part name="parms_in" type="tns:user"/>
</message>
<message name="ListRegionsResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="ListPermissionGroupsRequest">
<part name="parms_in" type="tns:user"/>
</message>
<message name="ListPermissionGroupsResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="ListCurrenciesRequest">
<part name="parms_in" type="tns:user"/>
</message>
<message name="ListCurrenciesResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="AwardsQueryRequest">
<part name="parms_in" type="tns:userGet"/>
</message>
<message name="AwardsQueryResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="RuleGroupQueryRequest">
<part name="parms_in" type="tns:searchElement"/>
</message>
<message name="RuleGroupQueryResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="RuleGroupAttachmentsQueryRequest">
<part name="parms_in" type="tns:RuleGroupAttachmentsQuery"/>
</message>
<message name="RuleGroupAttachmentsQueryResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="CompanyEntityQueryRequest">
<part name="parms_in" type="tns:userGet"/>
</message>
<message name="CompanyEntityQueryResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="CompanyEntityDivisionQueryRequest">
<part name="parms_in" type="tns:userGet"/>
</message>
<message name="CompanyEntityDivisionQueryResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="DivisionQueryRequest">
<part name="parms_in" type="tns:userGet"/>
</message>
<message name="DivisionQueryResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="PayCycleQueryRequest">
<part name="parms_in" type="tns:userGet"/>
</message>
<message name="PayCycleQueryResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="UserSaveRequest">
<part name="parms_in" type="tns:userSave"/>
</message>
<message name="UserSaveResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="BillerSaveRequest">
<part name="parms_in" type="tns:billerSave"/>
</message>
<message name="BillerSaveResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="BillerContactsSaveRequest">
<part name="parms_in" type="tns:BillerContactsSave"/>
</message>
<message name="BillerContactsSaveResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="SupplierSaveRequest">
<part name="parms_in" type="tns:SupplierSave"/>
</message>
<message name="SupplierSaveResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="BillerWorkplaceSaveRequest">
<part name="parms_in" type="tns:BillerWorkplaceSave"/>
</message>
<message name="BillerWorkplaceSaveResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="UserDeleteRequest">
<part name="parms_in" type="tns:userDelete"/>
</message>
<message name="UserDeleteResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="InvoiceItemSaveRequest">
<part name="parms_in" type="tns:InvoiceItemSave"/>
</message>
<message name="InvoiceItemSaveResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="InvoiceItemQueryRequest">
<part name="parms_in" type="tns:userGet"/>
</message>
<message name="InvoiceItemQueryResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="InvoiceItemChargeQueryRequest">
<part name="parms_in" type="tns:userGet"/>
</message>
<message name="InvoiceItemChargeQueryResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="InvoiceItemRevenueSplitSaveRequest">
<part name="parms_in" type="tns:InvoiceItemRevenueSplitSave"/>
</message>
<message name="InvoiceItemRevenueSplitSaveResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="InvoiceItemRevenueSplitQueryRequest">
<part name="parms_in" type="tns:userGet"/>
</message>
<message name="InvoiceItemRevenueSplitQueryResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="ListTaxesRequest">
<part name="parms_in" type="tns:user"/>
</message>
<message name="ListTaxesResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="SubentityLevelOneQueryRequest">
<part name="parms_in" type="tns:userGet"/>
</message>
<message name="SubentityLevelOneQueryResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="SubentityLevelTwoQueryRequest">
<part name="parms_in" type="tns:userGet"/>
</message>
<message name="SubentityLevelTwoQueryResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="CompanyEntitySubentityQueryRequest">
<part name="parms_in" type="tns:userGet"/>
</message>
<message name="CompanyEntitySubentityQueryResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="SubentityAssignmentQueryRequest">
<part name="parms_in" type="tns:userGet"/>
</message>
<message name="SubentityAssignmentQueryResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="TimesheetSaveRequest">
<part name="parms_in" type="tns:timesheetSave"/>
</message>
<message name="TimesheetSaveResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="TimesheetApproveRequest">
<part name="parms_in" type="tns:TimesheetApprove"/>
</message>
<message name="TimesheetApproveResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="TimesheetCreateAdjustmentRequest">
<part name="parms_in" type="tns:TimesheetCreateAdjustment"/>
</message>
<message name="TimesheetCreateAdjustmentResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="TimesheetQueryRequest">
<part name="parms_in" type="tns:userGet"/>
</message>
<message name="TimesheetQueryResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="ListLeaveTypesRequest">
<part name="parms_in" type="tns:userGet"/>
</message>
<message name="ListLeaveTypesResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="UserLeaveBalanceListRequest">
<part name="parms_in" type="tns:UserLeaveBalanceList"/>
</message>
<message name="UserLeaveBalanceListResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="UserLeaveBalanceSaveRequest">
<part name="parms_in" type="tns:UserLeaveBalanceSave"/>
</message>
<message name="UserLeaveBalanceSaveResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="UserLeaveTypeAssignRequest">
<part name="parms_in" type="tns:UserLeaveTypeAssign"/>
</message>
<message name="UserLeaveTypeAssignResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="UserLeaveTypeUnAssignRequest">
<part name="parms_in" type="tns:UserLeaveTypeUnAssign"/>
</message>
<message name="UserLeaveTypeUnAssignResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="PayItemQueryRequest">
<part name="parms_in" type="tns:userGet"/>
</message>
<message name="PayItemQueryResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="UserAddSuperItemRequest">
<part name="parms_in" type="tns:userAddSuperItem"/>
</message>
<message name="UserAddSuperItemResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="UserRemoveSuperItemRequest">
<part name="parms_in" type="tns:UserRemoveSuperItem"/>
</message>
<message name="UserRemoveSuperItemResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="SuperItemQueryRequest">
<part name="parms_in" type="tns:userGet"/>
</message>
<message name="SuperItemQueryResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="UserSuperItemQueryRequest">
<part name="parms_in" type="tns:userGet"/>
</message>
<message name="UserSuperItemQueryResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="TimesheetAddInterpRequest">
<part name="parms_in" type="tns:TimesheetAddInterp"/>
</message>
<message name="TimesheetAddInterpResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="TimesheetDeleteInterpRequest">
<part name="parms_in" type="tns:TimesheetDeleteInterp"/>
</message>
<message name="TimesheetDeleteInterpResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="TimesheetQueryInterpRequest">
<part name="parms_in" type="tns:userGet"/>
</message>
<message name="TimesheetQueryInterpResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="TimesheetAddAttachmentRequest">
<part name="parms_in" type="tns:TimesheetAttachment"/>
</message>
<message name="TimesheetAddAttachmentResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="TimesheetRemoveAttachmentRequest">
<part name="parms_in" type="tns:TimesheetAttachment"/>
</message>
<message name="TimesheetRemoveAttachmentResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="TimesheetQueryAttachmentRequest">
<part name="parms_in" type="tns:userGet"/>
</message>
<message name="TimesheetQueryAttachmentResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="TimesheetInterpQueryRequest">
<part name="parms_in" type="tns:userGet"/>
</message>
<message name="TimesheetInterpQueryResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="TimesheetAddShiftRequest">
<part name="parms_in" type="tns:TimesheetAddShift"/>
</message>
<message name="TimesheetAddShiftResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="TimesheetDeleteShiftRequest">
<part name="parms_in" type="tns:TimesheetDeleteShift"/>
</message>
<message name="TimesheetDeleteShiftResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="TimesheetQueryShiftRequest">
<part name="parms_in" type="tns:userGet"/>
</message>
<message name="TimesheetQueryShiftResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="PayrollQueryRequest">
<part name="parms_in" type="tns:userGet"/>
</message>
<message name="PayrollQueryResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="UserAddDeductionRequest">
<part name="parms_in" type="tns:UserAddDeduction"/>
</message>
<message name="UserAddDeductionResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="DeductionQueryRequest">
<part name="parms_in" type="tns:userGet"/>
</message>
<message name="DeductionQueryResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="UserDeductionQueryRequest">
<part name="parms_in" type="tns:userGet"/>
</message>
<message name="UserDeductionQueryResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="UserRemoveDeductionRequest">
<part name="parms_in" type="tns:UserRemoveDeduction"/>
</message>
<message name="UserRemoveDeductionResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="UserAddFixedPayItemRequest">
<part name="parms_in" type="tns:UserAddFixedPayItem"/>
</message>
<message name="UserAddFixedPayItemResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="UserRemoveFixedPayItemRequest">
<part name="parms_in" type="tns:UserRemoveFixedPayItem"/>
</message>
<message name="UserRemoveFixedPayItemResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="InvoiceBalanceRetrieveRequest">
<part name="parms_in" type="tns:InvoiceBalanceRetrieve"/>
</message>
<message name="InvoiceBalanceRetrieveResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="InvoiceBalanceAdjustRequest">
<part name="parms_in" type="tns:InvoiceBalanceAdjust"/>
</message>
<message name="InvoiceBalanceAdjustResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="UserFixedPayItemQueryRequest">
<part name="parms_in" type="tns:userGet"/>
</message>
<message name="UserFixedPayItemQueryResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="UserAddDocumentRequest">
<part name="parms_in" type="tns:UserAddDocument"/>
</message>
<message name="UserAddDocumentResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="UserRemoveDocumentRequest">
<part name="parms_in" type="tns:UserRemoveDocument"/>
</message>
<message name="UserRemoveDocumentResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="BillerTagAddRequest">
<part name="parms_in" type="tns:BillerTagAdd"/>
</message>
<message name="BillerTagAddResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="BillerTagRemoveRequest">
<part name="parms_in" type="tns:BillerTagRemove"/>
</message>
<message name="BillerTagRemoveResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="InvoiceItemTypeListRequest">
<part name="parms_in" type="tns:user"/>
</message>
<message name="InvoiceItemTypeListResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="ReportRunRequest">
<part name="parms_in" type="tns:ReportRunType"/>
</message>
<message name="ReportRunResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="GLGroupQueryRequest">
<part name="parms_in" type="tns:userGet"/>
</message>
<message name="GLGroupQueryResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="ListGLGroupsRequest">
<part name="parms_in" type="tns:user"/>
</message>
<message name="ListGLGroupsResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="EmployeeAvailabilitySaveRequest">
<part name="parms_in" type="tns:EmployeeAvailabilityType"/>
</message>
<message name="EmployeeAvailabilitySaveResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="EmployeeAvailabilityQueryRequest">
<part name="parms_in" type="tns:userGet"/>
</message>
<message name="EmployeeAvailabilityQueryResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="EmployeeNonAvailabilityQueryRequest">
<part name="parms_in" type="tns:userGet"/>
</message>
<message name="EmployeeNonAvailabilityQueryResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="SysTransactionV1QueryRequest">
<part name="parms_in" type="tns:searchElement"/>
</message>
<message name="SysTransactionV1QueryResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="InsuranceQueryRequest">
<part name="parms_in" type="tns:user"/>
</message>
<message name="InsuranceQueryResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="InvoicePaymentQueryRequest">
<part name="parms_in" type="tns:searchElement"/>
</message>
<message name="InvoicePaymentQueryResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="GetScheduledExtractInfoRequest">
<part name="parms_in" type="tns:GetScheduledExtractInfo"/>
</message>
<message name="GetScheduledExtractInfoResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="GetStoredFileRequest">
<part name="parms_in" type="tns:GetStoredFile"/>
</message>
<message name="GetStoredFileResponse">
<part name="parms_out" type="tns:results"/>
</message>
<message name="GetStoredFileInfoRequest">
<part name="parms_in" type="tns:GetStoredFileInfo"/>
</message>
<message name="GetStoredFileInfoResponse">
<part name="parms_out" type="tns:results"/>
</message>
<portType name="Astutepayroll.com_Web_Service_v0.80PortType">
<operation name="employeeTerminate">
<documentation>Set or modify employment termination details.</documentation>
<input message="tns:employeeTerminateRequest"/>
<output message="tns:employeeTerminateResponse"/>
</operation>
<operation name="ArchiveEmployee">
<documentation>Set or modify employment termination details.</documentation>
<input message="tns:ArchiveEmployeeRequest"/>
<output message="tns:ArchiveEmployeeResponse"/>
</operation>
<operation name="UnarchiveEmployee">
<documentation>Set or modify employment termination details.</documentation>
<input message="tns:UnarchiveEmployeeRequest"/>
<output message="tns:UnarchiveEmployeeResponse"/>
</operation>
<operation name="ListTaxTables">
<documentation>
Retrieve the list of available tax tables for use with the tax_table field on UserSave
</documentation>
<input message="tns:ListTaxTablesRequest"/>
<output message="tns:ListTaxTablesResponse"/>
</operation>
<operation name="ListInvoiceTemplates">
<documentation>
Retrieve the list of available invoice templates for use with BillerSave and BillerContactsSave
</documentation>
<input message="tns:ListInvoiceTemplatesRequest"/>
<output message="tns:ListInvoiceTemplatesResponse"/>
</operation>
<operation name="UserQuery">
<documentation>
Each User has a UID that you can look up. This enables you to assign and update existing users. Employees have a UID and also UID's for their jobs. It is very important that you use both of these UID's otherwise you will duplicate Jobs within the system. You can update all user types and employee jobs through the Web Service. See UserSave for more details about types of Users.
</documentation>
<input message="tns:UserQueryRequest"/>
<output message="tns:UserQueryResponse"/>
</operation>
<operation name="HolidayGroupQuery">
<documentation>Get the holiday_group_id to assign to a job.</documentation>
<input message="tns:HolidayGroupQueryRequest"/>
<output message="tns:HolidayGroupQueryResponse"/>
</operation>
<operation name="OccupationQuery">
<documentation>
Query the occupation library for valid OL_OID values to use with UserSave.
</documentation>
<input message="tns:OccupationQueryRequest"/>
<output message="tns:OccupationQueryResponse"/>
</operation>
<operation name="OccupationSave">
<documentation>
Create a new Occupation or Update an existing Occupation
</documentation>
<input message="tns:OccupationSaveRequest"/>
<output message="tns:OccupationSaveResponse"/>
</operation>
<operation name="OccupationDelete">
<documentation>Delete an Occupation</documentation>
<input message="tns:OccupationDeleteRequest"/>
<output message="tns:OccupationDeleteResponse"/>
</operation>
<operation name="OccupationAddRateChange">
<documentation>Add a Rate Change to an Occupation</documentation>
<input message="tns:OccupationAddRateChangeRequest"/>
<output message="tns:OccupationAddRateChangeResponse"/>
</operation>
<operation name="RateQuery">
<documentation>Query pay, Oncosts and charge rates.</documentation>
<input message="tns:RateQueryRequest"/>
<output message="tns:RateQueryResponse"/>
</operation>
<operation name="RateNameQuery">
<documentation>
Rate names allow different rates to be joined to a different rate cards.
</documentation>
<input message="tns:RateNameQueryRequest"/>
<output message="tns:RateNameQueryResponse"/>
</operation>
<operation name="RateCardQuery">
<documentation>Get Rate Cards information by PCGID or Tags</documentation>
<input message="tns:RateCardQueryRequest"/>
<output message="tns:RateCardQueryResponse"/>
</operation>
<operation name="RateCardAttachmentsQuery">
<documentation>
Get attachments information associated to Rate Card
</documentation>
<input message="tns:RateCardAttachmentsQueryRequest"/>
<output message="tns:RateCardAttachmentsQueryResponse"/>
</operation>
<operation name="RateCardSave">
<documentation>
Create a new Rate Card or Update an existing Rate Card.
</documentation>
<input message="tns:RateCardSaveRequest"/>
<output message="tns:RateCardSaveResponse"/>
</operation>
<operation name="RateCardDelete">
<documentation>Delete a Rate Card</documentation>
<input message="tns:RateCardDeleteRequest"/>
<output message="tns:RateCardDeleteResponse"/>
</operation>
<operation name="RateCardAddRate">
<documentation>
Add a new Rate card. Requires a combination of PCGID or ratecard_remoteid and name or PCNID.
</documentation>
<input message="tns:RateCardAddRateRequest"/>
<output message="tns:RateCardAddRateResponse"/>
</operation>
<operation name="RateCardAddRateChange">
<documentation>
Add a new Rate change to an existing Rate. Requires a Rate ID (PCID) or combination of PCGID or ratecard_remoteid and name or PCNID.
</documentation>
<input message="tns:RateCardAddRateChangeRequest"/>
<output message="tns:RateCardAddRateChangeResponse"/>
</operation>
<operation name="UserRateQuery">
<documentation>
Get all the rates assigned to a users using the UID.
</documentation>
<input message="tns:UserRateQueryRequest"/>
<output message="tns:UserRateQueryResponse"/>
</operation>
<operation name="UserAddRateChange">
<documentation>Add Rate to an Employee</documentation>
<input message="tns:UserAddRateChangeRequest"/>
<output message="tns:UserAddRateChangeResponse"/>
</operation>
<operation name="UserRemoveRateChange">
<documentation>Remove Rate from an Employee</documentation>
<input message="tns:UserRemoveRateChangeRequest"/>
<output message="tns:UserRemoveRateChangeResponse"/>
</operation>
<operation name="UserRateHistoryQuery">
<documentation>Get rate changes over time.</documentation>
<input message="tns:UserRateHistoryQueryRequest"/>
<output message="tns:UserRateHistoryQueryResponse"/>
</operation>
<operation name="BillerQuery">
<documentation>
You can query Billers to review and use existing Billers. See BillerSave
</documentation>
<input message="tns:BillerQueryRequest"/>
<output message="tns:BillerQueryResponse"/>
</operation>
<operation name="SupplierQuery">
<documentation>
You can query Suppliers to review and use existing Suppliers. See Supplier Save
</documentation>
<input message="tns:SupplierQueryRequest"/>
<output message="tns:SupplierQueryResponse"/>
</operation>
<operation name="BillerContactsQuery">
<documentation>
A Biller (Customer) may have multiple contacts that invoices need to be sent to. These contacts are called Billing Contacts. A Billing Contact consists of: a Name, Primary Email Address, Additional CC email addresses, Street Address, Suburb/Town, State, and Postcode The invoice will be made "Attention to" the Name, and sent to all email addresses. The address will be used as the billing address. NOTE: if the address is left blank the system will use the Customer's address. You can create new Billing Contacts. You can also look up existing billing contacts and reuse these on different jobs. NOTE: in the Front End Interface there is a "Default Billing Contact". This is useful where information is being inputted manually onto the system. It is not required and is not used through the webservice - typically the information is inputted into the "Additional Billing Contacts" table.
</documentation>
<input message="tns:BillerContactsQueryRequest"/>
<output message="tns:BillerContactsQueryResponse"/>
</operation>
<operation name="BillerWorkplaceQuery">
<documentation>
You can query BillerWorkplaces to review and use existing Workplaces. See BillerWorkplaceSave
</documentation>
<input message="tns:BillerWorkplaceQueryRequest"/>
<output message="tns:BillerWorkplaceQueryResponse"/>
</operation>
<operation name="ListRegions">
<documentation>
The system has a list of states and countries. These are used in the State field in the address. You can query this and it will return a full list.
</documentation>
<input message="tns:ListRegionsRequest"/>
<output message="tns:ListRegionsResponse"/>
</operation>
<operation name="ListPermissionGroups">
<documentation>
The system has a list of Permission Groups. These are used to assign a Permission Groups to a user to determin what Employees they can view.
</documentation>
<input message="tns:ListPermissionGroupsRequest"/>
<output message="tns:ListPermissionGroupsResponse"/>
</operation>
<operation name="ListCurrencies">
<documentation>
The system has a list of enabled currencies. These can be assigned to Billers, Biller Contacts, Suppliers, Employees, RateCards, Occupations and company accounts.
</documentation>
<input message="tns:ListCurrenciesRequest"/>
<output message="tns:ListCurrenciesResponse"/>
</operation>
<operation name="AwardsQuery">
<documentation>
This method is deprecated in favor of RuleGroupQuery for all portals using the v2 interpreter.
</documentation>
<input message="tns:AwardsQueryRequest"/>
<output message="tns:AwardsQueryResponse"/>
</operation>
<operation name="RuleGroupQuery">
<documentation>
Employees work under different Pay Conditions that stiplulate what they get paid for the work that they do. Some of these conditions are required by legislatoin, others are made under agreement with the employee. Clients will then be charged accordingly. The Pay Conditions module is a rules engine that automates the interpretation of timesheets for payroll and invoicing. Interpretation will typically cover overtime hours that are paid at a different rate or hours worked on a weekend/public holiday, as well as any fixed rate allowances such as meal or uniform allowances. There are two key components to Pay Conditions: Rules and Pay Codes. Rules contain triggers and outcomes. For example a trigger might be "working on Saturday" and the Outcome might be to use the Double Time pay item. Another Trigger might be "starting before 6.30am" and the outcome might be that the entire shift has a loading. "Rules" are grouped together into Rule Groups. Rule Groups are then allocated to the Employee's job. You cannot create Rules or Rule Groups through the Web Service, but you are able to look them up by their ID (RGID) or by Tags and assign them. Pay Codes contains the Pay and the Charge Rates. Pay Codes are grouped into Pay Groups - these are assigned to Employee's jobs. A Rule may determine which Pay Code to use or it may be manually assigned. You cannot create Pay Codes through the Web Service, but you are able to look them up and assign them.
</documentation>
<input message="tns:RuleGroupQueryRequest"/>
<output message="tns:RuleGroupQueryResponse"/>
</operation>
<operation name="RuleGroupAttachmentsQuery">
<documentation>
Get attachments information associated to Rule Group
</documentation>
<input message="tns:RuleGroupAttachmentsQueryRequest"/>
<output message="tns:RuleGroupAttachmentsQueryResponse"/>
</operation>
<operation name="CompanyEntityQuery">
<documentation>
The Company Entity houses the information about the Pty Ltd Company that owns the system. This is where they put information pertaining to them - for example, the payment terms that they need to put on their invoices. The system supports multiple Company Entities - so Companies that have multiple entities can run these all through a single system.
</documentation>
<input message="tns:CompanyEntityQueryRequest"/>
<output message="tns:CompanyEntityQueryResponse"/>
</operation>
<operation name="CompanyEntityDivisionQuery">
<input message="tns:CompanyEntityDivisionQueryRequest"/>
<output message="tns:CompanyEntityDivisionQueryResponse"/>
</operation>
<operation name="DivisionQuery">
<input message="tns:DivisionQueryRequest"/>
<output message="tns:DivisionQueryResponse"/>
</operation>
<operation name="PayCycleQuery">
<documentation>
Query pay cycles to get a PCYID for UserSave pay_cycle attribute
</documentation>
<input message="tns:PayCycleQueryRequest"/>
<output message="tns:PayCycleQueryResponse"/>
</operation>
<operation name="UserSave">
<documentation>
The system has the following user types: Employee (PAYG/Subcontractor), Approver, Payroll Administrator, Portal Administrator, Payroll Ofifcer, Recruiter, Financial Controller. There are also profiles for Suppliers and Customers - neither of these profiles have logins). Billing Contacts do not have profiles. You can create all user types through the Web Service
</documentation>
<input message="tns:UserSaveRequest"/>
<output message="tns:UserSaveResponse"/>
</operation>
<operation name="BillerSave">
<documentation>
A Biller is the "Company" that an invoice will be sent to. In the front end interface it is referred to as a Customer. Another commonly used term is "Client". You can create new Customers. You can also look up existing Customers and edit them or reuse these on different jobs.
</documentation>
<input message="tns:BillerSaveRequest"/>
<output message="tns:BillerSaveResponse"/>
</operation>
<operation name="BillerContactsSave">
<documentation>
A Biller (Customer) may have multiple contacts that invoices need to be sent to. These contacts are called Billing Contacts. A Billing Contact consists of: a Name, Primary Email Address, Additional CC email addresses, Street Address, Suburb/Town, State, and Postcode The invoice will be made "Attention to" the Name, and sent to all email addresses. The address will be used as the billing address. NOTE: if the address is left blank the system will use the Customer's address. You can create new Billing Contacts. You can also look up existing billing contacts and reuse these on different jobs. NOTE: in the Front End Interface there is a "Default Billing Contact". This is useful where information is being inputted manually onto the system. It is not required and is not used through the webservice - typically the information is inputted into the "Additional Billing Contacts" table.
</documentation>
<input message="tns:BillerContactsSaveRequest"/>
<output message="tns:BillerContactsSaveResponse"/>
</operation>
<operation name="SupplierSave">
<documentation>
A Supplier is a Pty Ltd Company that is providing employees to the company that owns the portal. The (portal owner) company does not pay wages to these employees as they are NOT the employees of the (portal owner) Company - instead they pay a supplier . invoice. Transactions between these parties is commonly referred to as a "Purchase". To assign a Supplier, the "Pay Type" for an employee needs to be set to "Subcontractor with ABN" [Users > Employees > Employment > Pay Type]. This removes the payroll information for the employee (bank accounts, Tax and Super etc) and replaces it with a field to select the Supplier. The employee will still submit timesheets and expenses and these will generate invoices to sent to the Biller as per usual. The difference is that they will create Supplier purchase invoices instead of payroll. The Supplier will then be responsible for paying THEIR employee. The employee may own the Supplier - for example they could be a Sole Trader. Alternatively a Supplier may have multiple employees working for this Portal Owner Company and other non-related Companies.
</documentation>
<input message="tns:SupplierSaveRequest"/>
<output message="tns:SupplierSaveResponse"/>
</operation>
<operation name="BillerWorkplaceSave">
<documentation>
The Biller Workplace most commonly relates to the physical location of the place where the employee will be working. A workplace consists of a Name, Street Address, Suburb/Town, State, and Postcode. Workplaces are mandatory on employee jobs. They are the label that is used to identify and differentiate Jobs. Workplaces can be entered as Free Text, but it is best to use these defined Workplaces as many functions on the system are configured around these. You can create new workplaces. You can also look up existing workplaces and reuse these on different jobs.
</documentation>
<input message="tns:BillerWorkplaceSaveRequest"/>
<output message="tns:BillerWorkplaceSaveResponse"/>
</operation>
<operation name="UserDelete">
<documentation>
You can delete all users unless they have associated data. For employees this means that they have accepted compliance documents or submited timesheets/expenses. For other users it means that they have either accepted documents or are associated with a Job.
</documentation>
<input message="tns:UserDeleteRequest"/>
<output message="tns:UserDeleteResponse"/>
</operation>
<operation name="InvoiceItemSave">
<documentation>
Create arbitrary invoice items for future collation into invoices ready to send to Customers (Billers).
</documentation>
<input message="tns:InvoiceItemSaveRequest"/>
<output message="tns:InvoiceItemSaveResponse"/>
</operation>
<operation name="InvoiceItemQuery">
<documentation>
Retrieve information about an Invoice Item created using InvoiceItemSave.
</documentation>
<input message="tns:InvoiceItemQueryRequest"/>
<output message="tns:InvoiceItemQueryResponse"/>
</operation>
<operation name="InvoiceItemChargeQuery">
<documentation>
Retrieve information about an Invoice Item Charge created using InvoiceItemChargeQuery.
</documentation>
<input message="tns:InvoiceItemChargeQueryRequest"/>
<output message="tns:InvoiceItemChargeQueryResponse"/>
</operation>
<operation name="InvoiceItemRevenueSplitSave">
<documentation>Create revenue split on an invoice item.</documentation>
<input message="tns:InvoiceItemRevenueSplitSaveRequest"/>
<output message="tns:InvoiceItemRevenueSplitSaveResponse"/>
</operation>
<operation name="InvoiceItemRevenueSplitQuery">
<documentation>
Retrieve information about an Invoice Item Revenue Split created using InvoiceItemRevenueSplitSave.
</documentation>
<input message="tns:InvoiceItemRevenueSplitQueryRequest"/>
<output message="tns:InvoiceItemRevenueSplitQueryResponse"/>
</operation>
<operation name="ListTaxes">
<documentation>
Retrieve the list of available taxes for use with InvoiceItemSave
</documentation>
<input message="tns:ListTaxesRequest"/>
<output message="tns:ListTaxesResponse"/>
</operation>
<operation name="SubentityLevelOneQuery">
<documentation>Query level one subentities</documentation>
<input message="tns:SubentityLevelOneQueryRequest"/>
<output message="tns:SubentityLevelOneQueryResponse"/>
</operation>
<operation name="SubentityLevelTwoQuery">
<documentation>Query level two subentities</documentation>
<input message="tns:SubentityLevelTwoQueryRequest"/>
<output message="tns:SubentityLevelTwoQueryResponse"/>
</operation>
<operation name="CompanyEntitySubentityQuery">
<documentation>
Query the relationship between company entities and level one subentities. See CompanyEntityQuery and SubentityLevelOneQuery
</documentation>
<input message="tns:CompanyEntitySubentityQueryRequest"/>
<output message="tns:CompanyEntitySubentityQueryResponse"/>
</operation>
<operation name="SubentityAssignmentQuery">
<documentation>
Query which level two subentities are paired with which level one subentities. See SubentityLevelOneQuery and SubentityLevelTwoQuery
</documentation>
<input message="tns:SubentityAssignmentQueryRequest"/>
<output message="tns:SubentityAssignmentQueryResponse"/>
</operation>
<operation name="TimesheetSave">
<input message="tns:TimesheetSaveRequest"/>
<output message="tns:TimesheetSaveResponse"/>
</operation>
<operation name="TimesheetApprove">
<documentation>
Submits and approves a timesheet, once approved a timesheet cannot be updated, if amendments are required you will need to raise an adjustment vie the portal.
</documentation>
<input message="tns:TimesheetApproveRequest"/>
<output message="tns:TimesheetApproveResponse"/>
</operation>
<operation name="TimesheetCreateAdjustment">
<documentation>
Creates an adjustment for an inactive (finalised) timesheet.
</documentation>
<input message="tns:TimesheetCreateAdjustmentRequest"/>
<output message="tns:TimesheetCreateAdjustmentResponse"/>
</operation>
<operation name="TimesheetQuery">
<documentation>
You can query Timesheets to review and use existing ones. See TimesheetSave
</documentation>
<input message="tns:TimesheetQueryRequest"/>
<output message="tns:TimesheetQueryResponse"/>
</operation>
<operation name="ListLeaveTypes">
<documentation>
Retrieve the list of available LeaveTypes. Shows both enabled and disabled leave types.
</documentation>
<input message="tns:ListLeaveTypesRequest"/>
<output message="tns:ListLeaveTypesResponse"/>
</operation>
<operation name="UserLeaveBalanceList">
<documentation>
You can query UserLeaveBalanceList to get a list of leave types assigned to an Employee and their resulting balances.
</documentation>
<input message="tns:UserLeaveBalanceListRequest"/>
<output message="tns:UserLeaveBalanceListResponse"/>
</operation>
<operation name="UserLeaveBalanceSave">
<documentation>
Sets the balance for a particular leave type for a particular Employee, provided they have the leave type assigned. New balance must be provided as a decimal number representing the total number of hours for the new balance (e.g. &quot;0.5&quot; for 30 minutes, &quot;12.4&quot; for 12 hours 24 minutes).
</documentation>
<input message="tns:UserLeaveBalanceSaveRequest"/>
<output message="tns:UserLeaveBalanceSaveResponse"/>
</operation>
<operation name="UserLeaveTypeAssign">
<documentation>
Assigns a leave type to an Employee, provided the leave type exists and is not already assigned to the Employee. If the leave type is configured to have an instant accrual upon first assignment or on a reset anniversary, then the balance will also be adjusted accordingly.
</documentation>
<input message="tns:UserLeaveTypeAssignRequest"/>
<output message="tns:UserLeaveTypeAssignResponse"/>
</operation>
<operation name="UserLeaveTypeUnAssign">
<documentation>
Un-assigns a leave type from an Employee, provided the leave type has been assigned to the Employee, has no leave requests pending-approval, and has a zero balance.
</documentation>
<input message="tns:UserLeaveTypeUnAssignRequest"/>
<output message="tns:UserLeaveTypeUnAssignResponse"/>
</operation>
<operation name="PayItemQuery">
<documentation>Query a Pay Item.</documentation>
<input message="tns:PayItemQueryRequest"/>
<output message="tns:PayItemQueryResponse"/>
</operation>
<operation name="UserAddSuperItem">
<documentation>
Employees can be assigned Superannuation Items at their default value or with a percentage or dollar value override, depending on the type of Superannuation item.
</documentation>
<input message="tns:UserAddSuperItemRequest"/>
<output message="tns:UserAddSuperItemResponse"/>
</operation>
<operation name="UserRemoveSuperItem">
<documentation>Remove Superannuation Items of an Employee</documentation>
<input message="tns:UserRemoveSuperItemRequest"/>
<output message="tns:UserRemoveSuperItemResponse"/>
</operation>
<operation name="SuperItemQuery">
<documentation>Query a Super Item.</documentation>
<input message="tns:SuperItemQueryRequest"/>
<output message="tns:SuperItemQueryResponse"/>
</operation>
<operation name="UserSuperItemQuery">
<documentation>Query a User's Super Items.</documentation>
<input message="tns:UserSuperItemQueryRequest"/>
<output message="tns:UserSuperItemQueryResponse"/>
</operation>
<operation name="TimesheetAddInterp">
<documentation>Add a Timesheet Pay Item.</documentation>
<input message="tns:TimesheetAddInterpRequest"/>
<output message="tns:TimesheetAddInterpResponse"/>
</operation>
<operation name="TimesheetDeleteInterp">
<documentation>Delete a Timesheet Pay Item.</documentation>
<input message="tns:TimesheetDeleteInterpRequest"/>
<output message="tns:TimesheetDeleteInterpResponse"/>
</operation>
<operation name="TimesheetQueryInterp">
<documentation>Query a Timesheet Pay Item.</documentation>
<input message="tns:TimesheetQueryInterpRequest"/>
<output message="tns:TimesheetQueryInterpResponse"/>
</operation>
<operation name="TimesheetAddAttachment">
<documentation>
This method associates an uploaded attachment with a timesheet.
</documentation>
<input message="tns:TimesheetAddAttachmentRequest"/>
<output message="tns:TimesheetAddAttachmentResponse"/>
</operation>
<operation name="TimesheetRemoveAttachment">
<documentation>
This method disassociates an uploaded attachment from a timesheet.
</documentation>
<input message="tns:TimesheetRemoveAttachmentRequest"/>
<output message="tns:TimesheetRemoveAttachmentResponse"/>
</operation>
<operation name="TimesheetQueryAttachment">
<documentation>Query a Timesheet Attachment.</documentation>
<input message="tns:TimesheetQueryAttachmentRequest"/>
<output message="tns:TimesheetQueryAttachmentResponse"/>
</operation>
<operation name="TimesheetInterpQuery">
<documentation>Query a Timesheet Pay Condition.</documentation>
<input message="tns:TimesheetInterpQueryRequest"/>
<output message="tns:TimesheetInterpQueryResponse"/>
</operation>
<operation name="TimesheetAddShift">
<documentation>Add a timesheet shift.</documentation>
<input message="tns:TimesheetAddShiftRequest"/>
<output message="tns:TimesheetAddShiftResponse"/>
</operation>
<operation name="TimesheetDeleteShift">
<documentation>Delete a timesheet shift.</documentation>
<input message="tns:TimesheetDeleteShiftRequest"/>
<output message="tns:TimesheetDeleteShiftResponse"/>
</operation>
<operation name="TimesheetQueryShift">
<documentation>Query a timesheet shift.</documentation>
<input message="tns:TimesheetQueryShiftRequest"/>
<output message="tns:TimesheetQueryShiftResponse"/>
</operation>
<operation name="PayrollQuery">
<documentation>Query a payroll item.</documentation>
<input message="tns:PayrollQueryRequest"/>
<output message="tns:PayrollQueryResponse"/>
</operation>
<operation name="UserAddDeduction">
<documentation>Employees can be assigned Deduction Item.</documentation>
<input message="tns:UserAddDeductionRequest"/>
<output message="tns:UserAddDeductionResponse"/>
</operation>
<operation name="DeductionQuery">
<documentation>Query a Deduction Item.</documentation>
<input message="tns:DeductionQueryRequest"/>
<output message="tns:DeductionQueryResponse"/>
</operation>
<operation name="UserDeductionQuery">
<documentation>Query a User's Deduction Items.</documentation>
<input message="tns:UserDeductionQueryRequest"/>
<output message="tns:UserDeductionQueryResponse"/>
</operation>
<operation name="UserRemoveDeduction">
<documentation>Remove Deduction Items of an Employee</documentation>
<input message="tns:UserRemoveDeductionRequest"/>
<output message="tns:UserRemoveDeductionResponse"/>
</operation>
<operation name="UserAddFixedPayItem">
<documentation>Employees can be assigned Fixed Pay Items.</documentation>
<input message="tns:UserAddFixedPayItemRequest"/>
<output message="tns:UserAddFixedPayItemResponse"/>
</operation>
<operation name="UserRemoveFixedPayItem">
<documentation>Remove FixedPay Items of an Employee</documentation>
<input message="tns:UserRemoveFixedPayItemRequest"/>
<output message="tns:UserRemoveFixedPayItemResponse"/>
</operation>
<operation name="InvoiceBalanceRetrieve">
<documentation>Retrieve current balance of an invoice</documentation>
<input message="tns:InvoiceBalanceRetrieveRequest"/>
<output message="tns:InvoiceBalanceRetrieveResponse"/>
</operation>
<operation name="InvoiceBalanceAdjust">
<documentation>Adjust balance on an Invoice</documentation>
<input message="tns:InvoiceBalanceAdjustRequest"/>
<output message="tns:InvoiceBalanceAdjustResponse"/>
</operation>
<operation name="UserFixedPayItemQuery">
<documentation>Query a User's Fixed Pay Items.</documentation>
<input message="tns:UserFixedPayItemQueryRequest"/>
<output message="tns:UserFixedPayItemQueryResponse"/>
</operation>
<operation name="UserAddDocument">
<documentation>Assign documents to users</documentation>
<input message="tns:UserAddDocumentRequest"/>
<output message="tns:UserAddDocumentResponse"/>
</operation>
<operation name="UserRemoveDocument">
<documentation>Unassign documents from users</documentation>
<input message="tns:UserRemoveDocumentRequest"/>
<output message="tns:UserRemoveDocumentResponse"/>
</operation>
<operation name="BillerTagAdd">
<documentation>Add a tag to a Biller</documentation>
<input message="tns:BillerTagAddRequest"/>
<output message="tns:BillerTagAddResponse"/>
</operation>
<operation name="BillerTagRemove">
<documentation>Add a tag to a Biller</documentation>
<input message="tns:BillerTagRemoveRequest"/>
<output message="tns:BillerTagRemoveResponse"/>
</operation>
<operation name="InvoiceItemTypeList">
<documentation>Retrieve the list of available Invoice Item Types</documentation>
<input message="tns:InvoiceItemTypeListRequest"/>
<output message="tns:InvoiceItemTypeListResponse"/>
</operation>
<operation name="ReportRun">
<documentation>retrieving report information</documentation>
<input message="tns:ReportRunRequest"/>
<output message="tns:ReportRunResponse"/>
</operation>
<operation name="GLGroupQuery">
<documentation>Query a GL Group.</documentation>
<input message="tns:GLGroupQueryRequest"/>
<output message="tns:GLGroupQueryResponse"/>
</operation>
<operation name="ListGLGroups">
<documentation>Retrieve the list of available GL Groups</documentation>
<input message="tns:ListGLGroupsRequest"/>
<output message="tns:ListGLGroupsResponse"/>
</operation>
<operation name="EmployeeAvailabilitySave">
<documentation>
Saves standard availability for an employee. Format "Mon M,Tue M,Wed A,Thu N" where M = Morning, A = Afternoon, N = Night
</documentation>
<input message="tns:EmployeeAvailabilitySaveRequest"/>
<output message="tns:EmployeeAvailabilitySaveResponse"/>
</operation>
<operation name="EmployeeAvailabilityQuery">
<documentation>
Retrieves employees Standard Availability from Monday to Sunday in the format "Mon M,Tue M,Wed A,Thu N" where M = Morning, A = Afternoon, N = Night
</documentation>
<input message="tns:EmployeeAvailabilityQueryRequest"/>
<output message="tns:EmployeeAvailabilityQueryResponse"/>
</operation>
<operation name="EmployeeNonAvailabilityQuery">
<documentation>
Retrieves employees Availability Exception periods.
</documentation>
<input message="tns:EmployeeNonAvailabilityQueryRequest"/>
<output message="tns:EmployeeNonAvailabilityQueryResponse"/>
</operation>
<operation name="SysTransactionV1Query">
<documentation>Get transactional data from the system</documentation>
<input message="tns:SysTransactionV1QueryRequest"/>
<output message="tns:SysTransactionV1QueryResponse"/>
</operation>
<operation name="InsuranceQuery">
<documentation>
Retrieve the list of available (unarchived) workplace insurances, which can then be used to set insurance_id fields.
</documentation>
<input message="tns:InsuranceQueryRequest"/>
<output message="tns:InsuranceQueryResponse"/>
</operation>
<operation name="InvoicePaymentQuery">
<documentation>Retrieves invoice payments</documentation>
<input message="tns:InvoicePaymentQueryRequest"/>
<output message="tns:InvoicePaymentQueryResponse"/>
</operation>
<operation name="GetScheduledExtractInfo">
<documentation>
Allow users to retrieve the latest scheduled extract info via the API
</documentation>
<input message="tns:GetScheduledExtractInfoRequest"/>
<output message="tns:GetScheduledExtractInfoResponse"/>
</operation>
<operation name="GetStoredFile">
<documentation>Allow users to download a stored file via the API</documentation>
<input message="tns:GetStoredFileRequest"/>
<output message="tns:GetStoredFileResponse"/>
</operation>
<operation name="GetStoredFileInfo">
<documentation>
Allow users to retrieve stored file information via the API
</documentation>
<input message="tns:GetStoredFileInfoRequest"/>
<output message="tns:GetStoredFileInfoResponse"/>
</operation>
</portType>
<binding name="Astutepayroll.com_Web_Service_v0.80Binding" type="tns:Astutepayroll.com_Web_Service_v0.80PortType">
<soap:binding style="rpc" transport="http://schemas.xmlsoap.org/soap/http"/>
<operation name="employeeTerminate">
<soap:operation soapAction="urn:employeeTerminate#employeeTerminate" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:employeeTerminate" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:employeeTerminate" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="ArchiveEmployee">
<soap:operation soapAction="urn:ArchiveEmployee#ArchiveEmployee" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:ArchiveEmployee" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:ArchiveEmployee" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="UnarchiveEmployee">
<soap:operation soapAction="urn:UnarchiveEmployee#UnarchiveEmployee" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:UnarchiveEmployee" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:UnarchiveEmployee" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="ListTaxTables">
<soap:operation soapAction="urn:ListTaxTables#ListTaxTables" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:ListTaxTables" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:ListTaxTables" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="ListInvoiceTemplates">
<soap:operation soapAction="urn:ListInvoiceTemplates#ListInvoiceTemplates" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:ListInvoiceTemplates" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:ListInvoiceTemplates" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="UserQuery">
<soap:operation soapAction="urn:UserQuery#UserQuery" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:UserQuery" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:UserQuery" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="HolidayGroupQuery">
<soap:operation soapAction="urn:HolidayGroupQuery#HolidayGroupQuery" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:HolidayGroupQuery" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:HolidayGroupQuery" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="OccupationQuery">
<soap:operation soapAction="urn:OccupationQuery#OccupationQuery" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:OccupationQuery" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:OccupationQuery" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="OccupationSave">
<soap:operation soapAction="urn:OccupationSave#OccupationSave" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:OccupationSave" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:OccupationSave" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="OccupationDelete">
<soap:operation soapAction="urn:OccupationDelete#OccupationDelete" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:OccupationDelete" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:OccupationDelete" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="OccupationAddRateChange">
<soap:operation soapAction="urn:OccupationAddRateChange#OccupationAddRateChange" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:OccupationAddRateChange" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:OccupationAddRateChange" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="RateQuery">
<soap:operation soapAction="urn:RateQuery#RateQuery" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:RateQuery" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:RateQuery" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="RateNameQuery">
<soap:operation soapAction="urn:RateNameQuery#RateNameQuery" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:RateNameQuery" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:RateNameQuery" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="RateCardQuery">
<soap:operation soapAction="urn:RateCardQuery#RateCardQuery" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:RateCardQuery" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:RateCardQuery" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="RateCardAttachmentsQuery">
<soap:operation soapAction="urn:RateCardAttachmentsQuery#RateCardAttachmentsQuery" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:RateCardAttachmentsQuery" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:RateCardAttachmentsQuery" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="RateCardSave">
<soap:operation soapAction="urn:RateCardSave#RateCardSave" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:RateCardSave" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:RateCardSave" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="RateCardDelete">
<soap:operation soapAction="urn:RateCardDelete#RateCardDelete" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:RateCardDelete" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:RateCardDelete" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="RateCardAddRate">
<soap:operation soapAction="urn:RateCardAddRate#RateCardAddRate" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:RateCardAddRate" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:RateCardAddRate" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="RateCardAddRateChange">
<soap:operation soapAction="urn:RateCardAddRateChange#RateCardAddRateChange" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:RateCardAddRateChange" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:RateCardAddRateChange" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="UserRateQuery">
<soap:operation soapAction="urn:UserRateQuery#UserRateQuery" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:UserRateQuery" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:UserRateQuery" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="UserAddRateChange">
<soap:operation soapAction="urn:UserAddRateChange#UserAddRateChange" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:UserAddRateChange" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:UserAddRateChange" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="UserRemoveRateChange">
<soap:operation soapAction="urn:UserRemoveRateChange#UserRemoveRateChange" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:UserRemoveRateChange" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:UserRemoveRateChange" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="UserRateHistoryQuery">
<soap:operation soapAction="urn:UserRateHistoryQuery#UserRateHistoryQuery" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:UserRateHistoryQuery" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:UserRateHistoryQuery" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="BillerQuery">
<soap:operation soapAction="urn:BillerQuery#BillerQuery" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:BillerQuery" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:BillerQuery" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="SupplierQuery">
<soap:operation soapAction="urn:SupplierQuery#SupplierQuery" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:SupplierQuery" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:SupplierQuery" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="BillerContactsQuery">
<soap:operation soapAction="urn:BillerContactsQuery#BillerContactsQuery" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:BillerContactsQuery" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:BillerContactsQuery" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="BillerWorkplaceQuery">
<soap:operation soapAction="urn:BillerWorkplaceQuery#BillerWorkplaceQuery" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:BillerWorkplaceQuery" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:BillerWorkplaceQuery" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="ListRegions">
<soap:operation soapAction="urn:ListRegions#ListRegions" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:ListRegions" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:ListRegions" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="ListPermissionGroups">
<soap:operation soapAction="urn:ListPermissionGroups#ListPermissionGroups" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:ListPermissionGroups" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:ListPermissionGroups" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="ListCurrencies">
<soap:operation soapAction="urn:ListCurrencies#ListCurrencies" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:ListCurrencies" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:ListCurrencies" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="AwardsQuery">
<soap:operation soapAction="urn:AwardsQuery#AwardsQuery" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:AwardsQuery" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:AwardsQuery" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="RuleGroupQuery">
<soap:operation soapAction="urn:RuleGroupQuery#RuleGroupQuery" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:RuleGroupQuery" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:RuleGroupQuery" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="RuleGroupAttachmentsQuery">
<soap:operation soapAction="urn:RuleGroupAttachmentsQuery#RuleGroupAttachmentsQuery" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:RuleGroupAttachmentsQuery" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:RuleGroupAttachmentsQuery" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="CompanyEntityQuery">
<soap:operation soapAction="urn:CompanyEntityQuery#CompanyEntityQuery" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:CompanyEntityQuery" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:CompanyEntityQuery" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="CompanyEntityDivisionQuery">
<soap:operation soapAction="urn:CompanyEntityDivisionQuery#CompanyEntityDivision" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:CompanyEntityDivisionQuery" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:CompanyEntityDivisionQuery" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="DivisionQuery">
<soap:operation soapAction="urn:DivisionQuery#DivisionQuery" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:DivisionQuery" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:DivisionQuery" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="PayCycleQuery">
<soap:operation soapAction="urn:PayCycleQuery#PayCycleQuery" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:PayCycleQuery" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:PayCycleQuery" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="UserSave">
<soap:operation soapAction="urn:UserSave#UserSave" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:UserSave" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:UserSave" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="BillerSave">
<soap:operation soapAction="urn:BillerSave#BillerSave" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:BillerSave" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:BillerSave" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="BillerContactsSave">
<soap:operation soapAction="urn:BillerContactsSave#BillerContactsSave" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:BillerContactsSave" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:BillerContactsSave" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="SupplierSave">
<soap:operation soapAction="urn:SupplierSave#SupplierSave" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:SupplierSave" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:SupplierSave" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="BillerWorkplaceSave">
<soap:operation soapAction="urn:BillerWorkplaceSave#BillerWorkplaceSave" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:BillerWorkplaceSave" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:BillerWorkplaceSave" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="UserDelete">
<soap:operation soapAction="urn:UserDelete#UserDelete" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:UserDelete" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:UserDelete" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="InvoiceItemSave">
<soap:operation soapAction="urn:InvoiceItemSave#InvoiceItemSave" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:InvoiceItemSave" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:InvoiceItemSave" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="InvoiceItemQuery">
<soap:operation soapAction="urn:InvoiceItemQuery#InvoiceItemQuery" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:InvoiceItemQuery" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:InvoiceItemQuery" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="InvoiceItemChargeQuery">
<soap:operation soapAction="urn:InvoiceItemChargeQuery#InvoiceItemChargeQuery" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:InvoiceItemChargeQuery" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:InvoiceItemChargeQuery" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="InvoiceItemRevenueSplitSave">
<soap:operation soapAction="urn:InvoiceItemRevenueSplitSave#InvoiceItemRevenueSplitSave" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:InvoiceItemRevenueSplitSave" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:InvoiceItemRevenueSplitSave" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="InvoiceItemRevenueSplitQuery">
<soap:operation soapAction="urn:InvoiceItemRevenueSplitQuery#InvoiceItemRevenueSplitQuery" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:InvoiceItemRevenueSplitQuery" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:InvoiceItemRevenueSplitQuery" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="ListTaxes">
<soap:operation soapAction="urn:ListTaxes#ListTaxes" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:ListTaxes" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:ListTaxes" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="SubentityLevelOneQuery">
<soap:operation soapAction="urn:SubentityLevelOneQuery#SubentityLevelOneQuery" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:SubentityLevelOneQuery" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:SubentityLevelOneQuery" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="SubentityLevelTwoQuery">
<soap:operation soapAction="urn:SubentityLevelTwoQuery#SubentityLevelTwoQuery" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:SubentityLevelTwoQuery" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:SubentityLevelTwoQuery" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="CompanyEntitySubentityQuery">
<soap:operation soapAction="urn:CompanyEntitySubentityQuery#CompanyEntitySubentityQuery" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:CompanyEntitySubentityQuery" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:CompanyEntitySubentityQuery" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="SubentityAssignmentQuery">
<soap:operation soapAction="urn:SubentityAssignmentQuery#SubentityAssignmentQuery" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:SubentityAssignmentQuery" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:SubentityAssignmentQuery" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="TimesheetSave">
<soap:operation soapAction="urn:TimesheetSave#TimesheetSave" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:TimesheetSave" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:TimesheetSave" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="TimesheetApprove">
<soap:operation soapAction="urn:TimesheetApprove#TimesheetApprove" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:TimesheetApprove" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:TimesheetApprove" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="TimesheetCreateAdjustment">
<soap:operation soapAction="urn:TimesheetCreateAdjustment#TimesheetCreateAdjustment" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:TimesheetCreateAdjustment" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:TimesheetCreateAdjustment" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="TimesheetQuery">
<soap:operation soapAction="urn:TimesheetQuery#TimesheetQuery" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:TimesheetQuery" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:TimesheetQuery" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="ListLeaveTypes">
<soap:operation soapAction="urn:ListLeaveTypes#ListLeaveTypes" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:ListLeaveTypes" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:ListLeaveTypes" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="UserLeaveBalanceList">
<soap:operation soapAction="urn:UserLeaveBalanceList#UserLeaveBalanceList" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:UserLeaveBalanceList" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:UserLeaveBalanceList" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="UserLeaveBalanceSave">
<soap:operation soapAction="urn:UserLeaveBalanceSave#UserLeaveBalanceSave" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:UserLeaveBalanceSave" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:UserLeaveBalanceSave" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="UserLeaveTypeAssign">
<soap:operation soapAction="urn:UserLeaveTypeAssign#UserLeaveTypeAssign" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:UserLeaveTypeAssign" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:UserLeaveTypeAssign" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="UserLeaveTypeUnAssign">
<soap:operation soapAction="urn:UserLeaveTypeUnAssign#UserLeaveTypeUnAssign" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:UserLeaveTypeUnAssign" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:UserLeaveTypeUnAssign" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="PayItemQuery">
<soap:operation soapAction="urn:PayItemQuery#PayItemQuery" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:PayItemQuery" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:PayItemQuery" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="UserAddSuperItem">
<soap:operation soapAction="urn:UserAddSuperItem#UserAddSuperItem" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:UserAddSuperItem" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:UserAddSuperItem" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="UserRemoveSuperItem">
<soap:operation soapAction="urn:UserRemoveSuperItem#UserRemoveSuperItem" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:UserRemoveSuperItem" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:UserRemoveSuperItem" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="SuperItemQuery">
<soap:operation soapAction="urn:SuperItemQuery#SuperItemQuery" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:SuperItemQuery" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:SuperItemQuery" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="UserSuperItemQuery">
<soap:operation soapAction="urn:UserSuperItemQuery#UserSuperItemQuery" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:UserSuperItemQuery" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:UserSuperItemQuery" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="TimesheetAddInterp">
<soap:operation soapAction="urn:PayItemQuery#PayItemQuery" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:PayItemQuery" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:PayItemQuery" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="TimesheetDeleteInterp">
<soap:operation soapAction="urn:TimesheetDeleteInterp#TimesheetDeleteInterp" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:TimesheetDeleteInterp" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:TimesheetDeleteInterp" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="TimesheetQueryInterp">
<soap:operation soapAction="urn:TimesheetQueryInterp#TimesheetQueryInterp" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:TimesheetQueryInterp" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:TimesheetQueryInterp" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="TimesheetAddAttachment">
<soap:operation soapAction="urn:TimesheetAddAttachment#TimesheetAddAttachment" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:TimesheetAddAttachment" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:TimesheetAddAttachment" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="TimesheetRemoveAttachment">
<soap:operation soapAction="urn:TimesheetRemoveAttachment#TimesheetRemoveAttachment" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:TimesheetRemoveAttachment" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:TimesheetRemoveAttachment" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="TimesheetQueryAttachment">
<soap:operation soapAction="urn:TimesheetQueryAttachment#TimesheetQueryAttachment" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:TimesheetQueryAttachment" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:TimesheetQueryAttachment" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="TimesheetInterpQuery">
<soap:operation soapAction="urn:TimesheetInterpQuery#TimesheetInterpQuery" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:TimesheetInterpQuery" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:TimesheetInterpQuery" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="TimesheetAddShift">
<soap:operation soapAction="urn:TimesheetAddShift#TimesheetAddShift" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:TimesheetAddShift" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:TimesheetAddShift" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="TimesheetDeleteShift">
<soap:operation soapAction="urn:TimesheetDeleteShift#TimesheetDeleteShift" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:TimesheetDeleteShift" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:TimesheetDeleteShift" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="TimesheetQueryShift">
<soap:operation soapAction="urn:TimesheetQueryShift#TimesheetQueryShift" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:TimesheetQueryShift" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:TimesheetQueryShift" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="PayrollQuery">
<soap:operation soapAction="urn:PayrollQuery#PayrollQuery" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:PayrollQuery" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:PayrollQuery" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="UserAddDeduction">
<soap:operation soapAction="urn:UserAddDeduction#UserAddDeduction" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:UserAddDeduction" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:UserAddDeduction" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="DeductionQuery">
<soap:operation soapAction="urn:DeductionQuery#DeductionQuery" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:DeductionQuery" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:DeductionQuery" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="UserDeductionQuery">
<soap:operation soapAction="urn:UserDeductionQuery#UserDeductionQuery" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:UserDeductionQuery" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:UserDeductionQuery" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="UserRemoveDeduction">
<soap:operation soapAction="urn:UserRemoveDeduction#UserRemoveDeduction" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:UserRemoveDeduction" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:UserRemoveDeduction" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="UserAddFixedPayItem">
<soap:operation soapAction="urn:UserAddFixedPayItem#UserAddFixedPayItem" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:UserAddFixedPayItem" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:UserAddFixedPayItem" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="UserRemoveFixedPayItem">
<soap:operation soapAction="urn:UserRemoveFixedPayItem#UserRemoveFixedPayItem" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:UserRemoveFixedPayItem" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:UserRemoveFixedPayItem" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="InvoiceBalanceRetrieve">
<soap:operation soapAction="urn:InvoiceBalanceRetrieve#InvoiceBalanceRetrieve" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:InvoiceBalanceRetrieve" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:InvoiceBalanceRetrieve" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="InvoiceBalanceAdjust">
<soap:operation soapAction="urn:InvoiceBalanceAdjust#InvoiceBalanceAdjust" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:InvoiceBalanceAdjust" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:InvoiceBalanceAdjust" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="UserFixedPayItemQuery">
<soap:operation soapAction="urn:UserFixedPayItemQuery#UserFixedPayItemQuery" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:UserFixedPayItemQuery" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:UserFixedPayItemQuery" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="UserAddDocument">
<soap:operation soapAction="urn:UserAddDocument#UserAddDocument" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:UserAddDocument" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:UserAddDocument" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="UserRemoveDocument">
<soap:operation soapAction="urn:UserRemoveDocument#UserRemoveDocument" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:UserRemoveDocument" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:UserRemoveDocument" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="BillerTagAdd">
<soap:operation soapAction="urn:BillerTagAdd#BillerTagAdd" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:BillerTagAdd" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:BillerTagAdd" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="BillerTagRemove">
<soap:operation soapAction="urn:BillerTagRemove#BillerTagRemove" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:BillerTagRemove" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:BillerTagRemove" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="InvoiceItemTypeList">
<soap:operation soapAction="urn:InvoiceItemTypeList#InvoiceItemTypeList" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:InvoiceItemTypeList" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:InvoiceItemTypeList" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="ReportRun">
<soap:operation soapAction="urn:ReportRun#Run" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:ReportRun" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:ReportRun" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="GLGroupQuery">
<soap:operation soapAction="urn:GLGroupQuery#GLGroupQuery" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:GLGroupQuery" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:GLGroupQuery" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="ListGLGroups">
<soap:operation soapAction="urn:ListGLGroups#ListGLGroups" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:ListGLGroups" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:ListGLGroups" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="EmployeeAvailabilitySave">
<soap:operation soapAction="urn:EmployeeAvailabilitySave#EmployeeAvailabilitySave" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:EmployeeAvailabilitySave" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:EmployeeAvailabilitySave" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="EmployeeAvailabilityQuery">
<soap:operation soapAction="urn:EmployeeAvailabilityQuery#EmployeeAvailabilityQuery" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:EmployeeAvailabilityQuery" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:EmployeeAvailabilityQuery" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="EmployeeNonAvailabilityQuery">
<soap:operation soapAction="urn:EmployeeNonAvailabilityQuery#EmployeeNonAvailabilityQuery" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:EmployeeNonAvailabilityQuery" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:EmployeeNonAvailabilityQuery" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="SysTransactionV1Query">
<soap:operation soapAction="urn:SysTransactionV1Query#SysTransactionV1Query" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:SysTransactionV1Query" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:SysTransactionV1Query" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="InsuranceQuery">
<soap:operation soapAction="urn:InsuranceQuery#InsuranceQuery" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:InsuranceQuery" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:InsuranceQuery" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="InvoicePaymentQuery">
<soap:operation soapAction="urn:InvoicePaymentQuery#InvoicePaymentQuery" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:InvoicePaymentQuery" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:InvoicePaymentQuery" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="GetScheduledExtractInfo">
<soap:operation soapAction="urn:GetScheduledExtractInfo#GetScheduledExtractInfo" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:GetScheduledExtractInfo" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:GetScheduledExtractInfo" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="GetStoredFile">
<soap:operation soapAction="urn:GetStoredFile#GetStoredFile" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:GetStoredFile" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:GetStoredFile" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
<operation name="GetStoredFileInfo">
<soap:operation soapAction="urn:GetStoredFileInfo#GetStoredFileInfo" style="rpc"/>
<input>
<soap:body use="encoded" namespace="urn:GetStoredFileInfo" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</input>
<output>
<soap:body use="encoded" namespace="urn:GetStoredFileInfo" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
</output>
</operation>
</binding>
<service name="Astutepayroll.com Web Service v0.80">
<port name="Astutepayroll.com Web Service v0.80Port" binding="tns:Astutepayroll.com_Web_Service_v0.80Binding">
<soap:address location="https://api.astutepayroll.com/webservice/"/>
</port>
</service>
</definitions>